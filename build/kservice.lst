ARM GAS  /tmp/ccPhSWJA.s 			page 1


   1              		.cpu cortex-m3
   2              		.arch armv7-m
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.file	"kservice.c"
  14              		.text
  15              	.Ltext0:
  16              		.cfi_sections	.debug_frame
  17              		.section	.text.print_number,"ax",%progbits
  18              		.align	1
  19              		.syntax unified
  20              		.thumb
  21              		.thumb_func
  23              	print_number:
  24              	.LVL0:
  25              	.LFB33:
  26              		.file 1 "rt_thread/src/kservice.c"
   1:rt_thread/src/kservice.c **** /*
   2:rt_thread/src/kservice.c ****  * Copyright (c) 2006-2021, RT-Thread Development Team
   3:rt_thread/src/kservice.c ****  *
   4:rt_thread/src/kservice.c ****  * SPDX-License-Identifier: Apache-2.0
   5:rt_thread/src/kservice.c ****  *
   6:rt_thread/src/kservice.c ****  * Change Logs:
   7:rt_thread/src/kservice.c ****  * Date           Author       Notes
   8:rt_thread/src/kservice.c ****  * 2006-03-16     Bernard      the first version
   9:rt_thread/src/kservice.c ****  * 2006-05-25     Bernard      rewrite vsprintf
  10:rt_thread/src/kservice.c ****  * 2006-08-10     Bernard      add rt_show_version
  11:rt_thread/src/kservice.c ****  * 2010-03-17     Bernard      remove rt_strlcpy function
  12:rt_thread/src/kservice.c ****  *                             fix gcc compiling issue.
  13:rt_thread/src/kservice.c ****  * 2010-04-15     Bernard      remove weak definition on ICCM16C compiler
  14:rt_thread/src/kservice.c ****  * 2012-07-18     Arda         add the alignment display for signed integer
  15:rt_thread/src/kservice.c ****  * 2012-11-23     Bernard      fix IAR compiler error.
  16:rt_thread/src/kservice.c ****  * 2012-12-22     Bernard      fix rt_kprintf issue, which found by Grissiom.
  17:rt_thread/src/kservice.c ****  * 2013-06-24     Bernard      remove rt_kprintf if RT_USING_CONSOLE is not defined.
  18:rt_thread/src/kservice.c ****  * 2013-09-24     aozima       make sure the device is in STREAM mode when used by rt_kprintf.
  19:rt_thread/src/kservice.c ****  * 2015-07-06     Bernard      Add rt_assert_handler routine.
  20:rt_thread/src/kservice.c ****  */
  21:rt_thread/src/kservice.c **** 
  22:rt_thread/src/kservice.c **** #include <rtthread.h>
  23:rt_thread/src/kservice.c **** #include <rthw.h>
  24:rt_thread/src/kservice.c **** 
  25:rt_thread/src/kservice.c **** /* use precision */
  26:rt_thread/src/kservice.c **** #define RT_PRINTF_PRECISION
  27:rt_thread/src/kservice.c **** 
  28:rt_thread/src/kservice.c **** /**
  29:rt_thread/src/kservice.c ****  * @addtogroup KernelService
  30:rt_thread/src/kservice.c ****  */
  31:rt_thread/src/kservice.c **** 
  32:rt_thread/src/kservice.c **** /**@{*/
ARM GAS  /tmp/ccPhSWJA.s 			page 2


  33:rt_thread/src/kservice.c **** 
  34:rt_thread/src/kservice.c **** /* global errno in RT-Thread */
  35:rt_thread/src/kservice.c **** static volatile int __rt_errno;
  36:rt_thread/src/kservice.c **** 
  37:rt_thread/src/kservice.c **** #if defined(RT_USING_DEVICE) && defined(RT_USING_CONSOLE)
  38:rt_thread/src/kservice.c **** static rt_device_t _console_device = RT_NULL;
  39:rt_thread/src/kservice.c **** #endif
  40:rt_thread/src/kservice.c **** 
  41:rt_thread/src/kservice.c **** /*
  42:rt_thread/src/kservice.c ****  * This function will get errno
  43:rt_thread/src/kservice.c ****  *
  44:rt_thread/src/kservice.c ****  * @return errno
  45:rt_thread/src/kservice.c ****  */
  46:rt_thread/src/kservice.c **** rt_err_t rt_get_errno(void)
  47:rt_thread/src/kservice.c **** {
  48:rt_thread/src/kservice.c ****     rt_thread_t tid;
  49:rt_thread/src/kservice.c **** 
  50:rt_thread/src/kservice.c ****     if (rt_interrupt_get_nest() != 0)
  51:rt_thread/src/kservice.c ****     {
  52:rt_thread/src/kservice.c ****         /* it's in interrupt context */
  53:rt_thread/src/kservice.c ****         return __rt_errno;
  54:rt_thread/src/kservice.c ****     }
  55:rt_thread/src/kservice.c **** 
  56:rt_thread/src/kservice.c ****     tid = rt_thread_self();
  57:rt_thread/src/kservice.c ****     if (tid == RT_NULL)
  58:rt_thread/src/kservice.c ****         return __rt_errno;
  59:rt_thread/src/kservice.c **** 
  60:rt_thread/src/kservice.c ****     return tid->error;
  61:rt_thread/src/kservice.c **** }
  62:rt_thread/src/kservice.c **** 
  63:rt_thread/src/kservice.c **** /*
  64:rt_thread/src/kservice.c ****  * This function will set errno
  65:rt_thread/src/kservice.c ****  *
  66:rt_thread/src/kservice.c ****  * @param error the errno shall be set
  67:rt_thread/src/kservice.c ****  */
  68:rt_thread/src/kservice.c **** void rt_set_errno(rt_err_t error)
  69:rt_thread/src/kservice.c **** {
  70:rt_thread/src/kservice.c ****     rt_thread_t tid;
  71:rt_thread/src/kservice.c **** 
  72:rt_thread/src/kservice.c ****     if (rt_interrupt_get_nest() != 0)
  73:rt_thread/src/kservice.c ****     {
  74:rt_thread/src/kservice.c ****         /* it's in interrupt context */
  75:rt_thread/src/kservice.c ****         __rt_errno = error;
  76:rt_thread/src/kservice.c **** 
  77:rt_thread/src/kservice.c ****         return;
  78:rt_thread/src/kservice.c ****     }
  79:rt_thread/src/kservice.c **** 
  80:rt_thread/src/kservice.c ****     tid = rt_thread_self();
  81:rt_thread/src/kservice.c ****     if (tid == RT_NULL)
  82:rt_thread/src/kservice.c ****     {
  83:rt_thread/src/kservice.c ****         __rt_errno = error;
  84:rt_thread/src/kservice.c **** 
  85:rt_thread/src/kservice.c ****         return;
  86:rt_thread/src/kservice.c ****     }
  87:rt_thread/src/kservice.c **** 
  88:rt_thread/src/kservice.c ****     tid->error = error;
  89:rt_thread/src/kservice.c **** }
ARM GAS  /tmp/ccPhSWJA.s 			page 3


  90:rt_thread/src/kservice.c **** 
  91:rt_thread/src/kservice.c **** /**
  92:rt_thread/src/kservice.c ****  * This function returns errno.
  93:rt_thread/src/kservice.c ****  *
  94:rt_thread/src/kservice.c ****  * @return the errno in the system
  95:rt_thread/src/kservice.c ****  */
  96:rt_thread/src/kservice.c **** int *_rt_errno(void)
  97:rt_thread/src/kservice.c **** {
  98:rt_thread/src/kservice.c ****     rt_thread_t tid;
  99:rt_thread/src/kservice.c **** 
 100:rt_thread/src/kservice.c ****     if (rt_interrupt_get_nest() != 0)
 101:rt_thread/src/kservice.c ****         return (int *)&__rt_errno;
 102:rt_thread/src/kservice.c **** 
 103:rt_thread/src/kservice.c ****     tid = rt_thread_self();
 104:rt_thread/src/kservice.c ****     if (tid != RT_NULL)
 105:rt_thread/src/kservice.c ****         return (int *) & (tid->error);
 106:rt_thread/src/kservice.c **** 
 107:rt_thread/src/kservice.c ****     return (int *)&__rt_errno;
 108:rt_thread/src/kservice.c **** }
 109:rt_thread/src/kservice.c **** 
 110:rt_thread/src/kservice.c **** /**
 111:rt_thread/src/kservice.c ****  * This function will set the content of memory to specified value
 112:rt_thread/src/kservice.c ****  *
 113:rt_thread/src/kservice.c ****  * @param s the address of source memory
 114:rt_thread/src/kservice.c ****  * @param c the value shall be set in content
 115:rt_thread/src/kservice.c ****  * @param count the copied length
 116:rt_thread/src/kservice.c ****  *
 117:rt_thread/src/kservice.c ****  * @return the address of source memory
 118:rt_thread/src/kservice.c ****  */
 119:rt_thread/src/kservice.c **** void *rt_memset(void *s, int c, rt_ubase_t count)
 120:rt_thread/src/kservice.c **** {
 121:rt_thread/src/kservice.c **** #ifdef RT_USING_TINY_SIZE
 122:rt_thread/src/kservice.c ****     char *xs = (char *)s;
 123:rt_thread/src/kservice.c **** 
 124:rt_thread/src/kservice.c ****     while (count--)
 125:rt_thread/src/kservice.c ****         *xs++ = c;
 126:rt_thread/src/kservice.c **** 
 127:rt_thread/src/kservice.c ****     return s;
 128:rt_thread/src/kservice.c **** #else
 129:rt_thread/src/kservice.c **** #define LBLOCKSIZE      (sizeof(long))
 130:rt_thread/src/kservice.c **** #define UNALIGNED(X)    ((long)X & (LBLOCKSIZE - 1))
 131:rt_thread/src/kservice.c **** #define TOO_SMALL(LEN)  ((LEN) < LBLOCKSIZE)
 132:rt_thread/src/kservice.c **** 
 133:rt_thread/src/kservice.c ****     unsigned int i;
 134:rt_thread/src/kservice.c ****     char *m = (char *)s;
 135:rt_thread/src/kservice.c ****     unsigned long buffer;
 136:rt_thread/src/kservice.c ****     unsigned long *aligned_addr;
 137:rt_thread/src/kservice.c ****     unsigned int d = c & 0xff;  /* To avoid sign extension, copy C to an
 138:rt_thread/src/kservice.c ****                                 unsigned variable.  */
 139:rt_thread/src/kservice.c **** 
 140:rt_thread/src/kservice.c ****     if (!TOO_SMALL(count) && !UNALIGNED(s))
 141:rt_thread/src/kservice.c ****     {
 142:rt_thread/src/kservice.c ****         /* If we get this far, we know that n is large and m is word-aligned. */
 143:rt_thread/src/kservice.c ****         aligned_addr = (unsigned long *)s;
 144:rt_thread/src/kservice.c **** 
 145:rt_thread/src/kservice.c ****         /* Store D into each char sized location in BUFFER so that
 146:rt_thread/src/kservice.c ****          * we can set large blocks quickly.
ARM GAS  /tmp/ccPhSWJA.s 			page 4


 147:rt_thread/src/kservice.c ****          */
 148:rt_thread/src/kservice.c ****         if (LBLOCKSIZE == 4)
 149:rt_thread/src/kservice.c ****         {
 150:rt_thread/src/kservice.c ****             buffer = (d << 8) | d;
 151:rt_thread/src/kservice.c ****             buffer |= (buffer << 16);
 152:rt_thread/src/kservice.c ****         }
 153:rt_thread/src/kservice.c ****         else
 154:rt_thread/src/kservice.c ****         {
 155:rt_thread/src/kservice.c ****             buffer = 0;
 156:rt_thread/src/kservice.c ****             for (i = 0; i < LBLOCKSIZE; i ++)
 157:rt_thread/src/kservice.c ****                 buffer = (buffer << 8) | d;
 158:rt_thread/src/kservice.c ****         }
 159:rt_thread/src/kservice.c **** 
 160:rt_thread/src/kservice.c ****         while (count >= LBLOCKSIZE * 4)
 161:rt_thread/src/kservice.c ****         {
 162:rt_thread/src/kservice.c ****             *aligned_addr++ = buffer;
 163:rt_thread/src/kservice.c ****             *aligned_addr++ = buffer;
 164:rt_thread/src/kservice.c ****             *aligned_addr++ = buffer;
 165:rt_thread/src/kservice.c ****             *aligned_addr++ = buffer;
 166:rt_thread/src/kservice.c ****             count -= 4 * LBLOCKSIZE;
 167:rt_thread/src/kservice.c ****         }
 168:rt_thread/src/kservice.c **** 
 169:rt_thread/src/kservice.c ****         while (count >= LBLOCKSIZE)
 170:rt_thread/src/kservice.c ****         {
 171:rt_thread/src/kservice.c ****             *aligned_addr++ = buffer;
 172:rt_thread/src/kservice.c ****             count -= LBLOCKSIZE;
 173:rt_thread/src/kservice.c ****         }
 174:rt_thread/src/kservice.c **** 
 175:rt_thread/src/kservice.c ****         /* Pick up the remainder with a bytewise loop. */
 176:rt_thread/src/kservice.c ****         m = (char *)aligned_addr;
 177:rt_thread/src/kservice.c ****     }
 178:rt_thread/src/kservice.c **** 
 179:rt_thread/src/kservice.c ****     while (count--)
 180:rt_thread/src/kservice.c ****     {
 181:rt_thread/src/kservice.c ****         *m++ = (char)d;
 182:rt_thread/src/kservice.c ****     }
 183:rt_thread/src/kservice.c **** 
 184:rt_thread/src/kservice.c ****     return s;
 185:rt_thread/src/kservice.c **** 
 186:rt_thread/src/kservice.c **** #undef LBLOCKSIZE
 187:rt_thread/src/kservice.c **** #undef UNALIGNED
 188:rt_thread/src/kservice.c **** #undef TOO_SMALL
 189:rt_thread/src/kservice.c **** #endif
 190:rt_thread/src/kservice.c **** }
 191:rt_thread/src/kservice.c **** 
 192:rt_thread/src/kservice.c **** /**
 193:rt_thread/src/kservice.c ****  * This function will copy memory content from source address to destination
 194:rt_thread/src/kservice.c ****  * address.
 195:rt_thread/src/kservice.c ****  *
 196:rt_thread/src/kservice.c ****  * @param dst the address of destination memory
 197:rt_thread/src/kservice.c ****  * @param src  the address of source memory
 198:rt_thread/src/kservice.c ****  * @param count the copied length
 199:rt_thread/src/kservice.c ****  *
 200:rt_thread/src/kservice.c ****  * @return the address of destination memory
 201:rt_thread/src/kservice.c ****  */
 202:rt_thread/src/kservice.c **** void *rt_memcpy(void *dst, const void *src, rt_ubase_t count)
 203:rt_thread/src/kservice.c **** {
ARM GAS  /tmp/ccPhSWJA.s 			page 5


 204:rt_thread/src/kservice.c **** #ifdef RT_USING_TINY_SIZE
 205:rt_thread/src/kservice.c ****     char *tmp = (char *)dst, *s = (char *)src;
 206:rt_thread/src/kservice.c ****     rt_ubase_t len;
 207:rt_thread/src/kservice.c **** 
 208:rt_thread/src/kservice.c ****     if (tmp <= s || tmp > (s + count))
 209:rt_thread/src/kservice.c ****     {
 210:rt_thread/src/kservice.c ****         while (count--)
 211:rt_thread/src/kservice.c ****             *tmp ++ = *s ++;
 212:rt_thread/src/kservice.c ****     }
 213:rt_thread/src/kservice.c ****     else
 214:rt_thread/src/kservice.c ****     {
 215:rt_thread/src/kservice.c ****         for (len = count; len > 0; len --)
 216:rt_thread/src/kservice.c ****             tmp[len - 1] = s[len - 1];
 217:rt_thread/src/kservice.c ****     }
 218:rt_thread/src/kservice.c **** 
 219:rt_thread/src/kservice.c ****     return dst;
 220:rt_thread/src/kservice.c **** #else
 221:rt_thread/src/kservice.c **** 
 222:rt_thread/src/kservice.c **** #define UNALIGNED(X, Y) \
 223:rt_thread/src/kservice.c ****     (((long)X & (sizeof (long) - 1)) | ((long)Y & (sizeof (long) - 1)))
 224:rt_thread/src/kservice.c **** #define BIGBLOCKSIZE    (sizeof (long) << 2)
 225:rt_thread/src/kservice.c **** #define LITTLEBLOCKSIZE (sizeof (long))
 226:rt_thread/src/kservice.c **** #define TOO_SMALL(LEN)  ((LEN) < BIGBLOCKSIZE)
 227:rt_thread/src/kservice.c **** 
 228:rt_thread/src/kservice.c ****     char *dst_ptr = (char *)dst;
 229:rt_thread/src/kservice.c ****     char *src_ptr = (char *)src;
 230:rt_thread/src/kservice.c ****     long *aligned_dst;
 231:rt_thread/src/kservice.c ****     long *aligned_src;
 232:rt_thread/src/kservice.c ****     int len = count;
 233:rt_thread/src/kservice.c **** 
 234:rt_thread/src/kservice.c ****     /* If the size is small, or either SRC or DST is unaligned,
 235:rt_thread/src/kservice.c ****     then punt into the byte copy loop.  This should be rare. */
 236:rt_thread/src/kservice.c ****     if (!TOO_SMALL(len) && !UNALIGNED(src_ptr, dst_ptr))
 237:rt_thread/src/kservice.c ****     {
 238:rt_thread/src/kservice.c ****         aligned_dst = (long *)dst_ptr;
 239:rt_thread/src/kservice.c ****         aligned_src = (long *)src_ptr;
 240:rt_thread/src/kservice.c **** 
 241:rt_thread/src/kservice.c ****         /* Copy 4X long words at a time if possible. */
 242:rt_thread/src/kservice.c ****         while (len >= BIGBLOCKSIZE)
 243:rt_thread/src/kservice.c ****         {
 244:rt_thread/src/kservice.c ****             *aligned_dst++ = *aligned_src++;
 245:rt_thread/src/kservice.c ****             *aligned_dst++ = *aligned_src++;
 246:rt_thread/src/kservice.c ****             *aligned_dst++ = *aligned_src++;
 247:rt_thread/src/kservice.c ****             *aligned_dst++ = *aligned_src++;
 248:rt_thread/src/kservice.c ****             len -= BIGBLOCKSIZE;
 249:rt_thread/src/kservice.c ****         }
 250:rt_thread/src/kservice.c **** 
 251:rt_thread/src/kservice.c ****         /* Copy one long word at a time if possible. */
 252:rt_thread/src/kservice.c ****         while (len >= LITTLEBLOCKSIZE)
 253:rt_thread/src/kservice.c ****         {
 254:rt_thread/src/kservice.c ****             *aligned_dst++ = *aligned_src++;
 255:rt_thread/src/kservice.c ****             len -= LITTLEBLOCKSIZE;
 256:rt_thread/src/kservice.c ****         }
 257:rt_thread/src/kservice.c **** 
 258:rt_thread/src/kservice.c ****         /* Pick up any residual with a byte copier. */
 259:rt_thread/src/kservice.c ****         dst_ptr = (char *)aligned_dst;
 260:rt_thread/src/kservice.c ****         src_ptr = (char *)aligned_src;
ARM GAS  /tmp/ccPhSWJA.s 			page 6


 261:rt_thread/src/kservice.c ****     }
 262:rt_thread/src/kservice.c **** 
 263:rt_thread/src/kservice.c ****     while (len--)
 264:rt_thread/src/kservice.c ****         *dst_ptr++ = *src_ptr++;
 265:rt_thread/src/kservice.c **** 
 266:rt_thread/src/kservice.c ****     return dst;
 267:rt_thread/src/kservice.c **** #undef UNALIGNED
 268:rt_thread/src/kservice.c **** #undef BIGBLOCKSIZE
 269:rt_thread/src/kservice.c **** #undef LITTLEBLOCKSIZE
 270:rt_thread/src/kservice.c **** #undef TOO_SMALL
 271:rt_thread/src/kservice.c **** #endif
 272:rt_thread/src/kservice.c **** }
 273:rt_thread/src/kservice.c **** 
 274:rt_thread/src/kservice.c **** /**
 275:rt_thread/src/kservice.c ****  * This function will move memory content from source address to destination
 276:rt_thread/src/kservice.c ****  * address.
 277:rt_thread/src/kservice.c ****  *
 278:rt_thread/src/kservice.c ****  * @param dest the address of destination memory
 279:rt_thread/src/kservice.c ****  * @param src  the address of source memory
 280:rt_thread/src/kservice.c ****  * @param n the copied length
 281:rt_thread/src/kservice.c ****  *
 282:rt_thread/src/kservice.c ****  * @return the address of destination memory
 283:rt_thread/src/kservice.c ****  */
 284:rt_thread/src/kservice.c **** void *rt_memmove(void *dest, const void *src, rt_ubase_t n)
 285:rt_thread/src/kservice.c **** {
 286:rt_thread/src/kservice.c ****     char *tmp = (char *)dest, *s = (char *)src;
 287:rt_thread/src/kservice.c **** 
 288:rt_thread/src/kservice.c ****     if (s < tmp && tmp < s + n)
 289:rt_thread/src/kservice.c ****     {
 290:rt_thread/src/kservice.c ****         tmp += n;
 291:rt_thread/src/kservice.c ****         s += n;
 292:rt_thread/src/kservice.c **** 
 293:rt_thread/src/kservice.c ****         while (n--)
 294:rt_thread/src/kservice.c ****             *(--tmp) = *(--s);
 295:rt_thread/src/kservice.c ****     }
 296:rt_thread/src/kservice.c ****     else
 297:rt_thread/src/kservice.c ****     {
 298:rt_thread/src/kservice.c ****         while (n--)
 299:rt_thread/src/kservice.c ****             *tmp++ = *s++;
 300:rt_thread/src/kservice.c ****     }
 301:rt_thread/src/kservice.c **** 
 302:rt_thread/src/kservice.c ****     return dest;
 303:rt_thread/src/kservice.c **** }
 304:rt_thread/src/kservice.c **** 
 305:rt_thread/src/kservice.c **** /**
 306:rt_thread/src/kservice.c ****  * This function will compare two areas of memory
 307:rt_thread/src/kservice.c ****  *
 308:rt_thread/src/kservice.c ****  * @param cs one area of memory
 309:rt_thread/src/kservice.c ****  * @param ct another area of memory
 310:rt_thread/src/kservice.c ****  * @param count the size of the area
 311:rt_thread/src/kservice.c ****  *
 312:rt_thread/src/kservice.c ****  * @return the result
 313:rt_thread/src/kservice.c ****  */
 314:rt_thread/src/kservice.c **** rt_int32_t rt_memcmp(const void *cs, const void *ct, rt_ubase_t count)
 315:rt_thread/src/kservice.c **** {
 316:rt_thread/src/kservice.c ****     const unsigned char *su1, *su2;
 317:rt_thread/src/kservice.c ****     int res = 0;
ARM GAS  /tmp/ccPhSWJA.s 			page 7


 318:rt_thread/src/kservice.c **** 
 319:rt_thread/src/kservice.c ****     for (su1 = (const unsigned char *)cs, su2 = (const unsigned char *)ct; 0 < count; ++su1, ++su2,
 320:rt_thread/src/kservice.c ****         if ((res = *su1 - *su2) != 0)
 321:rt_thread/src/kservice.c ****             break;
 322:rt_thread/src/kservice.c **** 
 323:rt_thread/src/kservice.c ****     return res;
 324:rt_thread/src/kservice.c **** }
 325:rt_thread/src/kservice.c **** 
 326:rt_thread/src/kservice.c **** /**
 327:rt_thread/src/kservice.c ****  * This function will return the first occurrence of a string.
 328:rt_thread/src/kservice.c ****  *
 329:rt_thread/src/kservice.c ****  * @param s1 the source string
 330:rt_thread/src/kservice.c ****  * @param s2 the find string
 331:rt_thread/src/kservice.c ****  *
 332:rt_thread/src/kservice.c ****  * @return the first occurrence of a s2 in s1, or RT_NULL if no found.
 333:rt_thread/src/kservice.c ****  */
 334:rt_thread/src/kservice.c **** char *rt_strstr(const char *s1, const char *s2)
 335:rt_thread/src/kservice.c **** {
 336:rt_thread/src/kservice.c ****     int l1, l2;
 337:rt_thread/src/kservice.c **** 
 338:rt_thread/src/kservice.c ****     l2 = rt_strlen(s2);
 339:rt_thread/src/kservice.c ****     if (!l2)
 340:rt_thread/src/kservice.c ****         return (char *)s1;
 341:rt_thread/src/kservice.c ****     l1 = rt_strlen(s1);
 342:rt_thread/src/kservice.c ****     while (l1 >= l2)
 343:rt_thread/src/kservice.c ****     {
 344:rt_thread/src/kservice.c ****         l1 --;
 345:rt_thread/src/kservice.c ****         if (!rt_memcmp(s1, s2, l2))
 346:rt_thread/src/kservice.c ****             return (char *)s1;
 347:rt_thread/src/kservice.c ****         s1 ++;
 348:rt_thread/src/kservice.c ****     }
 349:rt_thread/src/kservice.c **** 
 350:rt_thread/src/kservice.c ****     return RT_NULL;
 351:rt_thread/src/kservice.c **** }
 352:rt_thread/src/kservice.c **** 
 353:rt_thread/src/kservice.c **** /**
 354:rt_thread/src/kservice.c ****  * This function will compare two strings while ignoring differences in case
 355:rt_thread/src/kservice.c ****  *
 356:rt_thread/src/kservice.c ****  * @param a the string to be compared
 357:rt_thread/src/kservice.c ****  * @param b the string to be compared
 358:rt_thread/src/kservice.c ****  *
 359:rt_thread/src/kservice.c ****  * @return the result
 360:rt_thread/src/kservice.c ****  */
 361:rt_thread/src/kservice.c **** rt_int32_t rt_strcasecmp(const char *a, const char *b)
 362:rt_thread/src/kservice.c **** {
 363:rt_thread/src/kservice.c ****     int ca, cb;
 364:rt_thread/src/kservice.c **** 
 365:rt_thread/src/kservice.c ****     do
 366:rt_thread/src/kservice.c ****     {
 367:rt_thread/src/kservice.c ****         ca = *a++ & 0xff;
 368:rt_thread/src/kservice.c ****         cb = *b++ & 0xff;
 369:rt_thread/src/kservice.c ****         if (ca >= 'A' && ca <= 'Z')
 370:rt_thread/src/kservice.c ****             ca += 'a' - 'A';
 371:rt_thread/src/kservice.c ****         if (cb >= 'A' && cb <= 'Z')
 372:rt_thread/src/kservice.c ****             cb += 'a' - 'A';
 373:rt_thread/src/kservice.c ****     }
 374:rt_thread/src/kservice.c ****     while (ca == cb && ca != '\0');
ARM GAS  /tmp/ccPhSWJA.s 			page 8


 375:rt_thread/src/kservice.c **** 
 376:rt_thread/src/kservice.c ****     return ca - cb;
 377:rt_thread/src/kservice.c **** }
 378:rt_thread/src/kservice.c **** 
 379:rt_thread/src/kservice.c **** /**
 380:rt_thread/src/kservice.c ****  * This function will copy string no more than n bytes.
 381:rt_thread/src/kservice.c ****  *
 382:rt_thread/src/kservice.c ****  * @param dst the string to copy
 383:rt_thread/src/kservice.c ****  * @param src the string to be copied
 384:rt_thread/src/kservice.c ****  * @param n the maximum copied length
 385:rt_thread/src/kservice.c ****  *
 386:rt_thread/src/kservice.c ****  * @return the result
 387:rt_thread/src/kservice.c ****  */
 388:rt_thread/src/kservice.c **** char *rt_strncpy(char *dst, const char *src, rt_ubase_t n)
 389:rt_thread/src/kservice.c **** {
 390:rt_thread/src/kservice.c ****     if (n != 0)
 391:rt_thread/src/kservice.c ****     {
 392:rt_thread/src/kservice.c ****         char *d = dst;
 393:rt_thread/src/kservice.c ****         const char *s = src;
 394:rt_thread/src/kservice.c **** 
 395:rt_thread/src/kservice.c ****         do
 396:rt_thread/src/kservice.c ****         {
 397:rt_thread/src/kservice.c ****             if ((*d++ = *s++) == 0)
 398:rt_thread/src/kservice.c ****             {
 399:rt_thread/src/kservice.c ****                 /* NUL pad the remaining n-1 bytes */
 400:rt_thread/src/kservice.c ****                 while (--n != 0)
 401:rt_thread/src/kservice.c ****                     *d++ = 0;
 402:rt_thread/src/kservice.c ****                 break;
 403:rt_thread/src/kservice.c ****             }
 404:rt_thread/src/kservice.c ****         } while (--n != 0);
 405:rt_thread/src/kservice.c ****     }
 406:rt_thread/src/kservice.c **** 
 407:rt_thread/src/kservice.c ****     return (dst);
 408:rt_thread/src/kservice.c **** }
 409:rt_thread/src/kservice.c **** 
 410:rt_thread/src/kservice.c **** /**
 411:rt_thread/src/kservice.c ****  * This function will compare two strings with specified maximum length
 412:rt_thread/src/kservice.c ****  *
 413:rt_thread/src/kservice.c ****  * @param cs the string to be compared
 414:rt_thread/src/kservice.c ****  * @param ct the string to be compared
 415:rt_thread/src/kservice.c ****  * @param count the maximum compare length
 416:rt_thread/src/kservice.c ****  *
 417:rt_thread/src/kservice.c ****  * @return the result
 418:rt_thread/src/kservice.c ****  */
 419:rt_thread/src/kservice.c **** rt_int32_t rt_strncmp(const char *cs, const char *ct, rt_ubase_t count)
 420:rt_thread/src/kservice.c **** {
 421:rt_thread/src/kservice.c ****     register signed char __res = 0;
 422:rt_thread/src/kservice.c **** 
 423:rt_thread/src/kservice.c ****     while (count)
 424:rt_thread/src/kservice.c ****     {
 425:rt_thread/src/kservice.c ****         if ((__res = *cs - *ct++) != 0 || !*cs++)
 426:rt_thread/src/kservice.c ****             break;
 427:rt_thread/src/kservice.c ****         count --;
 428:rt_thread/src/kservice.c ****     }
 429:rt_thread/src/kservice.c **** 
 430:rt_thread/src/kservice.c ****     return __res;
 431:rt_thread/src/kservice.c **** }
ARM GAS  /tmp/ccPhSWJA.s 			page 9


 432:rt_thread/src/kservice.c **** 
 433:rt_thread/src/kservice.c **** /**
 434:rt_thread/src/kservice.c ****  * This function will compare two strings without specified length
 435:rt_thread/src/kservice.c ****  *
 436:rt_thread/src/kservice.c ****  * @param cs the string to be compared
 437:rt_thread/src/kservice.c ****  * @param ct the string to be compared
 438:rt_thread/src/kservice.c ****  *
 439:rt_thread/src/kservice.c ****  * @return the result
 440:rt_thread/src/kservice.c ****  */
 441:rt_thread/src/kservice.c **** rt_int32_t rt_strcmp(const char *cs, const char *ct)
 442:rt_thread/src/kservice.c **** {
 443:rt_thread/src/kservice.c ****     while (*cs && *cs == *ct)
 444:rt_thread/src/kservice.c ****     {
 445:rt_thread/src/kservice.c ****         cs++;
 446:rt_thread/src/kservice.c ****         ct++;
 447:rt_thread/src/kservice.c ****     }
 448:rt_thread/src/kservice.c **** 
 449:rt_thread/src/kservice.c ****     return (*cs - *ct);
 450:rt_thread/src/kservice.c **** }
 451:rt_thread/src/kservice.c **** 
 452:rt_thread/src/kservice.c **** /**
 453:rt_thread/src/kservice.c ****  * The  strnlen()  function  returns the number of characters in the
 454:rt_thread/src/kservice.c ****  * string pointed to by s, excluding the terminating null byte ('\0'),
 455:rt_thread/src/kservice.c ****  * but at most maxlen.  In doing this, strnlen() looks only at the
 456:rt_thread/src/kservice.c ****  * first maxlen characters in the string pointed to by s and never
 457:rt_thread/src/kservice.c ****  * beyond s+maxlen.
 458:rt_thread/src/kservice.c ****  *
 459:rt_thread/src/kservice.c ****  * @param s the string
 460:rt_thread/src/kservice.c ****  * @param maxlen the max size
 461:rt_thread/src/kservice.c ****  * @return the length of string
 462:rt_thread/src/kservice.c ****  */
 463:rt_thread/src/kservice.c **** rt_size_t rt_strnlen(const char *s, rt_ubase_t maxlen)
 464:rt_thread/src/kservice.c **** {
 465:rt_thread/src/kservice.c ****     const char *sc;
 466:rt_thread/src/kservice.c **** 
 467:rt_thread/src/kservice.c ****     for (sc = s; *sc != '\0' && (rt_ubase_t)(sc - s) < maxlen; ++sc) /* nothing */
 468:rt_thread/src/kservice.c ****         ;
 469:rt_thread/src/kservice.c **** 
 470:rt_thread/src/kservice.c ****     return sc - s;
 471:rt_thread/src/kservice.c **** }
 472:rt_thread/src/kservice.c **** 
 473:rt_thread/src/kservice.c **** /**
 474:rt_thread/src/kservice.c ****  * This function will return the length of a string, which terminate will
 475:rt_thread/src/kservice.c ****  * null character.
 476:rt_thread/src/kservice.c ****  *
 477:rt_thread/src/kservice.c ****  * @param s the string
 478:rt_thread/src/kservice.c ****  *
 479:rt_thread/src/kservice.c ****  * @return the length of string
 480:rt_thread/src/kservice.c ****  */
 481:rt_thread/src/kservice.c **** rt_size_t rt_strlen(const char *s)
 482:rt_thread/src/kservice.c **** {
 483:rt_thread/src/kservice.c ****     const char *sc;
 484:rt_thread/src/kservice.c **** 
 485:rt_thread/src/kservice.c ****     for (sc = s; *sc != '\0'; ++sc) /* nothing */
 486:rt_thread/src/kservice.c ****         ;
 487:rt_thread/src/kservice.c **** 
 488:rt_thread/src/kservice.c ****     return sc - s;
ARM GAS  /tmp/ccPhSWJA.s 			page 10


 489:rt_thread/src/kservice.c **** }
 490:rt_thread/src/kservice.c **** 
 491:rt_thread/src/kservice.c **** #ifdef RT_USING_HEAP
 492:rt_thread/src/kservice.c **** /**
 493:rt_thread/src/kservice.c ****  * This function will duplicate a string.
 494:rt_thread/src/kservice.c ****  *
 495:rt_thread/src/kservice.c ****  * @param s the string to be duplicated
 496:rt_thread/src/kservice.c ****  *
 497:rt_thread/src/kservice.c ****  * @return the duplicated string pointer
 498:rt_thread/src/kservice.c ****  */
 499:rt_thread/src/kservice.c **** char *rt_strdup(const char *s)
 500:rt_thread/src/kservice.c **** {
 501:rt_thread/src/kservice.c ****     rt_size_t len = rt_strlen(s) + 1;
 502:rt_thread/src/kservice.c ****     char *tmp = (char *)rt_malloc(len);
 503:rt_thread/src/kservice.c **** 
 504:rt_thread/src/kservice.c ****     if (!tmp)
 505:rt_thread/src/kservice.c ****         return RT_NULL;
 506:rt_thread/src/kservice.c **** 
 507:rt_thread/src/kservice.c ****     rt_memcpy(tmp, s, len);
 508:rt_thread/src/kservice.c **** 
 509:rt_thread/src/kservice.c ****     return tmp;
 510:rt_thread/src/kservice.c **** }
 511:rt_thread/src/kservice.c **** 
 512:rt_thread/src/kservice.c **** #if defined(__CC_ARM) || defined(__CLANG_ARM)
 513:rt_thread/src/kservice.c **** char *strdup(const char *s) __attribute__((alias("rt_strdup")));
 514:rt_thread/src/kservice.c **** #endif
 515:rt_thread/src/kservice.c **** #endif
 516:rt_thread/src/kservice.c **** 
 517:rt_thread/src/kservice.c **** /**
 518:rt_thread/src/kservice.c ****  * This function will show the version of rt-thread rtos
 519:rt_thread/src/kservice.c ****  */
 520:rt_thread/src/kservice.c **** void rt_show_version(void)
 521:rt_thread/src/kservice.c **** {
 522:rt_thread/src/kservice.c ****     rt_kprintf("\n \\ | /\n");
 523:rt_thread/src/kservice.c ****     rt_kprintf("- RT -     Thread Operating System\n");
 524:rt_thread/src/kservice.c ****     rt_kprintf(" / | \\     %d.%d.%d build %s\n",
 525:rt_thread/src/kservice.c ****                RT_VERSION, RT_SUBVERSION, RT_REVISION, __DATE__);
 526:rt_thread/src/kservice.c ****     rt_kprintf(" 2006 - 2020 Copyright by rt-thread team\n");
 527:rt_thread/src/kservice.c **** }
 528:rt_thread/src/kservice.c **** 
 529:rt_thread/src/kservice.c **** /* private function */
 530:rt_thread/src/kservice.c **** #define _ISDIGIT(c)  ((unsigned)((c) - '0') < 10)
 531:rt_thread/src/kservice.c **** 
 532:rt_thread/src/kservice.c **** #ifdef RT_PRINTF_LONGLONG
 533:rt_thread/src/kservice.c **** rt_inline int divide(long long *n, int base)
 534:rt_thread/src/kservice.c **** {
 535:rt_thread/src/kservice.c ****     int res;
 536:rt_thread/src/kservice.c **** 
 537:rt_thread/src/kservice.c ****     /* optimized for processor which does not support divide instructions. */
 538:rt_thread/src/kservice.c ****     if (base == 10)
 539:rt_thread/src/kservice.c ****     {
 540:rt_thread/src/kservice.c ****         res = (int)(((unsigned long long)*n) % 10U);
 541:rt_thread/src/kservice.c ****         *n = (long long)(((unsigned long long)*n) / 10U);
 542:rt_thread/src/kservice.c ****     }
 543:rt_thread/src/kservice.c ****     else
 544:rt_thread/src/kservice.c ****     {
 545:rt_thread/src/kservice.c ****         res = (int)(((unsigned long long)*n) % 16U);
ARM GAS  /tmp/ccPhSWJA.s 			page 11


 546:rt_thread/src/kservice.c ****         *n = (long long)(((unsigned long long)*n) / 16U);
 547:rt_thread/src/kservice.c ****     }
 548:rt_thread/src/kservice.c **** 
 549:rt_thread/src/kservice.c ****     return res;
 550:rt_thread/src/kservice.c **** }
 551:rt_thread/src/kservice.c **** #else
 552:rt_thread/src/kservice.c **** rt_inline int divide(long *n, int base)
 553:rt_thread/src/kservice.c **** {
 554:rt_thread/src/kservice.c ****     int res;
 555:rt_thread/src/kservice.c **** 
 556:rt_thread/src/kservice.c ****     /* optimized for processor which does not support divide instructions. */
 557:rt_thread/src/kservice.c ****     if (base == 10)
 558:rt_thread/src/kservice.c ****     {
 559:rt_thread/src/kservice.c ****         res = (int)(((unsigned long)*n) % 10U);
 560:rt_thread/src/kservice.c ****         *n = (long)(((unsigned long)*n) / 10U);
 561:rt_thread/src/kservice.c ****     }
 562:rt_thread/src/kservice.c ****     else
 563:rt_thread/src/kservice.c ****     {
 564:rt_thread/src/kservice.c ****         res = (int)(((unsigned long)*n) % 16U);
 565:rt_thread/src/kservice.c ****         *n = (long)(((unsigned long)*n) / 16U);
 566:rt_thread/src/kservice.c ****     }
 567:rt_thread/src/kservice.c **** 
 568:rt_thread/src/kservice.c ****     return res;
 569:rt_thread/src/kservice.c **** }
 570:rt_thread/src/kservice.c **** #endif
 571:rt_thread/src/kservice.c **** 
 572:rt_thread/src/kservice.c **** rt_inline int skip_atoi(const char **s)
 573:rt_thread/src/kservice.c **** {
 574:rt_thread/src/kservice.c ****     register int i = 0;
 575:rt_thread/src/kservice.c ****     while (_ISDIGIT(**s))
 576:rt_thread/src/kservice.c ****         i = i * 10 + *((*s)++) - '0';
 577:rt_thread/src/kservice.c **** 
 578:rt_thread/src/kservice.c ****     return i;
 579:rt_thread/src/kservice.c **** }
 580:rt_thread/src/kservice.c **** 
 581:rt_thread/src/kservice.c **** #define ZEROPAD     (1 << 0)    /* pad with zero */
 582:rt_thread/src/kservice.c **** #define SIGN        (1 << 1)    /* unsigned/signed long */
 583:rt_thread/src/kservice.c **** #define PLUS        (1 << 2)    /* show plus */
 584:rt_thread/src/kservice.c **** #define SPACE       (1 << 3)    /* space if plus */
 585:rt_thread/src/kservice.c **** #define LEFT        (1 << 4)    /* left justified */
 586:rt_thread/src/kservice.c **** #define SPECIAL     (1 << 5)    /* 0x */
 587:rt_thread/src/kservice.c **** #define LARGE       (1 << 6)    /* use 'ABCDEF' instead of 'abcdef' */
 588:rt_thread/src/kservice.c **** 
 589:rt_thread/src/kservice.c **** #ifdef RT_PRINTF_PRECISION
 590:rt_thread/src/kservice.c **** static char *print_number(char *buf,
 591:rt_thread/src/kservice.c ****                           char *end,
 592:rt_thread/src/kservice.c **** #ifdef RT_PRINTF_LONGLONG
 593:rt_thread/src/kservice.c ****                           long long  num,
 594:rt_thread/src/kservice.c **** #else
 595:rt_thread/src/kservice.c ****                           long  num,
 596:rt_thread/src/kservice.c **** #endif
 597:rt_thread/src/kservice.c ****                           int   base,
 598:rt_thread/src/kservice.c ****                           int   s,
 599:rt_thread/src/kservice.c ****                           int   precision,
 600:rt_thread/src/kservice.c ****                           int   type)
 601:rt_thread/src/kservice.c **** #else
 602:rt_thread/src/kservice.c **** static char *print_number(char *buf,
ARM GAS  /tmp/ccPhSWJA.s 			page 12


 603:rt_thread/src/kservice.c ****                           char *end,
 604:rt_thread/src/kservice.c **** #ifdef RT_PRINTF_LONGLONG
 605:rt_thread/src/kservice.c ****                           long long  num,
 606:rt_thread/src/kservice.c **** #else
 607:rt_thread/src/kservice.c ****                           long  num,
 608:rt_thread/src/kservice.c **** #endif
 609:rt_thread/src/kservice.c ****                           int   base,
 610:rt_thread/src/kservice.c ****                           int   s,
 611:rt_thread/src/kservice.c ****                           int   type)
 612:rt_thread/src/kservice.c **** #endif
 613:rt_thread/src/kservice.c **** {
  27              		.loc 1 613 1 view -0
  28              		.cfi_startproc
  29              		@ args = 12, pretend = 0, frame = 16
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		.loc 1 613 1 is_stmt 0 view .LVU1
  32 0000 2DE9F047 		push	{r4, r5, r6, r7, r8, r9, r10, lr}
  33              	.LCFI0:
  34              		.cfi_def_cfa_offset 32
  35              		.cfi_offset 4, -32
  36              		.cfi_offset 5, -28
  37              		.cfi_offset 6, -24
  38              		.cfi_offset 7, -20
  39              		.cfi_offset 8, -16
  40              		.cfi_offset 9, -12
  41              		.cfi_offset 10, -8
  42              		.cfi_offset 14, -4
  43 0004 84B0     		sub	sp, sp, #16
  44              	.LCFI1:
  45              		.cfi_def_cfa_offset 48
  46 0006 9946     		mov	r9, r3
  47 0008 0D9C     		ldr	r4, [sp, #52]
  48 000a 0E9D     		ldr	r5, [sp, #56]
 614:rt_thread/src/kservice.c ****     char c, sign;
  49              		.loc 1 614 5 is_stmt 1 view .LVU2
 615:rt_thread/src/kservice.c **** #ifdef RT_PRINTF_LONGLONG
 616:rt_thread/src/kservice.c ****     char tmp[32];
 617:rt_thread/src/kservice.c **** #else
 618:rt_thread/src/kservice.c ****     char tmp[16];
  50              		.loc 1 618 5 view .LVU3
 619:rt_thread/src/kservice.c **** #endif
 620:rt_thread/src/kservice.c ****     int precision_bak = precision;
  51              		.loc 1 620 5 view .LVU4
  52              	.LVL1:
 621:rt_thread/src/kservice.c ****     const char *digits;
  53              		.loc 1 621 5 view .LVU5
 622:rt_thread/src/kservice.c ****     static const char small_digits[] = "0123456789abcdef";
  54              		.loc 1 622 5 view .LVU6
 623:rt_thread/src/kservice.c ****     static const char large_digits[] = "0123456789ABCDEF";
  55              		.loc 1 623 5 view .LVU7
 624:rt_thread/src/kservice.c ****     register int i;
  56              		.loc 1 624 5 view .LVU8
 625:rt_thread/src/kservice.c ****     register int size;
  57              		.loc 1 625 5 view .LVU9
 626:rt_thread/src/kservice.c **** 
 627:rt_thread/src/kservice.c ****     size = s;
  58              		.loc 1 627 5 view .LVU10
ARM GAS  /tmp/ccPhSWJA.s 			page 13


 628:rt_thread/src/kservice.c **** 
 629:rt_thread/src/kservice.c ****     digits = (type & LARGE) ? large_digits : small_digits;
  59              		.loc 1 629 5 view .LVU11
  60              		.loc 1 629 44 is_stmt 0 view .LVU12
  61 000c 15F0400F 		tst	r5, #64
  62 0010 17D0     		beq	.L34
  63 0012 DFF84CA1 		ldr	r10, .L46
  64              	.L2:
  65              	.LVL2:
 630:rt_thread/src/kservice.c ****     if (type & LEFT)
  66              		.loc 1 630 5 is_stmt 1 discriminator 4 view .LVU13
  67              		.loc 1 630 8 is_stmt 0 discriminator 4 view .LVU14
  68 0016 15F0100F 		tst	r5, #16
  69 001a 01D0     		beq	.L3
 631:rt_thread/src/kservice.c ****         type &= ~ZEROPAD;
  70              		.loc 1 631 9 is_stmt 1 view .LVU15
  71              		.loc 1 631 14 is_stmt 0 view .LVU16
  72 001c 25F00105 		bic	r5, r5, #1
  73              	.LVL3:
  74              	.L3:
 632:rt_thread/src/kservice.c **** 
 633:rt_thread/src/kservice.c ****     c = (type & ZEROPAD) ? '0' : ' ';
  75              		.loc 1 633 5 is_stmt 1 view .LVU17
  76              		.loc 1 633 7 is_stmt 0 view .LVU18
  77 0020 15F0010F 		tst	r5, #1
  78 0024 10D0     		beq	.L35
  79 0026 3026     		movs	r6, #48
  80              	.L4:
  81              	.LVL4:
 634:rt_thread/src/kservice.c **** 
 635:rt_thread/src/kservice.c ****     /* get sign */
 636:rt_thread/src/kservice.c ****     sign = 0;
  82              		.loc 1 636 5 is_stmt 1 discriminator 4 view .LVU19
 637:rt_thread/src/kservice.c ****     if (type & SIGN)
  83              		.loc 1 637 5 discriminator 4 view .LVU20
  84              		.loc 1 637 8 is_stmt 0 discriminator 4 view .LVU21
  85 0028 15F0020F 		tst	r5, #2
  86 002c 11D0     		beq	.L36
 638:rt_thread/src/kservice.c ****     {
 639:rt_thread/src/kservice.c ****         if (num < 0)
  87              		.loc 1 639 9 is_stmt 1 view .LVU22
  88              		.loc 1 639 12 is_stmt 0 view .LVU23
  89 002e 002A     		cmp	r2, #0
  90 0030 0CDB     		blt	.L42
 640:rt_thread/src/kservice.c ****         {
 641:rt_thread/src/kservice.c ****             sign = '-';
 642:rt_thread/src/kservice.c ****             num = -num;
 643:rt_thread/src/kservice.c ****         }
 644:rt_thread/src/kservice.c ****         else if (type & PLUS)
  91              		.loc 1 644 14 is_stmt 1 view .LVU24
  92              		.loc 1 644 17 is_stmt 0 view .LVU25
  93 0032 15F0040F 		tst	r5, #4
  94 0036 21D1     		bne	.L37
 645:rt_thread/src/kservice.c ****             sign = '+';
 646:rt_thread/src/kservice.c ****         else if (type & SPACE)
  95              		.loc 1 646 14 is_stmt 1 view .LVU26
  96              		.loc 1 646 17 is_stmt 0 view .LVU27
ARM GAS  /tmp/ccPhSWJA.s 			page 14


  97 0038 15F0080F 		tst	r5, #8
  98 003c 20D1     		bne	.L38
 636:rt_thread/src/kservice.c ****     if (type & SIGN)
  99              		.loc 1 636 10 view .LVU28
 100 003e 0027     		movs	r7, #0
 101 0040 08E0     		b	.L5
 102              	.LVL5:
 103              	.L34:
 629:rt_thread/src/kservice.c ****     if (type & LEFT)
 104              		.loc 1 629 44 view .LVU29
 105 0042 DFF820A1 		ldr	r10, .L46+4
 106 0046 E6E7     		b	.L2
 107              	.LVL6:
 108              	.L35:
 633:rt_thread/src/kservice.c **** 
 109              		.loc 1 633 7 view .LVU30
 110 0048 2026     		movs	r6, #32
 111 004a EDE7     		b	.L4
 112              	.LVL7:
 113              	.L42:
 641:rt_thread/src/kservice.c ****             num = -num;
 114              		.loc 1 641 13 is_stmt 1 view .LVU31
 642:rt_thread/src/kservice.c ****         }
 115              		.loc 1 642 13 view .LVU32
 642:rt_thread/src/kservice.c ****         }
 116              		.loc 1 642 19 is_stmt 0 view .LVU33
 117 004c 5242     		rsbs	r2, r2, #0
 118              	.LVL8:
 641:rt_thread/src/kservice.c ****             num = -num;
 119              		.loc 1 641 18 view .LVU34
 120 004e 2D27     		movs	r7, #45
 121 0050 00E0     		b	.L5
 122              	.LVL9:
 123              	.L36:
 636:rt_thread/src/kservice.c ****     if (type & SIGN)
 124              		.loc 1 636 10 view .LVU35
 125 0052 0027     		movs	r7, #0
 126              	.LVL10:
 127              	.L5:
 647:rt_thread/src/kservice.c ****             sign = ' ';
 648:rt_thread/src/kservice.c ****     }
 649:rt_thread/src/kservice.c **** 
 650:rt_thread/src/kservice.c **** #ifdef RT_PRINTF_SPECIAL
 651:rt_thread/src/kservice.c ****     if (type & SPECIAL)
 652:rt_thread/src/kservice.c ****     {
 653:rt_thread/src/kservice.c ****         if (base == 16)
 654:rt_thread/src/kservice.c ****             size -= 2;
 655:rt_thread/src/kservice.c ****         else if (base == 8)
 656:rt_thread/src/kservice.c ****             size--;
 657:rt_thread/src/kservice.c ****     }
 658:rt_thread/src/kservice.c **** #endif
 659:rt_thread/src/kservice.c **** 
 660:rt_thread/src/kservice.c ****     i = 0;
 128              		.loc 1 660 5 is_stmt 1 view .LVU36
 661:rt_thread/src/kservice.c ****     if (num == 0)
 129              		.loc 1 661 5 view .LVU37
 130              		.loc 1 661 8 is_stmt 0 view .LVU38
ARM GAS  /tmp/ccPhSWJA.s 			page 15


 131 0054 92BB     		cbnz	r2, .L39
 662:rt_thread/src/kservice.c ****         tmp[i++] = '0';
 132              		.loc 1 662 9 is_stmt 1 view .LVU39
 133              	.LVL11:
 134              		.loc 1 662 18 is_stmt 0 view .LVU40
 135 0056 3023     		movs	r3, #48
 136              	.LVL12:
 137              		.loc 1 662 18 view .LVU41
 138 0058 8DF80030 		strb	r3, [sp]
 139              		.loc 1 662 14 view .LVU42
 140 005c 4FF0010C 		mov	ip, #1
 141              	.LVL13:
 142              	.L8:
 663:rt_thread/src/kservice.c ****     else
 664:rt_thread/src/kservice.c ****     {
 665:rt_thread/src/kservice.c ****         while (num != 0)
 666:rt_thread/src/kservice.c ****             tmp[i++] = digits[divide(&num, base)];
 667:rt_thread/src/kservice.c ****     }
 668:rt_thread/src/kservice.c **** 
 669:rt_thread/src/kservice.c **** #ifdef RT_PRINTF_PRECISION
 670:rt_thread/src/kservice.c ****     if (i > precision)
 143              		.loc 1 670 5 is_stmt 1 view .LVU43
 144              		.loc 1 670 8 is_stmt 0 view .LVU44
 145 0060 A445     		cmp	ip, r4
 146 0062 2EDC     		bgt	.L40
 147 0064 2246     		mov	r2, r4
 148              	.LVL14:
 149              	.L12:
 671:rt_thread/src/kservice.c ****         precision = i;
 672:rt_thread/src/kservice.c ****     size -= precision;
 150              		.loc 1 672 5 is_stmt 1 view .LVU45
 151              		.loc 1 672 10 is_stmt 0 view .LVU46
 152 0066 0C9B     		ldr	r3, [sp, #48]
 153 0068 9B1A     		subs	r3, r3, r2
 154              	.LVL15:
 673:rt_thread/src/kservice.c **** #else
 674:rt_thread/src/kservice.c ****     size -= i;
 675:rt_thread/src/kservice.c **** #endif
 676:rt_thread/src/kservice.c **** 
 677:rt_thread/src/kservice.c ****     if (!(type & (ZEROPAD | LEFT)))
 155              		.loc 1 677 5 is_stmt 1 view .LVU47
 156              		.loc 1 677 8 is_stmt 0 view .LVU48
 157 006a 15F0110F 		tst	r5, #17
 158 006e 38D1     		bne	.L13
 678:rt_thread/src/kservice.c ****     {
 679:rt_thread/src/kservice.c ****         if ((sign) && (size > 0))
 159              		.loc 1 679 9 is_stmt 1 view .LVU49
 160              		.loc 1 679 12 is_stmt 0 view .LVU50
 161 0070 17B1     		cbz	r7, .L14
 162              		.loc 1 679 20 discriminator 1 view .LVU51
 163 0072 002B     		cmp	r3, #0
 164 0074 00DD     		ble	.L14
 680:rt_thread/src/kservice.c ****             size--;
 165              		.loc 1 680 13 is_stmt 1 view .LVU52
 166              		.loc 1 680 17 is_stmt 0 view .LVU53
 167 0076 013B     		subs	r3, r3, #1
 168              	.LVL16:
ARM GAS  /tmp/ccPhSWJA.s 			page 16


 169              	.L14:
 670:rt_thread/src/kservice.c ****         precision = i;
 170              		.loc 1 670 8 view .LVU54
 171 0078 9E46     		mov	lr, r3
 172 007a 26E0     		b	.L16
 173              	.LVL17:
 174              	.L37:
 645:rt_thread/src/kservice.c ****         else if (type & SPACE)
 175              		.loc 1 645 18 view .LVU55
 176 007c 2B27     		movs	r7, #43
 177 007e E9E7     		b	.L5
 178              	.L38:
 647:rt_thread/src/kservice.c ****     }
 179              		.loc 1 647 18 view .LVU56
 180 0080 2027     		movs	r7, #32
 181 0082 E7E7     		b	.L5
 182              	.LVL18:
 183              	.L43:
 184              	.LBB4:
 185              	.LBB5:
 559:rt_thread/src/kservice.c ****         *n = (long)(((unsigned long)*n) / 10U);
 186              		.loc 1 559 9 is_stmt 1 view .LVU57
 559:rt_thread/src/kservice.c ****         *n = (long)(((unsigned long)*n) / 10U);
 187              		.loc 1 559 41 is_stmt 0 view .LVU58
 188 0084 384B     		ldr	r3, .L46+8
 189 0086 A3FB023E 		umull	r3, lr, r3, r2
 190 008a 4FEADE0E 		lsr	lr, lr, #3
 191 008e 0EEB8E08 		add	r8, lr, lr, lsl #2
 192 0092 A2EB4808 		sub	r8, r2, r8, lsl #1
 193              	.LVL19:
 560:rt_thread/src/kservice.c ****     }
 194              		.loc 1 560 9 is_stmt 1 view .LVU59
 560:rt_thread/src/kservice.c ****     }
 195              		.loc 1 560 14 is_stmt 0 view .LVU60
 196 0096 7246     		mov	r2, lr
 197              	.LVL20:
 198              	.L10:
 568:rt_thread/src/kservice.c **** }
 199              		.loc 1 568 5 is_stmt 1 view .LVU61
 568:rt_thread/src/kservice.c **** }
 200              		.loc 1 568 5 is_stmt 0 view .LVU62
 201              	.LBE5:
 202              	.LBE4:
 666:rt_thread/src/kservice.c ****     }
 203              		.loc 1 666 30 view .LVU63
 204 0098 1AF808E0 		ldrb	lr, [r10, r8]	@ zero_extendqisi2
 666:rt_thread/src/kservice.c ****     }
 205              		.loc 1 666 22 view .LVU64
 206 009c 0CF11003 		add	r3, ip, #16
 207 00a0 6B44     		add	r3, sp, r3
 208 00a2 03F810EC 		strb	lr, [r3, #-16]
 666:rt_thread/src/kservice.c ****     }
 209              		.loc 1 666 18 view .LVU65
 210 00a6 0CF1010C 		add	ip, ip, #1
 211              	.LVL21:
 212              	.L7:
 665:rt_thread/src/kservice.c ****             tmp[i++] = digits[divide(&num, base)];
ARM GAS  /tmp/ccPhSWJA.s 			page 17


 213              		.loc 1 665 15 is_stmt 1 view .LVU66
 214 00aa 002A     		cmp	r2, #0
 215 00ac D8D0     		beq	.L8
 666:rt_thread/src/kservice.c ****     }
 216              		.loc 1 666 13 view .LVU67
 217              	.LVL22:
 218              	.LBB7:
 219              	.LBI4:
 552:rt_thread/src/kservice.c **** {
 220              		.loc 1 552 15 view .LVU68
 221              	.LBB6:
 554:rt_thread/src/kservice.c **** 
 222              		.loc 1 554 5 view .LVU69
 557:rt_thread/src/kservice.c ****     {
 223              		.loc 1 557 5 view .LVU70
 557:rt_thread/src/kservice.c ****     {
 224              		.loc 1 557 8 is_stmt 0 view .LVU71
 225 00ae B9F10A0F 		cmp	r9, #10
 226 00b2 E7D0     		beq	.L43
 564:rt_thread/src/kservice.c ****         *n = (long)(((unsigned long)*n) / 16U);
 227              		.loc 1 564 9 is_stmt 1 view .LVU72
 564:rt_thread/src/kservice.c ****         *n = (long)(((unsigned long)*n) / 16U);
 228              		.loc 1 564 13 is_stmt 0 view .LVU73
 229 00b4 02F00F08 		and	r8, r2, #15
 230              	.LVL23:
 565:rt_thread/src/kservice.c ****     }
 231              		.loc 1 565 9 is_stmt 1 view .LVU74
 565:rt_thread/src/kservice.c ****     }
 232              		.loc 1 565 41 is_stmt 0 view .LVU75
 233 00b8 1209     		lsrs	r2, r2, #4
 234              	.LVL24:
 565:rt_thread/src/kservice.c ****     }
 235              		.loc 1 565 41 view .LVU76
 236 00ba EDE7     		b	.L10
 237              	.LVL25:
 238              	.L39:
 565:rt_thread/src/kservice.c ****     }
 239              		.loc 1 565 41 view .LVU77
 240              	.LBE6:
 241              	.LBE7:
 660:rt_thread/src/kservice.c ****     if (num == 0)
 242              		.loc 1 660 7 view .LVU78
 243 00bc 4FF0000C 		mov	ip, #0
 244 00c0 F3E7     		b	.L7
 245              	.LVL26:
 246              	.L40:
 671:rt_thread/src/kservice.c ****     size -= precision;
 247              		.loc 1 671 19 view .LVU79
 248 00c2 6246     		mov	r2, ip
 249              	.LVL27:
 671:rt_thread/src/kservice.c ****     size -= precision;
 250              		.loc 1 671 19 view .LVU80
 251 00c4 CFE7     		b	.L12
 252              	.LVL28:
 253              	.L15:
 681:rt_thread/src/kservice.c **** 
 682:rt_thread/src/kservice.c ****         while (size-- > 0)
ARM GAS  /tmp/ccPhSWJA.s 			page 18


 683:rt_thread/src/kservice.c ****         {
 684:rt_thread/src/kservice.c ****             if (buf < end)
 685:rt_thread/src/kservice.c ****                 *buf = ' ';
 686:rt_thread/src/kservice.c ****             ++ buf;
 254              		.loc 1 686 13 is_stmt 1 view .LVU81
 255 00c6 0130     		adds	r0, r0, #1
 256              	.LVL29:
 682:rt_thread/src/kservice.c ****         {
 257              		.loc 1 682 20 is_stmt 0 view .LVU82
 258 00c8 9E46     		mov	lr, r3
 259              	.L16:
 682:rt_thread/src/kservice.c ****         {
 260              		.loc 1 682 15 is_stmt 1 view .LVU83
 682:rt_thread/src/kservice.c ****         {
 261              		.loc 1 682 20 is_stmt 0 view .LVU84
 262 00ca 0EF1FF33 		add	r3, lr, #-1
 263              	.LVL30:
 682:rt_thread/src/kservice.c ****         {
 264              		.loc 1 682 15 view .LVU85
 265 00ce BEF1000F 		cmp	lr, #0
 266 00d2 06DD     		ble	.L13
 684:rt_thread/src/kservice.c ****                 *buf = ' ';
 267              		.loc 1 684 13 is_stmt 1 view .LVU86
 684:rt_thread/src/kservice.c ****                 *buf = ' ';
 268              		.loc 1 684 16 is_stmt 0 view .LVU87
 269 00d4 8842     		cmp	r0, r1
 270 00d6 F6D2     		bcs	.L15
 685:rt_thread/src/kservice.c ****             ++ buf;
 271              		.loc 1 685 17 is_stmt 1 view .LVU88
 685:rt_thread/src/kservice.c ****             ++ buf;
 272              		.loc 1 685 22 is_stmt 0 view .LVU89
 273 00d8 4FF0200E 		mov	lr, #32
 274 00dc 80F800E0 		strb	lr, [r0]
 275 00e0 F1E7     		b	.L15
 276              	.L13:
 687:rt_thread/src/kservice.c ****         }
 688:rt_thread/src/kservice.c ****     }
 689:rt_thread/src/kservice.c **** 
 690:rt_thread/src/kservice.c ****     if (sign)
 277              		.loc 1 690 5 is_stmt 1 view .LVU90
 278              		.loc 1 690 8 is_stmt 0 view .LVU91
 279 00e2 27B1     		cbz	r7, .L18
 691:rt_thread/src/kservice.c ****     {
 692:rt_thread/src/kservice.c ****         if (buf < end)
 280              		.loc 1 692 9 is_stmt 1 view .LVU92
 281              		.loc 1 692 12 is_stmt 0 view .LVU93
 282 00e4 8842     		cmp	r0, r1
 283 00e6 00D2     		bcs	.L19
 693:rt_thread/src/kservice.c ****         {
 694:rt_thread/src/kservice.c ****             *buf = sign;
 284              		.loc 1 694 13 is_stmt 1 view .LVU94
 285              		.loc 1 694 18 is_stmt 0 view .LVU95
 286 00e8 0770     		strb	r7, [r0]
 287              	.L19:
 695:rt_thread/src/kservice.c ****         }
 696:rt_thread/src/kservice.c ****         -- size;
 288              		.loc 1 696 9 is_stmt 1 view .LVU96
ARM GAS  /tmp/ccPhSWJA.s 			page 19


 289 00ea 013B     		subs	r3, r3, #1
 290              	.LVL31:
 697:rt_thread/src/kservice.c ****         ++ buf;
 291              		.loc 1 697 9 view .LVU97
 292 00ec 0130     		adds	r0, r0, #1
 293              	.LVL32:
 294              	.L18:
 698:rt_thread/src/kservice.c ****     }
 699:rt_thread/src/kservice.c **** 
 700:rt_thread/src/kservice.c **** #ifdef RT_PRINTF_SPECIAL
 701:rt_thread/src/kservice.c ****     if (type & SPECIAL)
 702:rt_thread/src/kservice.c ****     {
 703:rt_thread/src/kservice.c ****         if (base == 8)
 704:rt_thread/src/kservice.c ****         {
 705:rt_thread/src/kservice.c ****             if (buf < end)
 706:rt_thread/src/kservice.c ****                 *buf = '0';
 707:rt_thread/src/kservice.c ****             ++ buf;
 708:rt_thread/src/kservice.c ****         }
 709:rt_thread/src/kservice.c ****         else if (base == 16)
 710:rt_thread/src/kservice.c ****         {
 711:rt_thread/src/kservice.c ****             if (buf < end)
 712:rt_thread/src/kservice.c ****                 *buf = '0';
 713:rt_thread/src/kservice.c ****             ++ buf;
 714:rt_thread/src/kservice.c ****             if (buf < end)
 715:rt_thread/src/kservice.c ****             {
 716:rt_thread/src/kservice.c ****                 *buf = type & LARGE ? 'X' : 'x';
 717:rt_thread/src/kservice.c ****             }
 718:rt_thread/src/kservice.c ****             ++ buf;
 719:rt_thread/src/kservice.c ****         }
 720:rt_thread/src/kservice.c ****     }
 721:rt_thread/src/kservice.c **** #endif
 722:rt_thread/src/kservice.c **** 
 723:rt_thread/src/kservice.c ****     /* no align to the left */
 724:rt_thread/src/kservice.c ****     if (!(type & LEFT))
 295              		.loc 1 724 5 view .LVU98
 296              		.loc 1 724 8 is_stmt 0 view .LVU99
 297 00ee 15F0100F 		tst	r5, #16
 298 00f2 02D0     		beq	.L20
 299              		.loc 1 724 8 view .LVU100
 300 00f4 0CE0     		b	.L25
 301              	.LVL33:
 302              	.L22:
 725:rt_thread/src/kservice.c ****     {
 726:rt_thread/src/kservice.c ****         while (size-- > 0)
 727:rt_thread/src/kservice.c ****         {
 728:rt_thread/src/kservice.c ****             if (buf < end)
 729:rt_thread/src/kservice.c ****                 *buf = c;
 730:rt_thread/src/kservice.c ****             ++ buf;
 303              		.loc 1 730 13 is_stmt 1 view .LVU101
 304 00f6 0130     		adds	r0, r0, #1
 305              	.LVL34:
 726:rt_thread/src/kservice.c ****         {
 306              		.loc 1 726 20 is_stmt 0 view .LVU102
 307 00f8 2B46     		mov	r3, r5
 308              	.LVL35:
 309              	.L20:
 726:rt_thread/src/kservice.c ****         {
ARM GAS  /tmp/ccPhSWJA.s 			page 20


 310              		.loc 1 726 15 is_stmt 1 view .LVU103
 726:rt_thread/src/kservice.c ****         {
 311              		.loc 1 726 20 is_stmt 0 view .LVU104
 312 00fa 5D1E     		subs	r5, r3, #1
 313              	.LVL36:
 726:rt_thread/src/kservice.c ****         {
 314              		.loc 1 726 15 view .LVU105
 315 00fc 002B     		cmp	r3, #0
 316 00fe 03DD     		ble	.L44
 728:rt_thread/src/kservice.c ****                 *buf = c;
 317              		.loc 1 728 13 is_stmt 1 view .LVU106
 728:rt_thread/src/kservice.c ****                 *buf = c;
 318              		.loc 1 728 16 is_stmt 0 view .LVU107
 319 0100 8842     		cmp	r0, r1
 320 0102 F8D2     		bcs	.L22
 729:rt_thread/src/kservice.c ****             ++ buf;
 321              		.loc 1 729 17 is_stmt 1 view .LVU108
 729:rt_thread/src/kservice.c ****             ++ buf;
 322              		.loc 1 729 22 is_stmt 0 view .LVU109
 323 0104 0670     		strb	r6, [r0]
 324 0106 F6E7     		b	.L22
 325              	.L44:
 726:rt_thread/src/kservice.c ****         {
 326              		.loc 1 726 20 view .LVU110
 327 0108 2B46     		mov	r3, r5
 328 010a 01E0     		b	.L25
 329              	.LVL37:
 330              	.L24:
 731:rt_thread/src/kservice.c ****         }
 732:rt_thread/src/kservice.c ****     }
 733:rt_thread/src/kservice.c **** 
 734:rt_thread/src/kservice.c **** #ifdef RT_PRINTF_PRECISION
 735:rt_thread/src/kservice.c ****     while (i < precision--)
 736:rt_thread/src/kservice.c ****     {
 737:rt_thread/src/kservice.c ****         if (buf < end)
 738:rt_thread/src/kservice.c ****             *buf = '0';
 739:rt_thread/src/kservice.c ****         ++ buf;
 331              		.loc 1 739 9 is_stmt 1 view .LVU111
 332 010c 0130     		adds	r0, r0, #1
 333              	.LVL38:
 735:rt_thread/src/kservice.c ****     {
 334              		.loc 1 735 25 is_stmt 0 view .LVU112
 335 010e 7246     		mov	r2, lr
 336              	.LVL39:
 337              	.L25:
 735:rt_thread/src/kservice.c ****     {
 338              		.loc 1 735 11 is_stmt 1 view .LVU113
 735:rt_thread/src/kservice.c ****     {
 339              		.loc 1 735 25 is_stmt 0 view .LVU114
 340 0110 02F1FF3E 		add	lr, r2, #-1
 341              	.LVL40:
 735:rt_thread/src/kservice.c ****     {
 342              		.loc 1 735 11 view .LVU115
 343 0114 6245     		cmp	r2, ip
 344 0116 06DD     		ble	.L27
 737:rt_thread/src/kservice.c ****             *buf = '0';
 345              		.loc 1 737 9 is_stmt 1 view .LVU116
ARM GAS  /tmp/ccPhSWJA.s 			page 21


 737:rt_thread/src/kservice.c ****             *buf = '0';
 346              		.loc 1 737 12 is_stmt 0 view .LVU117
 347 0118 8842     		cmp	r0, r1
 348 011a F7D2     		bcs	.L24
 738:rt_thread/src/kservice.c ****         ++ buf;
 349              		.loc 1 738 13 is_stmt 1 view .LVU118
 738:rt_thread/src/kservice.c ****         ++ buf;
 350              		.loc 1 738 18 is_stmt 0 view .LVU119
 351 011c 3022     		movs	r2, #48
 352 011e 0270     		strb	r2, [r0]
 353 0120 F4E7     		b	.L24
 354              	.LVL41:
 355              	.L28:
 740:rt_thread/src/kservice.c ****     }
 741:rt_thread/src/kservice.c **** #endif
 742:rt_thread/src/kservice.c **** 
 743:rt_thread/src/kservice.c ****     /* put number in the temporary buffer */
 744:rt_thread/src/kservice.c ****     while (i-- > 0 && (precision_bak != 0))
 745:rt_thread/src/kservice.c ****     {
 746:rt_thread/src/kservice.c ****         if (buf < end)
 747:rt_thread/src/kservice.c ****             *buf = tmp[i];
 748:rt_thread/src/kservice.c ****         ++ buf;
 356              		.loc 1 748 9 is_stmt 1 view .LVU120
 357 0122 0130     		adds	r0, r0, #1
 358              	.LVL42:
 744:rt_thread/src/kservice.c ****     {
 359              		.loc 1 744 13 is_stmt 0 view .LVU121
 360 0124 9446     		mov	ip, r2
 361              	.LVL43:
 362              	.L27:
 744:rt_thread/src/kservice.c ****     {
 363              		.loc 1 744 11 is_stmt 1 view .LVU122
 744:rt_thread/src/kservice.c ****     {
 364              		.loc 1 744 13 is_stmt 0 view .LVU123
 365 0126 0CF1FF32 		add	r2, ip, #-1
 366              	.LVL44:
 744:rt_thread/src/kservice.c ****     {
 367              		.loc 1 744 11 view .LVU124
 368 012a BCF1000F 		cmp	ip, #0
 369 012e 0BDD     		ble	.L32
 744:rt_thread/src/kservice.c ****     {
 370              		.loc 1 744 20 discriminator 1 view .LVU125
 371 0130 54B1     		cbz	r4, .L32
 746:rt_thread/src/kservice.c ****             *buf = tmp[i];
 372              		.loc 1 746 9 is_stmt 1 view .LVU126
 746:rt_thread/src/kservice.c ****             *buf = tmp[i];
 373              		.loc 1 746 12 is_stmt 0 view .LVU127
 374 0132 8842     		cmp	r0, r1
 375 0134 F5D2     		bcs	.L28
 747:rt_thread/src/kservice.c ****         ++ buf;
 376              		.loc 1 747 13 is_stmt 1 view .LVU128
 747:rt_thread/src/kservice.c ****         ++ buf;
 377              		.loc 1 747 23 is_stmt 0 view .LVU129
 378 0136 02F11005 		add	r5, r2, #16
 379 013a 6D44     		add	r5, sp, r5
 380 013c 15F8105C 		ldrb	r5, [r5, #-16]	@ zero_extendqisi2
 747:rt_thread/src/kservice.c ****         ++ buf;
ARM GAS  /tmp/ccPhSWJA.s 			page 22


 381              		.loc 1 747 18 view .LVU130
 382 0140 0570     		strb	r5, [r0]
 383 0142 EEE7     		b	.L28
 384              	.LVL45:
 385              	.L31:
 749:rt_thread/src/kservice.c ****     }
 750:rt_thread/src/kservice.c **** 
 751:rt_thread/src/kservice.c ****     while (size-- > 0)
 752:rt_thread/src/kservice.c ****     {
 753:rt_thread/src/kservice.c ****         if (buf < end)
 754:rt_thread/src/kservice.c ****             *buf = ' ';
 755:rt_thread/src/kservice.c ****         ++ buf;
 386              		.loc 1 755 9 is_stmt 1 view .LVU131
 387 0144 0130     		adds	r0, r0, #1
 388              	.LVL46:
 751:rt_thread/src/kservice.c ****     {
 389              		.loc 1 751 16 is_stmt 0 view .LVU132
 390 0146 1346     		mov	r3, r2
 391              	.LVL47:
 392              	.L32:
 751:rt_thread/src/kservice.c ****     {
 393              		.loc 1 751 11 is_stmt 1 view .LVU133
 751:rt_thread/src/kservice.c ****     {
 394              		.loc 1 751 16 is_stmt 0 view .LVU134
 395 0148 5A1E     		subs	r2, r3, #1
 396              	.LVL48:
 751:rt_thread/src/kservice.c ****     {
 397              		.loc 1 751 11 view .LVU135
 398 014a 002B     		cmp	r3, #0
 399 014c 04DD     		ble	.L45
 753:rt_thread/src/kservice.c ****             *buf = ' ';
 400              		.loc 1 753 9 is_stmt 1 view .LVU136
 753:rt_thread/src/kservice.c ****             *buf = ' ';
 401              		.loc 1 753 12 is_stmt 0 view .LVU137
 402 014e 8842     		cmp	r0, r1
 403 0150 F8D2     		bcs	.L31
 754:rt_thread/src/kservice.c ****         ++ buf;
 404              		.loc 1 754 13 is_stmt 1 view .LVU138
 754:rt_thread/src/kservice.c ****         ++ buf;
 405              		.loc 1 754 18 is_stmt 0 view .LVU139
 406 0152 2023     		movs	r3, #32
 407 0154 0370     		strb	r3, [r0]
 408 0156 F5E7     		b	.L31
 409              	.L45:
 756:rt_thread/src/kservice.c ****     }
 757:rt_thread/src/kservice.c **** 
 758:rt_thread/src/kservice.c ****     return buf;
 410              		.loc 1 758 5 is_stmt 1 view .LVU140
 759:rt_thread/src/kservice.c **** }
 411              		.loc 1 759 1 is_stmt 0 view .LVU141
 412 0158 04B0     		add	sp, sp, #16
 413              	.LCFI2:
 414              		.cfi_def_cfa_offset 32
 415              		@ sp needed
 416 015a BDE8F087 		pop	{r4, r5, r6, r7, r8, r9, r10, pc}
 417              	.LVL49:
 418              	.L47:
ARM GAS  /tmp/ccPhSWJA.s 			page 23


 419              		.loc 1 759 1 view .LVU142
 420 015e 00BF     		.align	2
 421              	.L46:
 422 0160 00000000 		.word	.LANCHOR1
 423 0164 00000000 		.word	.LANCHOR0
 424 0168 CDCCCCCC 		.word	-858993459
 425              		.cfi_endproc
 426              	.LFE33:
 428              		.section	.text.rt_get_errno,"ax",%progbits
 429              		.align	1
 430              		.global	rt_get_errno
 431              		.syntax unified
 432              		.thumb
 433              		.thumb_func
 435              	rt_get_errno:
 436              	.LFB15:
  47:rt_thread/src/kservice.c ****     rt_thread_t tid;
 437              		.loc 1 47 1 is_stmt 1 view -0
 438              		.cfi_startproc
 439              		@ args = 0, pretend = 0, frame = 0
 440              		@ frame_needed = 0, uses_anonymous_args = 0
 441 0000 08B5     		push	{r3, lr}
 442              	.LCFI3:
 443              		.cfi_def_cfa_offset 8
 444              		.cfi_offset 3, -8
 445              		.cfi_offset 14, -4
  48:rt_thread/src/kservice.c **** 
 446              		.loc 1 48 5 view .LVU144
  50:rt_thread/src/kservice.c ****     {
 447              		.loc 1 50 5 view .LVU145
  50:rt_thread/src/kservice.c ****     {
 448              		.loc 1 50 9 is_stmt 0 view .LVU146
 449 0002 FFF7FEFF 		bl	rt_interrupt_get_nest
 450              	.LVL50:
  50:rt_thread/src/kservice.c ****     {
 451              		.loc 1 50 8 view .LVU147
 452 0006 10B1     		cbz	r0, .L49
  53:rt_thread/src/kservice.c ****     }
 453              		.loc 1 53 9 is_stmt 1 view .LVU148
  53:rt_thread/src/kservice.c ****     }
 454              		.loc 1 53 16 is_stmt 0 view .LVU149
 455 0008 054B     		ldr	r3, .L54
 456 000a 1868     		ldr	r0, [r3]
 457              	.L48:
  61:rt_thread/src/kservice.c **** 
 458              		.loc 1 61 1 view .LVU150
 459 000c 08BD     		pop	{r3, pc}
 460              	.L49:
  56:rt_thread/src/kservice.c ****     if (tid == RT_NULL)
 461              		.loc 1 56 5 is_stmt 1 view .LVU151
  56:rt_thread/src/kservice.c ****     if (tid == RT_NULL)
 462              		.loc 1 56 11 is_stmt 0 view .LVU152
 463 000e FFF7FEFF 		bl	rt_thread_self
 464              	.LVL51:
  57:rt_thread/src/kservice.c ****         return __rt_errno;
 465              		.loc 1 57 5 is_stmt 1 view .LVU153
  57:rt_thread/src/kservice.c ****         return __rt_errno;
ARM GAS  /tmp/ccPhSWJA.s 			page 24


 466              		.loc 1 57 8 is_stmt 0 view .LVU154
 467 0012 08B1     		cbz	r0, .L53
  60:rt_thread/src/kservice.c **** }
 468              		.loc 1 60 5 is_stmt 1 view .LVU155
  60:rt_thread/src/kservice.c **** }
 469              		.loc 1 60 15 is_stmt 0 view .LVU156
 470 0014 006B     		ldr	r0, [r0, #48]
 471              	.LVL52:
  60:rt_thread/src/kservice.c **** }
 472              		.loc 1 60 15 view .LVU157
 473 0016 F9E7     		b	.L48
 474              	.LVL53:
 475              	.L53:
  58:rt_thread/src/kservice.c **** 
 476              		.loc 1 58 9 is_stmt 1 view .LVU158
  58:rt_thread/src/kservice.c **** 
 477              		.loc 1 58 16 is_stmt 0 view .LVU159
 478 0018 014B     		ldr	r3, .L54
 479 001a 1868     		ldr	r0, [r3]
 480              	.LVL54:
  58:rt_thread/src/kservice.c **** 
 481              		.loc 1 58 16 view .LVU160
 482 001c F6E7     		b	.L48
 483              	.L55:
 484 001e 00BF     		.align	2
 485              	.L54:
 486 0020 00000000 		.word	.LANCHOR2
 487              		.cfi_endproc
 488              	.LFE15:
 490              		.section	.text.rt_set_errno,"ax",%progbits
 491              		.align	1
 492              		.global	rt_set_errno
 493              		.syntax unified
 494              		.thumb
 495              		.thumb_func
 497              	rt_set_errno:
 498              	.LVL55:
 499              	.LFB16:
  69:rt_thread/src/kservice.c ****     rt_thread_t tid;
 500              		.loc 1 69 1 is_stmt 1 view -0
 501              		.cfi_startproc
 502              		@ args = 0, pretend = 0, frame = 0
 503              		@ frame_needed = 0, uses_anonymous_args = 0
  69:rt_thread/src/kservice.c ****     rt_thread_t tid;
 504              		.loc 1 69 1 is_stmt 0 view .LVU162
 505 0000 10B5     		push	{r4, lr}
 506              	.LCFI4:
 507              		.cfi_def_cfa_offset 8
 508              		.cfi_offset 4, -8
 509              		.cfi_offset 14, -4
 510 0002 0446     		mov	r4, r0
  70:rt_thread/src/kservice.c **** 
 511              		.loc 1 70 5 is_stmt 1 view .LVU163
  72:rt_thread/src/kservice.c ****     {
 512              		.loc 1 72 5 view .LVU164
  72:rt_thread/src/kservice.c ****     {
 513              		.loc 1 72 9 is_stmt 0 view .LVU165
ARM GAS  /tmp/ccPhSWJA.s 			page 25


 514 0004 FFF7FEFF 		bl	rt_interrupt_get_nest
 515              	.LVL56:
  72:rt_thread/src/kservice.c ****     {
 516              		.loc 1 72 8 view .LVU166
 517 0008 10B1     		cbz	r0, .L57
  75:rt_thread/src/kservice.c **** 
 518              		.loc 1 75 9 is_stmt 1 view .LVU167
  75:rt_thread/src/kservice.c **** 
 519              		.loc 1 75 20 is_stmt 0 view .LVU168
 520 000a 054B     		ldr	r3, .L62
 521 000c 1C60     		str	r4, [r3]
  77:rt_thread/src/kservice.c ****     }
 522              		.loc 1 77 9 is_stmt 1 view .LVU169
 523              	.L56:
  89:rt_thread/src/kservice.c **** 
 524              		.loc 1 89 1 is_stmt 0 view .LVU170
 525 000e 10BD     		pop	{r4, pc}
 526              	.LVL57:
 527              	.L57:
  80:rt_thread/src/kservice.c ****     if (tid == RT_NULL)
 528              		.loc 1 80 5 is_stmt 1 view .LVU171
  80:rt_thread/src/kservice.c ****     if (tid == RT_NULL)
 529              		.loc 1 80 11 is_stmt 0 view .LVU172
 530 0010 FFF7FEFF 		bl	rt_thread_self
 531              	.LVL58:
  81:rt_thread/src/kservice.c ****     {
 532              		.loc 1 81 5 is_stmt 1 view .LVU173
  81:rt_thread/src/kservice.c ****     {
 533              		.loc 1 81 8 is_stmt 0 view .LVU174
 534 0014 08B1     		cbz	r0, .L61
  88:rt_thread/src/kservice.c **** }
 535              		.loc 1 88 5 is_stmt 1 view .LVU175
  88:rt_thread/src/kservice.c **** }
 536              		.loc 1 88 16 is_stmt 0 view .LVU176
 537 0016 0463     		str	r4, [r0, #48]
 538 0018 F9E7     		b	.L56
 539              	.L61:
  83:rt_thread/src/kservice.c **** 
 540              		.loc 1 83 9 is_stmt 1 view .LVU177
  83:rt_thread/src/kservice.c **** 
 541              		.loc 1 83 20 is_stmt 0 view .LVU178
 542 001a 014B     		ldr	r3, .L62
 543 001c 1C60     		str	r4, [r3]
  85:rt_thread/src/kservice.c ****     }
 544              		.loc 1 85 9 is_stmt 1 view .LVU179
 545 001e F6E7     		b	.L56
 546              	.L63:
 547              		.align	2
 548              	.L62:
 549 0020 00000000 		.word	.LANCHOR2
 550              		.cfi_endproc
 551              	.LFE16:
 553              		.section	.text._rt_errno,"ax",%progbits
 554              		.align	1
 555              		.global	_rt_errno
 556              		.syntax unified
 557              		.thumb
ARM GAS  /tmp/ccPhSWJA.s 			page 26


 558              		.thumb_func
 560              	_rt_errno:
 561              	.LFB17:
  97:rt_thread/src/kservice.c ****     rt_thread_t tid;
 562              		.loc 1 97 1 view -0
 563              		.cfi_startproc
 564              		@ args = 0, pretend = 0, frame = 0
 565              		@ frame_needed = 0, uses_anonymous_args = 0
 566 0000 08B5     		push	{r3, lr}
 567              	.LCFI5:
 568              		.cfi_def_cfa_offset 8
 569              		.cfi_offset 3, -8
 570              		.cfi_offset 14, -4
  98:rt_thread/src/kservice.c **** 
 571              		.loc 1 98 5 view .LVU181
 100:rt_thread/src/kservice.c ****         return (int *)&__rt_errno;
 572              		.loc 1 100 5 view .LVU182
 100:rt_thread/src/kservice.c ****         return (int *)&__rt_errno;
 573              		.loc 1 100 9 is_stmt 0 view .LVU183
 574 0002 FFF7FEFF 		bl	rt_interrupt_get_nest
 575              	.LVL59:
 100:rt_thread/src/kservice.c ****         return (int *)&__rt_errno;
 576              		.loc 1 100 8 view .LVU184
 577 0006 08B1     		cbz	r0, .L69
 101:rt_thread/src/kservice.c **** 
 578              		.loc 1 101 16 view .LVU185
 579 0008 0448     		ldr	r0, .L70
 580              	.L64:
 108:rt_thread/src/kservice.c **** 
 581              		.loc 1 108 1 view .LVU186
 582 000a 08BD     		pop	{r3, pc}
 583              	.L69:
 103:rt_thread/src/kservice.c ****     if (tid != RT_NULL)
 584              		.loc 1 103 5 is_stmt 1 view .LVU187
 103:rt_thread/src/kservice.c ****     if (tid != RT_NULL)
 585              		.loc 1 103 11 is_stmt 0 view .LVU188
 586 000c FFF7FEFF 		bl	rt_thread_self
 587              	.LVL60:
 104:rt_thread/src/kservice.c ****         return (int *) & (tid->error);
 588              		.loc 1 104 5 is_stmt 1 view .LVU189
 104:rt_thread/src/kservice.c ****         return (int *) & (tid->error);
 589              		.loc 1 104 8 is_stmt 0 view .LVU190
 590 0010 08B1     		cbz	r0, .L67
 105:rt_thread/src/kservice.c **** 
 591              		.loc 1 105 9 is_stmt 1 view .LVU191
 105:rt_thread/src/kservice.c **** 
 592              		.loc 1 105 16 is_stmt 0 view .LVU192
 593 0012 3030     		adds	r0, r0, #48
 594              	.LVL61:
 105:rt_thread/src/kservice.c **** 
 595              		.loc 1 105 16 view .LVU193
 596 0014 F9E7     		b	.L64
 597              	.LVL62:
 598              	.L67:
 107:rt_thread/src/kservice.c **** }
 599              		.loc 1 107 12 view .LVU194
 600 0016 0148     		ldr	r0, .L70
ARM GAS  /tmp/ccPhSWJA.s 			page 27


 601              	.LVL63:
 107:rt_thread/src/kservice.c **** }
 602              		.loc 1 107 12 view .LVU195
 603 0018 F7E7     		b	.L64
 604              	.L71:
 605 001a 00BF     		.align	2
 606              	.L70:
 607 001c 00000000 		.word	.LANCHOR2
 608              		.cfi_endproc
 609              	.LFE17:
 611              		.section	.text.rt_memset,"ax",%progbits
 612              		.align	1
 613              		.global	rt_memset
 614              		.syntax unified
 615              		.thumb
 616              		.thumb_func
 618              	rt_memset:
 619              	.LVL64:
 620              	.LFB18:
 120:rt_thread/src/kservice.c **** #ifdef RT_USING_TINY_SIZE
 621              		.loc 1 120 1 is_stmt 1 view -0
 622              		.cfi_startproc
 623              		@ args = 0, pretend = 0, frame = 0
 624              		@ frame_needed = 0, uses_anonymous_args = 0
 625              		@ link register save eliminated.
 133:rt_thread/src/kservice.c ****     char *m = (char *)s;
 626              		.loc 1 133 5 view .LVU197
 134:rt_thread/src/kservice.c ****     unsigned long buffer;
 627              		.loc 1 134 5 view .LVU198
 135:rt_thread/src/kservice.c ****     unsigned long *aligned_addr;
 628              		.loc 1 135 5 view .LVU199
 136:rt_thread/src/kservice.c ****     unsigned int d = c & 0xff;  /* To avoid sign extension, copy C to an
 629              		.loc 1 136 5 view .LVU200
 137:rt_thread/src/kservice.c ****                                 unsigned variable.  */
 630              		.loc 1 137 5 view .LVU201
 140:rt_thread/src/kservice.c ****     {
 631              		.loc 1 140 5 view .LVU202
 140:rt_thread/src/kservice.c ****     {
 632              		.loc 1 140 8 is_stmt 0 view .LVU203
 633 0000 032A     		cmp	r2, #3
 634 0002 22D9     		bls	.L80
 120:rt_thread/src/kservice.c **** #ifdef RT_USING_TINY_SIZE
 635              		.loc 1 120 1 discriminator 1 view .LVU204
 636 0004 10B4     		push	{r4}
 637              	.LCFI6:
 638              		.cfi_def_cfa_offset 4
 639              		.cfi_offset 4, -4
 640 0006 CCB2     		uxtb	r4, r1
 641              	.LVL65:
 140:rt_thread/src/kservice.c ****     {
 642              		.loc 1 140 27 discriminator 1 view .LVU205
 643 0008 10F0030F 		tst	r0, #3
 644 000c 1FD1     		bne	.L81
 143:rt_thread/src/kservice.c **** 
 645              		.loc 1 143 9 is_stmt 1 view .LVU206
 646              	.LVL66:
 148:rt_thread/src/kservice.c ****         {
ARM GAS  /tmp/ccPhSWJA.s 			page 28


 647              		.loc 1 148 9 view .LVU207
 150:rt_thread/src/kservice.c ****             buffer |= (buffer << 16);
 648              		.loc 1 150 13 view .LVU208
 150:rt_thread/src/kservice.c ****             buffer |= (buffer << 16);
 649              		.loc 1 150 20 is_stmt 0 view .LVU209
 650 000e 44EA0424 		orr	r4, r4, r4, lsl #8
 651              	.LVL67:
 151:rt_thread/src/kservice.c ****         }
 652              		.loc 1 151 13 is_stmt 1 view .LVU210
 151:rt_thread/src/kservice.c ****         }
 653              		.loc 1 151 20 is_stmt 0 view .LVU211
 654 0012 44EA0444 		orr	r4, r4, r4, lsl #16
 655              	.LVL68:
 143:rt_thread/src/kservice.c **** 
 656              		.loc 1 143 22 view .LVU212
 657 0016 0346     		mov	r3, r0
 658 0018 05E0     		b	.L74
 659              	.LVL69:
 660              	.L75:
 162:rt_thread/src/kservice.c ****             *aligned_addr++ = buffer;
 661              		.loc 1 162 13 is_stmt 1 view .LVU213
 162:rt_thread/src/kservice.c ****             *aligned_addr++ = buffer;
 662              		.loc 1 162 29 is_stmt 0 view .LVU214
 663 001a 1C60     		str	r4, [r3]
 163:rt_thread/src/kservice.c ****             *aligned_addr++ = buffer;
 664              		.loc 1 163 13 is_stmt 1 view .LVU215
 665              	.LVL70:
 163:rt_thread/src/kservice.c ****             *aligned_addr++ = buffer;
 666              		.loc 1 163 29 is_stmt 0 view .LVU216
 667 001c 5C60     		str	r4, [r3, #4]
 164:rt_thread/src/kservice.c ****             *aligned_addr++ = buffer;
 668              		.loc 1 164 13 is_stmt 1 view .LVU217
 669              	.LVL71:
 164:rt_thread/src/kservice.c ****             *aligned_addr++ = buffer;
 670              		.loc 1 164 29 is_stmt 0 view .LVU218
 671 001e 9C60     		str	r4, [r3, #8]
 165:rt_thread/src/kservice.c ****             count -= 4 * LBLOCKSIZE;
 672              		.loc 1 165 13 is_stmt 1 view .LVU219
 673              	.LVL72:
 165:rt_thread/src/kservice.c ****             count -= 4 * LBLOCKSIZE;
 674              		.loc 1 165 29 is_stmt 0 view .LVU220
 675 0020 DC60     		str	r4, [r3, #12]
 166:rt_thread/src/kservice.c ****         }
 676              		.loc 1 166 13 is_stmt 1 view .LVU221
 166:rt_thread/src/kservice.c ****         }
 677              		.loc 1 166 19 is_stmt 0 view .LVU222
 678 0022 103A     		subs	r2, r2, #16
 679              	.LVL73:
 165:rt_thread/src/kservice.c ****             count -= 4 * LBLOCKSIZE;
 680              		.loc 1 165 26 view .LVU223
 681 0024 1033     		adds	r3, r3, #16
 682              	.LVL74:
 683              	.L74:
 160:rt_thread/src/kservice.c ****         {
 684              		.loc 1 160 15 is_stmt 1 view .LVU224
 685 0026 0F2A     		cmp	r2, #15
 686 0028 F7D8     		bhi	.L75
ARM GAS  /tmp/ccPhSWJA.s 			page 29


 160:rt_thread/src/kservice.c ****         {
 687              		.loc 1 160 15 is_stmt 0 view .LVU225
 688 002a 02E0     		b	.L76
 689              	.L77:
 171:rt_thread/src/kservice.c ****             count -= LBLOCKSIZE;
 690              		.loc 1 171 13 is_stmt 1 view .LVU226
 691              	.LVL75:
 171:rt_thread/src/kservice.c ****             count -= LBLOCKSIZE;
 692              		.loc 1 171 29 is_stmt 0 view .LVU227
 693 002c 43F8044B 		str	r4, [r3], #4
 694              	.LVL76:
 172:rt_thread/src/kservice.c ****         }
 695              		.loc 1 172 13 is_stmt 1 view .LVU228
 172:rt_thread/src/kservice.c ****         }
 696              		.loc 1 172 19 is_stmt 0 view .LVU229
 697 0030 043A     		subs	r2, r2, #4
 698              	.LVL77:
 699              	.L76:
 169:rt_thread/src/kservice.c ****         {
 700              		.loc 1 169 15 is_stmt 1 view .LVU230
 701 0032 032A     		cmp	r2, #3
 702 0034 FAD8     		bhi	.L77
 169:rt_thread/src/kservice.c ****         {
 703              		.loc 1 169 15 is_stmt 0 view .LVU231
 704 0036 02E0     		b	.L78
 705              	.LVL78:
 706              	.L79:
 181:rt_thread/src/kservice.c ****     }
 707              		.loc 1 181 9 is_stmt 1 view .LVU232
 181:rt_thread/src/kservice.c ****     }
 708              		.loc 1 181 14 is_stmt 0 view .LVU233
 709 0038 03F8011B 		strb	r1, [r3], #1
 710              	.LVL79:
 179:rt_thread/src/kservice.c ****     {
 711              		.loc 1 179 17 view .LVU234
 712 003c 6246     		mov	r2, ip
 713              	.LVL80:
 714              	.L78:
 179:rt_thread/src/kservice.c ****     {
 715              		.loc 1 179 11 is_stmt 1 view .LVU235
 179:rt_thread/src/kservice.c ****     {
 716              		.loc 1 179 17 is_stmt 0 view .LVU236
 717 003e 02F1FF3C 		add	ip, r2, #-1
 718              	.LVL81:
 179:rt_thread/src/kservice.c ****     {
 719              		.loc 1 179 11 view .LVU237
 720 0042 002A     		cmp	r2, #0
 721 0044 F8D1     		bne	.L79
 184:rt_thread/src/kservice.c **** 
 722              		.loc 1 184 5 is_stmt 1 view .LVU238
 190:rt_thread/src/kservice.c **** 
 723              		.loc 1 190 1 is_stmt 0 view .LVU239
 724 0046 10BC     		pop	{r4}
 725              	.LCFI7:
 726              		.cfi_restore 4
 727              		.cfi_def_cfa_offset 0
 728 0048 7047     		bx	lr
ARM GAS  /tmp/ccPhSWJA.s 			page 30


 729              	.LVL82:
 730              	.L80:
 134:rt_thread/src/kservice.c ****     unsigned long buffer;
 731              		.loc 1 134 11 view .LVU240
 732 004a 0346     		mov	r3, r0
 733 004c 04E0     		b	.L83
 734              	.LVL83:
 735              	.L81:
 736              	.LCFI8:
 737              		.cfi_def_cfa_offset 4
 738              		.cfi_offset 4, -4
 134:rt_thread/src/kservice.c ****     unsigned long buffer;
 739              		.loc 1 134 11 view .LVU241
 740 004e 0346     		mov	r3, r0
 741 0050 F5E7     		b	.L78
 742              	.LVL84:
 743              	.L84:
 744              	.LCFI9:
 745              		.cfi_def_cfa_offset 0
 746              		.cfi_restore 4
 181:rt_thread/src/kservice.c ****     }
 747              		.loc 1 181 9 is_stmt 1 view .LVU242
 181:rt_thread/src/kservice.c ****     }
 748              		.loc 1 181 14 is_stmt 0 view .LVU243
 749 0052 03F8011B 		strb	r1, [r3], #1
 750              	.LVL85:
 179:rt_thread/src/kservice.c ****     {
 751              		.loc 1 179 17 view .LVU244
 752 0056 6246     		mov	r2, ip
 753              	.LVL86:
 754              	.L83:
 179:rt_thread/src/kservice.c ****     {
 755              		.loc 1 179 11 is_stmt 1 view .LVU245
 179:rt_thread/src/kservice.c ****     {
 756              		.loc 1 179 17 is_stmt 0 view .LVU246
 757 0058 02F1FF3C 		add	ip, r2, #-1
 758              	.LVL87:
 179:rt_thread/src/kservice.c ****     {
 759              		.loc 1 179 11 view .LVU247
 760 005c 002A     		cmp	r2, #0
 761 005e F8D1     		bne	.L84
 179:rt_thread/src/kservice.c ****     {
 762              		.loc 1 179 11 view .LVU248
 763 0060 7047     		bx	lr
 764              		.cfi_endproc
 765              	.LFE18:
 767              		.section	.text.rt_memcpy,"ax",%progbits
 768              		.align	1
 769              		.global	rt_memcpy
 770              		.syntax unified
 771              		.thumb
 772              		.thumb_func
 774              	rt_memcpy:
 775              	.LVL88:
 776              	.LFB19:
 203:rt_thread/src/kservice.c **** #ifdef RT_USING_TINY_SIZE
 777              		.loc 1 203 1 is_stmt 1 view -0
ARM GAS  /tmp/ccPhSWJA.s 			page 31


 778              		.cfi_startproc
 779              		@ args = 0, pretend = 0, frame = 0
 780              		@ frame_needed = 0, uses_anonymous_args = 0
 781              		@ link register save eliminated.
 228:rt_thread/src/kservice.c ****     char *src_ptr = (char *)src;
 782              		.loc 1 228 5 view .LVU250
 229:rt_thread/src/kservice.c ****     long *aligned_dst;
 783              		.loc 1 229 5 view .LVU251
 230:rt_thread/src/kservice.c ****     long *aligned_src;
 784              		.loc 1 230 5 view .LVU252
 231:rt_thread/src/kservice.c ****     int len = count;
 785              		.loc 1 231 5 view .LVU253
 232:rt_thread/src/kservice.c **** 
 786              		.loc 1 232 5 view .LVU254
 236:rt_thread/src/kservice.c ****     {
 787              		.loc 1 236 5 view .LVU255
 236:rt_thread/src/kservice.c ****     {
 788              		.loc 1 236 8 is_stmt 0 view .LVU256
 789 0000 0F2A     		cmp	r2, #15
 790 0002 2AD9     		bls	.L96
 236:rt_thread/src/kservice.c ****     {
 791              		.loc 1 236 29 discriminator 1 view .LVU257
 792 0004 41EA0003 		orr	r3, r1, r0
 236:rt_thread/src/kservice.c ****     {
 793              		.loc 1 236 25 discriminator 1 view .LVU258
 794 0008 13F0030F 		tst	r3, #3
 795 000c 0FD0     		beq	.L97
 228:rt_thread/src/kservice.c ****     char *src_ptr = (char *)src;
 796              		.loc 1 228 11 view .LVU259
 797 000e 0346     		mov	r3, r0
 798 0010 2AE0     		b	.L99
 799              	.LVL89:
 800              	.L91:
 801              	.LCFI10:
 802              		.cfi_def_cfa_offset 4
 803              		.cfi_offset 4, -4
 244:rt_thread/src/kservice.c ****             *aligned_dst++ = *aligned_src++;
 804              		.loc 1 244 13 is_stmt 1 view .LVU260
 244:rt_thread/src/kservice.c ****             *aligned_dst++ = *aligned_src++;
 805              		.loc 1 244 28 is_stmt 0 view .LVU261
 806 0012 0C68     		ldr	r4, [r1]
 807 0014 1C60     		str	r4, [r3]
 245:rt_thread/src/kservice.c ****             *aligned_dst++ = *aligned_src++;
 808              		.loc 1 245 13 is_stmt 1 view .LVU262
 809              	.LVL90:
 245:rt_thread/src/kservice.c ****             *aligned_dst++ = *aligned_src++;
 810              		.loc 1 245 28 is_stmt 0 view .LVU263
 811 0016 4C68     		ldr	r4, [r1, #4]
 812 0018 5C60     		str	r4, [r3, #4]
 246:rt_thread/src/kservice.c ****             *aligned_dst++ = *aligned_src++;
 813              		.loc 1 246 13 is_stmt 1 view .LVU264
 814              	.LVL91:
 246:rt_thread/src/kservice.c ****             *aligned_dst++ = *aligned_src++;
 815              		.loc 1 246 28 is_stmt 0 view .LVU265
 816 001a 8C68     		ldr	r4, [r1, #8]
 817 001c 9C60     		str	r4, [r3, #8]
 247:rt_thread/src/kservice.c ****             len -= BIGBLOCKSIZE;
ARM GAS  /tmp/ccPhSWJA.s 			page 32


 818              		.loc 1 247 13 is_stmt 1 view .LVU266
 819              	.LVL92:
 247:rt_thread/src/kservice.c ****             len -= BIGBLOCKSIZE;
 820              		.loc 1 247 28 is_stmt 0 view .LVU267
 821 001e CC68     		ldr	r4, [r1, #12]
 822 0020 DC60     		str	r4, [r3, #12]
 248:rt_thread/src/kservice.c ****         }
 823              		.loc 1 248 13 is_stmt 1 view .LVU268
 248:rt_thread/src/kservice.c ****         }
 824              		.loc 1 248 17 is_stmt 0 view .LVU269
 825 0022 103A     		subs	r2, r2, #16
 826              	.LVL93:
 247:rt_thread/src/kservice.c ****             len -= BIGBLOCKSIZE;
 827              		.loc 1 247 42 view .LVU270
 828 0024 1031     		adds	r1, r1, #16
 829              	.LVL94:
 247:rt_thread/src/kservice.c ****             len -= BIGBLOCKSIZE;
 830              		.loc 1 247 25 view .LVU271
 831 0026 1033     		adds	r3, r3, #16
 832              	.LVL95:
 833              	.L90:
 242:rt_thread/src/kservice.c ****         {
 834              		.loc 1 242 15 is_stmt 1 view .LVU272
 835 0028 0F2A     		cmp	r2, #15
 836 002a F2D8     		bhi	.L91
 242:rt_thread/src/kservice.c ****         {
 837              		.loc 1 242 15 is_stmt 0 view .LVU273
 838 002c 07E0     		b	.L92
 839              	.LVL96:
 840              	.L97:
 841              	.LCFI11:
 842              		.cfi_def_cfa_offset 0
 843              		.cfi_restore 4
 203:rt_thread/src/kservice.c **** #ifdef RT_USING_TINY_SIZE
 844              		.loc 1 203 1 view .LVU274
 845 002e 10B4     		push	{r4}
 846              	.LCFI12:
 847              		.cfi_def_cfa_offset 4
 848              		.cfi_offset 4, -4
 238:rt_thread/src/kservice.c ****         aligned_src = (long *)src_ptr;
 849              		.loc 1 238 21 view .LVU275
 850 0030 0346     		mov	r3, r0
 851 0032 F9E7     		b	.L90
 852              	.LVL97:
 853              	.L93:
 254:rt_thread/src/kservice.c ****             len -= LITTLEBLOCKSIZE;
 854              		.loc 1 254 13 is_stmt 1 view .LVU276
 254:rt_thread/src/kservice.c ****             len -= LITTLEBLOCKSIZE;
 855              		.loc 1 254 30 is_stmt 0 view .LVU277
 856 0034 51F8044B 		ldr	r4, [r1], #4
 857              	.LVL98:
 254:rt_thread/src/kservice.c ****             len -= LITTLEBLOCKSIZE;
 858              		.loc 1 254 28 view .LVU278
 859 0038 43F8044B 		str	r4, [r3], #4
 860              	.LVL99:
 255:rt_thread/src/kservice.c ****         }
 861              		.loc 1 255 13 is_stmt 1 view .LVU279
ARM GAS  /tmp/ccPhSWJA.s 			page 33


 255:rt_thread/src/kservice.c ****         }
 862              		.loc 1 255 17 is_stmt 0 view .LVU280
 863 003c 043A     		subs	r2, r2, #4
 864              	.LVL100:
 865              	.L92:
 252:rt_thread/src/kservice.c ****         {
 866              		.loc 1 252 15 is_stmt 1 view .LVU281
 867 003e 032A     		cmp	r2, #3
 868 0040 F8D8     		bhi	.L93
 252:rt_thread/src/kservice.c ****         {
 869              		.loc 1 252 15 is_stmt 0 view .LVU282
 870 0042 04E0     		b	.L94
 871              	.LVL101:
 872              	.L95:
 264:rt_thread/src/kservice.c **** 
 873              		.loc 1 264 9 is_stmt 1 view .LVU283
 264:rt_thread/src/kservice.c **** 
 874              		.loc 1 264 22 is_stmt 0 view .LVU284
 875 0044 11F8012B 		ldrb	r2, [r1], #1	@ zero_extendqisi2
 876              	.LVL102:
 264:rt_thread/src/kservice.c **** 
 877              		.loc 1 264 20 view .LVU285
 878 0048 03F8012B 		strb	r2, [r3], #1
 879              	.LVL103:
 263:rt_thread/src/kservice.c ****         *dst_ptr++ = *src_ptr++;
 880              		.loc 1 263 15 view .LVU286
 881 004c 6246     		mov	r2, ip
 882              	.LVL104:
 883              	.L94:
 263:rt_thread/src/kservice.c ****         *dst_ptr++ = *src_ptr++;
 884              		.loc 1 263 11 is_stmt 1 view .LVU287
 263:rt_thread/src/kservice.c ****         *dst_ptr++ = *src_ptr++;
 885              		.loc 1 263 15 is_stmt 0 view .LVU288
 886 004e 02F1FF3C 		add	ip, r2, #-1
 887              	.LVL105:
 263:rt_thread/src/kservice.c ****         *dst_ptr++ = *src_ptr++;
 888              		.loc 1 263 11 view .LVU289
 889 0052 002A     		cmp	r2, #0
 890 0054 F6D1     		bne	.L95
 266:rt_thread/src/kservice.c **** #undef UNALIGNED
 891              		.loc 1 266 5 is_stmt 1 view .LVU290
 272:rt_thread/src/kservice.c **** 
 892              		.loc 1 272 1 is_stmt 0 view .LVU291
 893 0056 10BC     		pop	{r4}
 894              	.LCFI13:
 895              		.cfi_restore 4
 896              		.cfi_def_cfa_offset 0
 897 0058 7047     		bx	lr
 898              	.LVL106:
 899              	.L96:
 228:rt_thread/src/kservice.c ****     char *src_ptr = (char *)src;
 900              		.loc 1 228 11 view .LVU292
 901 005a 0346     		mov	r3, r0
 902 005c 04E0     		b	.L99
 903              	.LVL107:
 904              	.L100:
 264:rt_thread/src/kservice.c **** 
ARM GAS  /tmp/ccPhSWJA.s 			page 34


 905              		.loc 1 264 9 is_stmt 1 view .LVU293
 264:rt_thread/src/kservice.c **** 
 906              		.loc 1 264 22 is_stmt 0 view .LVU294
 907 005e 11F8012B 		ldrb	r2, [r1], #1	@ zero_extendqisi2
 908              	.LVL108:
 264:rt_thread/src/kservice.c **** 
 909              		.loc 1 264 20 view .LVU295
 910 0062 03F8012B 		strb	r2, [r3], #1
 911              	.LVL109:
 263:rt_thread/src/kservice.c ****         *dst_ptr++ = *src_ptr++;
 912              		.loc 1 263 15 view .LVU296
 913 0066 6246     		mov	r2, ip
 914              	.LVL110:
 915              	.L99:
 263:rt_thread/src/kservice.c ****         *dst_ptr++ = *src_ptr++;
 916              		.loc 1 263 11 is_stmt 1 view .LVU297
 263:rt_thread/src/kservice.c ****         *dst_ptr++ = *src_ptr++;
 917              		.loc 1 263 15 is_stmt 0 view .LVU298
 918 0068 02F1FF3C 		add	ip, r2, #-1
 919              	.LVL111:
 263:rt_thread/src/kservice.c ****         *dst_ptr++ = *src_ptr++;
 920              		.loc 1 263 11 view .LVU299
 921 006c 002A     		cmp	r2, #0
 922 006e F6D1     		bne	.L100
 263:rt_thread/src/kservice.c ****         *dst_ptr++ = *src_ptr++;
 923              		.loc 1 263 11 view .LVU300
 924 0070 7047     		bx	lr
 925              		.cfi_endproc
 926              	.LFE19:
 928              		.section	.text.rt_memmove,"ax",%progbits
 929              		.align	1
 930              		.global	rt_memmove
 931              		.syntax unified
 932              		.thumb
 933              		.thumb_func
 935              	rt_memmove:
 936              	.LVL112:
 937              	.LFB20:
 285:rt_thread/src/kservice.c ****     char *tmp = (char *)dest, *s = (char *)src;
 938              		.loc 1 285 1 is_stmt 1 view -0
 939              		.cfi_startproc
 940              		@ args = 0, pretend = 0, frame = 0
 941              		@ frame_needed = 0, uses_anonymous_args = 0
 942              		@ link register save eliminated.
 286:rt_thread/src/kservice.c **** 
 943              		.loc 1 286 5 view .LVU302
 288:rt_thread/src/kservice.c ****     {
 944              		.loc 1 288 5 view .LVU303
 288:rt_thread/src/kservice.c ****     {
 945              		.loc 1 288 8 is_stmt 0 view .LVU304
 946 0000 8842     		cmp	r0, r1
 947 0002 18D9     		bls	.L110
 288:rt_thread/src/kservice.c ****     {
 948              		.loc 1 288 28 discriminator 1 view .LVU305
 949 0004 8B18     		adds	r3, r1, r2
 288:rt_thread/src/kservice.c ****     {
 950              		.loc 1 288 17 discriminator 1 view .LVU306
ARM GAS  /tmp/ccPhSWJA.s 			page 35


 951 0006 8342     		cmp	r3, r0
 952 0008 17D9     		bls	.L111
 290:rt_thread/src/kservice.c ****         s += n;
 953              		.loc 1 290 9 is_stmt 1 view .LVU307
 290:rt_thread/src/kservice.c ****         s += n;
 954              		.loc 1 290 13 is_stmt 0 view .LVU308
 955 000a 00EB020C 		add	ip, r0, r2
 956              	.LVL113:
 291:rt_thread/src/kservice.c **** 
 957              		.loc 1 291 9 is_stmt 1 view .LVU309
 293:rt_thread/src/kservice.c ****             *(--tmp) = *(--s);
 958              		.loc 1 293 9 view .LVU310
 293:rt_thread/src/kservice.c ****             *(--tmp) = *(--s);
 959              		.loc 1 293 15 is_stmt 0 view .LVU311
 960 000e 04E0     		b	.L105
 961              	.LVL114:
 962              	.L106:
 294:rt_thread/src/kservice.c ****     }
 963              		.loc 1 294 13 is_stmt 1 view .LVU312
 294:rt_thread/src/kservice.c ****     }
 964              		.loc 1 294 24 is_stmt 0 view .LVU313
 965 0010 13F8012D 		ldrb	r2, [r3, #-1]!	@ zero_extendqisi2
 966              	.LVL115:
 294:rt_thread/src/kservice.c ****     }
 967              		.loc 1 294 22 view .LVU314
 968 0014 0CF8012D 		strb	r2, [ip, #-1]!
 969              	.LVL116:
 293:rt_thread/src/kservice.c ****             *(--tmp) = *(--s);
 970              		.loc 1 293 17 view .LVU315
 971 0018 0A46     		mov	r2, r1
 972              	.LVL117:
 973              	.L105:
 293:rt_thread/src/kservice.c ****             *(--tmp) = *(--s);
 974              		.loc 1 293 15 is_stmt 1 view .LVU316
 293:rt_thread/src/kservice.c ****             *(--tmp) = *(--s);
 975              		.loc 1 293 17 is_stmt 0 view .LVU317
 976 001a 511E     		subs	r1, r2, #1
 977              	.LVL118:
 293:rt_thread/src/kservice.c ****             *(--tmp) = *(--s);
 978              		.loc 1 293 15 view .LVU318
 979 001c 002A     		cmp	r2, #0
 980 001e F7D1     		bne	.L106
 293:rt_thread/src/kservice.c ****             *(--tmp) = *(--s);
 981              		.loc 1 293 15 view .LVU319
 982 0020 7047     		bx	lr
 983              	.LVL119:
 984              	.L109:
 299:rt_thread/src/kservice.c ****     }
 985              		.loc 1 299 13 is_stmt 1 view .LVU320
 299:rt_thread/src/kservice.c ****     }
 986              		.loc 1 299 22 is_stmt 0 view .LVU321
 987 0022 11F8012B 		ldrb	r2, [r1], #1	@ zero_extendqisi2
 988              	.LVL120:
 299:rt_thread/src/kservice.c ****     }
 989              		.loc 1 299 20 view .LVU322
 990 0026 03F8012B 		strb	r2, [r3], #1
 991              	.LVL121:
ARM GAS  /tmp/ccPhSWJA.s 			page 36


 298:rt_thread/src/kservice.c ****             *tmp++ = *s++;
 992              		.loc 1 298 17 view .LVU323
 993 002a 6246     		mov	r2, ip
 994              	.LVL122:
 995              	.L108:
 298:rt_thread/src/kservice.c ****             *tmp++ = *s++;
 996              		.loc 1 298 15 is_stmt 1 view .LVU324
 298:rt_thread/src/kservice.c ****             *tmp++ = *s++;
 997              		.loc 1 298 17 is_stmt 0 view .LVU325
 998 002c 02F1FF3C 		add	ip, r2, #-1
 999              	.LVL123:
 298:rt_thread/src/kservice.c ****             *tmp++ = *s++;
 1000              		.loc 1 298 15 view .LVU326
 1001 0030 002A     		cmp	r2, #0
 1002 0032 F6D1     		bne	.L109
 302:rt_thread/src/kservice.c **** }
 1003              		.loc 1 302 5 is_stmt 1 view .LVU327
 303:rt_thread/src/kservice.c **** 
 1004              		.loc 1 303 1 is_stmt 0 view .LVU328
 1005 0034 7047     		bx	lr
 1006              	.LVL124:
 1007              	.L110:
 303:rt_thread/src/kservice.c **** 
 1008              		.loc 1 303 1 view .LVU329
 1009 0036 0346     		mov	r3, r0
 1010 0038 F8E7     		b	.L108
 1011              	.L111:
 303:rt_thread/src/kservice.c **** 
 1012              		.loc 1 303 1 view .LVU330
 1013 003a 0346     		mov	r3, r0
 1014 003c F6E7     		b	.L108
 1015              		.cfi_endproc
 1016              	.LFE20:
 1018              		.section	.text.rt_memcmp,"ax",%progbits
 1019              		.align	1
 1020              		.global	rt_memcmp
 1021              		.syntax unified
 1022              		.thumb
 1023              		.thumb_func
 1025              	rt_memcmp:
 1026              	.LVL125:
 1027              	.LFB21:
 315:rt_thread/src/kservice.c ****     const unsigned char *su1, *su2;
 1028              		.loc 1 315 1 is_stmt 1 view -0
 1029              		.cfi_startproc
 1030              		@ args = 0, pretend = 0, frame = 0
 1031              		@ frame_needed = 0, uses_anonymous_args = 0
 1032              		@ link register save eliminated.
 315:rt_thread/src/kservice.c ****     const unsigned char *su1, *su2;
 1033              		.loc 1 315 1 is_stmt 0 view .LVU332
 1034 0000 0346     		mov	r3, r0
 316:rt_thread/src/kservice.c ****     int res = 0;
 1035              		.loc 1 316 5 is_stmt 1 view .LVU333
 317:rt_thread/src/kservice.c **** 
 1036              		.loc 1 317 5 view .LVU334
 1037              	.LVL126:
 319:rt_thread/src/kservice.c ****         if ((res = *su1 - *su2) != 0)
ARM GAS  /tmp/ccPhSWJA.s 			page 37


 1038              		.loc 1 319 5 view .LVU335
 317:rt_thread/src/kservice.c **** 
 1039              		.loc 1 317 9 is_stmt 0 view .LVU336
 1040 0002 0020     		movs	r0, #0
 1041              	.LVL127:
 319:rt_thread/src/kservice.c ****         if ((res = *su1 - *su2) != 0)
 1042              		.loc 1 319 5 view .LVU337
 1043 0004 02E0     		b	.L113
 1044              	.LVL128:
 1045              	.L116:
 319:rt_thread/src/kservice.c ****         if ((res = *su1 - *su2) != 0)
 1046              		.loc 1 319 87 is_stmt 1 discriminator 2 view .LVU338
 1047 0006 0133     		adds	r3, r3, #1
 1048              	.LVL129:
 319:rt_thread/src/kservice.c ****         if ((res = *su1 - *su2) != 0)
 1049              		.loc 1 319 94 is_stmt 0 discriminator 2 view .LVU339
 1050 0008 0131     		adds	r1, r1, #1
 1051              	.LVL130:
 319:rt_thread/src/kservice.c ****         if ((res = *su1 - *su2) != 0)
 1052              		.loc 1 319 106 discriminator 2 view .LVU340
 1053 000a 013A     		subs	r2, r2, #1
 1054              	.LVL131:
 1055              	.L113:
 319:rt_thread/src/kservice.c ****         if ((res = *su1 - *su2) != 0)
 1056              		.loc 1 319 76 is_stmt 1 discriminator 1 view .LVU341
 319:rt_thread/src/kservice.c ****         if ((res = *su1 - *su2) != 0)
 1057              		.loc 1 319 5 is_stmt 0 discriminator 1 view .LVU342
 1058 000c 2AB1     		cbz	r2, .L112
 320:rt_thread/src/kservice.c ****             break;
 1059              		.loc 1 320 9 is_stmt 1 view .LVU343
 320:rt_thread/src/kservice.c ****             break;
 1060              		.loc 1 320 20 is_stmt 0 view .LVU344
 1061 000e 1878     		ldrb	r0, [r3]	@ zero_extendqisi2
 1062              	.LVL132:
 320:rt_thread/src/kservice.c ****             break;
 1063              		.loc 1 320 27 view .LVU345
 1064 0010 91F800C0 		ldrb	ip, [r1]	@ zero_extendqisi2
 1065              	.LVL133:
 320:rt_thread/src/kservice.c ****             break;
 1066              		.loc 1 320 12 view .LVU346
 1067 0014 B0EB0C00 		subs	r0, r0, ip
 1068              	.LVL134:
 320:rt_thread/src/kservice.c ****             break;
 1069              		.loc 1 320 12 view .LVU347
 1070 0018 F5D0     		beq	.L116
 1071              	.LVL135:
 1072              	.L112:
 324:rt_thread/src/kservice.c **** 
 1073              		.loc 1 324 1 view .LVU348
 1074 001a 7047     		bx	lr
 1075              		.cfi_endproc
 1076              	.LFE21:
 1078              		.section	.text.rt_strcasecmp,"ax",%progbits
 1079              		.align	1
 1080              		.global	rt_strcasecmp
 1081              		.syntax unified
 1082              		.thumb
ARM GAS  /tmp/ccPhSWJA.s 			page 38


 1083              		.thumb_func
 1085              	rt_strcasecmp:
 1086              	.LFB23:
 362:rt_thread/src/kservice.c ****     int ca, cb;
 1087              		.loc 1 362 1 is_stmt 1 view -0
 1088              		.cfi_startproc
 1089              		@ args = 0, pretend = 0, frame = 0
 1090              		@ frame_needed = 0, uses_anonymous_args = 0
 1091              	.LVL136:
 362:rt_thread/src/kservice.c ****     int ca, cb;
 1092              		.loc 1 362 1 is_stmt 0 view .LVU350
 1093 0000 00B5     		push	{lr}
 1094              	.LCFI14:
 1095              		.cfi_def_cfa_offset 4
 1096              		.cfi_offset 14, -4
 1097 0002 04E0     		b	.L121
 1098              	.LVL137:
 1099              	.L123:
 372:rt_thread/src/kservice.c ****     }
 1100              		.loc 1 372 13 is_stmt 1 view .LVU351
 372:rt_thread/src/kservice.c ****     }
 1101              		.loc 1 372 16 is_stmt 0 view .LVU352
 1102 0004 02F1200C 		add	ip, r2, #32
 1103              	.LVL138:
 1104              	.L119:
 374:rt_thread/src/kservice.c **** 
 1105              		.loc 1 374 11 is_stmt 1 view .LVU353
 374:rt_thread/src/kservice.c **** 
 1106              		.loc 1 374 5 is_stmt 0 view .LVU354
 1107 0008 6345     		cmp	r3, ip
 1108 000a 11D1     		bne	.L120
 374:rt_thread/src/kservice.c **** 
 1109              		.loc 1 374 21 discriminator 1 view .LVU355
 1110 000c 83B1     		cbz	r3, .L120
 1111              	.LVL139:
 1112              	.L121:
 363:rt_thread/src/kservice.c **** 
 1113              		.loc 1 363 5 is_stmt 1 view .LVU356
 365:rt_thread/src/kservice.c ****     {
 1114              		.loc 1 365 5 view .LVU357
 367:rt_thread/src/kservice.c ****         cb = *b++ & 0xff;
 1115              		.loc 1 367 9 view .LVU358
 367:rt_thread/src/kservice.c ****         cb = *b++ & 0xff;
 1116              		.loc 1 367 14 is_stmt 0 view .LVU359
 1117 000e 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
 1118 0010 0130     		adds	r0, r0, #1
 1119              	.LVL140:
 368:rt_thread/src/kservice.c ****         if (ca >= 'A' && ca <= 'Z')
 1120              		.loc 1 368 9 is_stmt 1 view .LVU360
 368:rt_thread/src/kservice.c ****         if (ca >= 'A' && ca <= 'Z')
 1121              		.loc 1 368 14 is_stmt 0 view .LVU361
 1122 0012 0A78     		ldrb	r2, [r1]	@ zero_extendqisi2
 1123 0014 0131     		adds	r1, r1, #1
 1124              	.LVL141:
 368:rt_thread/src/kservice.c ****         if (ca >= 'A' && ca <= 'Z')
 1125              		.loc 1 368 12 view .LVU362
 1126 0016 9446     		mov	ip, r2
ARM GAS  /tmp/ccPhSWJA.s 			page 39


 1127              	.LVL142:
 369:rt_thread/src/kservice.c ****             ca += 'a' - 'A';
 1128              		.loc 1 369 9 is_stmt 1 view .LVU363
 369:rt_thread/src/kservice.c ****             ca += 'a' - 'A';
 1129              		.loc 1 369 23 is_stmt 0 view .LVU364
 1130 0018 A3F1410E 		sub	lr, r3, #65
 369:rt_thread/src/kservice.c ****             ca += 'a' - 'A';
 1131              		.loc 1 369 12 view .LVU365
 1132 001c BEF1190F 		cmp	lr, #25
 1133 0020 00D8     		bhi	.L118
 370:rt_thread/src/kservice.c ****         if (cb >= 'A' && cb <= 'Z')
 1134              		.loc 1 370 13 is_stmt 1 view .LVU366
 370:rt_thread/src/kservice.c ****         if (cb >= 'A' && cb <= 'Z')
 1135              		.loc 1 370 16 is_stmt 0 view .LVU367
 1136 0022 2033     		adds	r3, r3, #32
 1137              	.LVL143:
 1138              	.L118:
 371:rt_thread/src/kservice.c ****             cb += 'a' - 'A';
 1139              		.loc 1 371 9 is_stmt 1 view .LVU368
 371:rt_thread/src/kservice.c ****             cb += 'a' - 'A';
 1140              		.loc 1 371 23 is_stmt 0 view .LVU369
 1141 0024 A2F1410E 		sub	lr, r2, #65
 371:rt_thread/src/kservice.c ****             cb += 'a' - 'A';
 1142              		.loc 1 371 12 view .LVU370
 1143 0028 BEF1190F 		cmp	lr, #25
 1144 002c ECD8     		bhi	.L119
 371:rt_thread/src/kservice.c ****             cb += 'a' - 'A';
 1145              		.loc 1 371 12 view .LVU371
 1146 002e E9E7     		b	.L123
 1147              	.LVL144:
 1148              	.L120:
 376:rt_thread/src/kservice.c **** }
 1149              		.loc 1 376 5 is_stmt 1 view .LVU372
 377:rt_thread/src/kservice.c **** 
 1150              		.loc 1 377 1 is_stmt 0 view .LVU373
 1151 0030 A3EB0C00 		sub	r0, r3, ip
 1152              	.LVL145:
 377:rt_thread/src/kservice.c **** 
 1153              		.loc 1 377 1 view .LVU374
 1154 0034 5DF804FB 		ldr	pc, [sp], #4
 1155              		.cfi_endproc
 1156              	.LFE23:
 1158              		.section	.text.rt_strncpy,"ax",%progbits
 1159              		.align	1
 1160              		.global	rt_strncpy
 1161              		.syntax unified
 1162              		.thumb
 1163              		.thumb_func
 1165              	rt_strncpy:
 1166              	.LVL146:
 1167              	.LFB24:
 389:rt_thread/src/kservice.c ****     if (n != 0)
 1168              		.loc 1 389 1 is_stmt 1 view -0
 1169              		.cfi_startproc
 1170              		@ args = 0, pretend = 0, frame = 0
 1171              		@ frame_needed = 0, uses_anonymous_args = 0
 390:rt_thread/src/kservice.c ****     {
ARM GAS  /tmp/ccPhSWJA.s 			page 40


 1172              		.loc 1 390 5 view .LVU376
 390:rt_thread/src/kservice.c ****     {
 1173              		.loc 1 390 8 is_stmt 0 view .LVU377
 1174 0000 9AB1     		cbz	r2, .L132
 389:rt_thread/src/kservice.c ****     if (n != 0)
 1175              		.loc 1 389 1 view .LVU378
 1176 0002 10B5     		push	{r4, lr}
 1177              	.LCFI15:
 1178              		.cfi_def_cfa_offset 8
 1179              		.cfi_offset 4, -8
 1180              		.cfi_offset 14, -4
 1181 0004 9446     		mov	ip, r2
 1182              	.LBB8:
 392:rt_thread/src/kservice.c ****         const char *s = src;
 1183              		.loc 1 392 15 view .LVU379
 1184 0006 0346     		mov	r3, r0
 1185              	.LVL147:
 1186              	.L129:
 395:rt_thread/src/kservice.c ****         {
 1187              		.loc 1 395 9 is_stmt 1 view .LVU380
 397:rt_thread/src/kservice.c ****             {
 1188              		.loc 1 397 13 view .LVU381
 1189 0008 8E46     		mov	lr, r1
 397:rt_thread/src/kservice.c ****             {
 1190              		.loc 1 397 25 is_stmt 0 view .LVU382
 1191 000a 0C78     		ldrb	r4, [r1]	@ zero_extendqisi2
 1192 000c 0131     		adds	r1, r1, #1
 1193              	.LVL148:
 397:rt_thread/src/kservice.c ****             {
 1194              		.loc 1 397 23 view .LVU383
 1195 000e 1C70     		strb	r4, [r3]
 1196 0010 0133     		adds	r3, r3, #1
 1197              	.LVL149:
 397:rt_thread/src/kservice.c ****             {
 1198              		.loc 1 397 16 view .LVU384
 1199 0012 1CB1     		cbz	r4, .L126
 404:rt_thread/src/kservice.c ****     }
 1200              		.loc 1 404 17 is_stmt 1 view .LVU385
 1201              	.LVL150:
 404:rt_thread/src/kservice.c ****     }
 1202              		.loc 1 404 9 is_stmt 0 view .LVU386
 1203 0014 BCF1010C 		subs	ip, ip, #1
 1204              	.LVL151:
 404:rt_thread/src/kservice.c ****     }
 1205              		.loc 1 404 9 view .LVU387
 1206 0018 F6D1     		bne	.L129
 1207              	.LVL152:
 1208              	.L125:
 404:rt_thread/src/kservice.c ****     }
 1209              		.loc 1 404 9 view .LVU388
 1210              	.LBE8:
 407:rt_thread/src/kservice.c **** }
 1211              		.loc 1 407 5 is_stmt 1 view .LVU389
 408:rt_thread/src/kservice.c **** 
 1212              		.loc 1 408 1 is_stmt 0 view .LVU390
 1213 001a 10BD     		pop	{r4, pc}
 1214              	.L126:
ARM GAS  /tmp/ccPhSWJA.s 			page 41


 1215              	.LVL153:
 1216              	.LBB9:
 400:rt_thread/src/kservice.c ****                     *d++ = 0;
 1217              		.loc 1 400 23 is_stmt 1 view .LVU391
 400:rt_thread/src/kservice.c ****                     *d++ = 0;
 1218              		.loc 1 400 23 is_stmt 0 view .LVU392
 1219 001c BCF1010C 		subs	ip, ip, #1
 1220              	.LVL154:
 400:rt_thread/src/kservice.c ****                     *d++ = 0;
 1221              		.loc 1 400 23 view .LVU393
 1222 0020 FBD0     		beq	.L125
 401:rt_thread/src/kservice.c ****                 break;
 1223              		.loc 1 401 21 is_stmt 1 view .LVU394
 1224              	.LVL155:
 401:rt_thread/src/kservice.c ****                 break;
 1225              		.loc 1 401 26 is_stmt 0 view .LVU395
 1226 0022 0022     		movs	r2, #0
 1227 0024 03F8012B 		strb	r2, [r3], #1
 1228              	.LVL156:
 401:rt_thread/src/kservice.c ****                 break;
 1229              		.loc 1 401 26 view .LVU396
 1230 0028 F8E7     		b	.L126
 1231              	.LVL157:
 1232              	.L132:
 1233              	.LCFI16:
 1234              		.cfi_def_cfa_offset 0
 1235              		.cfi_restore 4
 1236              		.cfi_restore 14
 401:rt_thread/src/kservice.c ****                 break;
 1237              		.loc 1 401 26 view .LVU397
 1238              	.LBE9:
 407:rt_thread/src/kservice.c **** }
 1239              		.loc 1 407 5 is_stmt 1 view .LVU398
 408:rt_thread/src/kservice.c **** 
 1240              		.loc 1 408 1 is_stmt 0 view .LVU399
 1241 002a 7047     		bx	lr
 1242              		.cfi_endproc
 1243              	.LFE24:
 1245              		.section	.text.rt_strncmp,"ax",%progbits
 1246              		.align	1
 1247              		.global	rt_strncmp
 1248              		.syntax unified
 1249              		.thumb
 1250              		.thumb_func
 1252              	rt_strncmp:
 1253              	.LVL158:
 1254              	.LFB25:
 420:rt_thread/src/kservice.c ****     register signed char __res = 0;
 1255              		.loc 1 420 1 is_stmt 1 view -0
 1256              		.cfi_startproc
 1257              		@ args = 0, pretend = 0, frame = 0
 1258              		@ frame_needed = 0, uses_anonymous_args = 0
 1259              		@ link register save eliminated.
 420:rt_thread/src/kservice.c ****     register signed char __res = 0;
 1260              		.loc 1 420 1 is_stmt 0 view .LVU401
 1261 0000 0346     		mov	r3, r0
 421:rt_thread/src/kservice.c **** 
ARM GAS  /tmp/ccPhSWJA.s 			page 42


 1262              		.loc 1 421 5 is_stmt 1 view .LVU402
 1263              	.LVL159:
 423:rt_thread/src/kservice.c ****     {
 1264              		.loc 1 423 5 view .LVU403
 421:rt_thread/src/kservice.c **** 
 1265              		.loc 1 421 26 is_stmt 0 view .LVU404
 1266 0002 0020     		movs	r0, #0
 1267              	.LVL160:
 423:rt_thread/src/kservice.c ****     {
 1268              		.loc 1 423 11 is_stmt 1 view .LVU405
 1269 0004 6AB1     		cbz	r2, .L143
 420:rt_thread/src/kservice.c ****     register signed char __res = 0;
 1270              		.loc 1 420 1 is_stmt 0 view .LVU406
 1271 0006 10B4     		push	{r4}
 1272              	.LCFI17:
 1273              		.cfi_def_cfa_offset 4
 1274              		.cfi_offset 4, -4
 1275              	.L138:
 425:rt_thread/src/kservice.c ****             break;
 1276              		.loc 1 425 9 is_stmt 1 view .LVU407
 425:rt_thread/src/kservice.c ****             break;
 1277              		.loc 1 425 22 is_stmt 0 view .LVU408
 1278 0008 1C78     		ldrb	r4, [r3]	@ zero_extendqisi2
 1279              	.LVL161:
 425:rt_thread/src/kservice.c ****             break;
 1280              		.loc 1 425 28 view .LVU409
 1281 000a 11F8010B 		ldrb	r0, [r1], #1	@ zero_extendqisi2
 1282              	.LVL162:
 425:rt_thread/src/kservice.c ****             break;
 1283              		.loc 1 425 26 view .LVU410
 1284 000e 201A     		subs	r0, r4, r0
 425:rt_thread/src/kservice.c ****             break;
 1285              		.loc 1 425 20 view .LVU411
 1286 0010 40B2     		sxtb	r0, r0
 1287              	.LVL163:
 425:rt_thread/src/kservice.c ****             break;
 1288              		.loc 1 425 12 view .LVU412
 1289 0012 20B9     		cbnz	r0, .L137
 425:rt_thread/src/kservice.c ****             break;
 1290              		.loc 1 425 47 discriminator 1 view .LVU413
 1291 0014 0133     		adds	r3, r3, #1
 1292              	.LVL164:
 425:rt_thread/src/kservice.c ****             break;
 1293              		.loc 1 425 40 discriminator 1 view .LVU414
 1294 0016 14B1     		cbz	r4, .L137
 427:rt_thread/src/kservice.c ****     }
 1295              		.loc 1 427 9 is_stmt 1 view .LVU415
 427:rt_thread/src/kservice.c ****     }
 1296              		.loc 1 427 15 is_stmt 0 view .LVU416
 1297 0018 013A     		subs	r2, r2, #1
 1298              	.LVL165:
 423:rt_thread/src/kservice.c ****     {
 1299              		.loc 1 423 11 is_stmt 1 view .LVU417
 1300 001a 002A     		cmp	r2, #0
 1301 001c F4D1     		bne	.L138
 1302              	.L137:
 430:rt_thread/src/kservice.c **** }
ARM GAS  /tmp/ccPhSWJA.s 			page 43


 1303              		.loc 1 430 5 view .LVU418
 431:rt_thread/src/kservice.c **** 
 1304              		.loc 1 431 1 is_stmt 0 view .LVU419
 1305 001e 10BC     		pop	{r4}
 1306              	.LCFI18:
 1307              		.cfi_restore 4
 1308              		.cfi_def_cfa_offset 0
 1309 0020 7047     		bx	lr
 1310              	.L143:
 431:rt_thread/src/kservice.c **** 
 1311              		.loc 1 431 1 view .LVU420
 1312 0022 7047     		bx	lr
 1313              		.cfi_endproc
 1314              	.LFE25:
 1316              		.section	.text.rt_strcmp,"ax",%progbits
 1317              		.align	1
 1318              		.global	rt_strcmp
 1319              		.syntax unified
 1320              		.thumb
 1321              		.thumb_func
 1323              	rt_strcmp:
 1324              	.LVL166:
 1325              	.LFB26:
 442:rt_thread/src/kservice.c ****     while (*cs && *cs == *ct)
 1326              		.loc 1 442 1 is_stmt 1 view -0
 1327              		.cfi_startproc
 1328              		@ args = 0, pretend = 0, frame = 0
 1329              		@ frame_needed = 0, uses_anonymous_args = 0
 1330              		@ link register save eliminated.
 443:rt_thread/src/kservice.c ****     {
 1331              		.loc 1 443 5 view .LVU422
 443:rt_thread/src/kservice.c ****     {
 1332              		.loc 1 443 11 is_stmt 0 view .LVU423
 1333 0000 01E0     		b	.L145
 1334              	.L147:
 445:rt_thread/src/kservice.c ****         ct++;
 1335              		.loc 1 445 9 is_stmt 1 view .LVU424
 445:rt_thread/src/kservice.c ****         ct++;
 1336              		.loc 1 445 11 is_stmt 0 view .LVU425
 1337 0002 0130     		adds	r0, r0, #1
 1338              	.LVL167:
 446:rt_thread/src/kservice.c ****     }
 1339              		.loc 1 446 9 is_stmt 1 view .LVU426
 446:rt_thread/src/kservice.c ****     }
 1340              		.loc 1 446 11 is_stmt 0 view .LVU427
 1341 0004 0131     		adds	r1, r1, #1
 1342              	.LVL168:
 1343              	.L145:
 443:rt_thread/src/kservice.c ****     {
 1344              		.loc 1 443 11 is_stmt 1 view .LVU428
 443:rt_thread/src/kservice.c ****     {
 1345              		.loc 1 443 12 is_stmt 0 view .LVU429
 1346 0006 0378     		ldrb	r3, [r0]	@ zero_extendqisi2
 443:rt_thread/src/kservice.c ****     {
 1347              		.loc 1 443 11 view .LVU430
 1348 0008 13B1     		cbz	r3, .L146
 443:rt_thread/src/kservice.c ****     {
ARM GAS  /tmp/ccPhSWJA.s 			page 44


 1349              		.loc 1 443 26 discriminator 1 view .LVU431
 1350 000a 0A78     		ldrb	r2, [r1]	@ zero_extendqisi2
 443:rt_thread/src/kservice.c ****     {
 1351              		.loc 1 443 16 discriminator 1 view .LVU432
 1352 000c 9342     		cmp	r3, r2
 1353 000e F8D0     		beq	.L147
 1354              	.L146:
 449:rt_thread/src/kservice.c **** }
 1355              		.loc 1 449 5 is_stmt 1 view .LVU433
 449:rt_thread/src/kservice.c **** }
 1356              		.loc 1 449 19 is_stmt 0 view .LVU434
 1357 0010 0878     		ldrb	r0, [r1]	@ zero_extendqisi2
 1358              	.LVL169:
 450:rt_thread/src/kservice.c **** 
 1359              		.loc 1 450 1 view .LVU435
 1360 0012 181A     		subs	r0, r3, r0
 1361 0014 7047     		bx	lr
 1362              		.cfi_endproc
 1363              	.LFE26:
 1365              		.section	.text.rt_strnlen,"ax",%progbits
 1366              		.align	1
 1367              		.global	rt_strnlen
 1368              		.syntax unified
 1369              		.thumb
 1370              		.thumb_func
 1372              	rt_strnlen:
 1373              	.LVL170:
 1374              	.LFB27:
 464:rt_thread/src/kservice.c ****     const char *sc;
 1375              		.loc 1 464 1 is_stmt 1 view -0
 1376              		.cfi_startproc
 1377              		@ args = 0, pretend = 0, frame = 0
 1378              		@ frame_needed = 0, uses_anonymous_args = 0
 1379              		@ link register save eliminated.
 465:rt_thread/src/kservice.c **** 
 1380              		.loc 1 465 5 view .LVU437
 467:rt_thread/src/kservice.c ****         ;
 1381              		.loc 1 467 5 view .LVU438
 467:rt_thread/src/kservice.c ****         ;
 1382              		.loc 1 467 13 is_stmt 0 view .LVU439
 1383 0000 0346     		mov	r3, r0
 467:rt_thread/src/kservice.c ****         ;
 1384              		.loc 1 467 5 view .LVU440
 1385 0002 00E0     		b	.L149
 1386              	.LVL171:
 1387              	.L151:
 468:rt_thread/src/kservice.c **** 
 1388              		.loc 1 468 9 is_stmt 1 discriminator 4 view .LVU441
 467:rt_thread/src/kservice.c ****         ;
 1389              		.loc 1 467 64 discriminator 4 view .LVU442
 1390 0004 0133     		adds	r3, r3, #1
 1391              	.LVL172:
 1392              	.L149:
 467:rt_thread/src/kservice.c ****         ;
 1393              		.loc 1 467 18 discriminator 1 view .LVU443
 1394 0006 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 467:rt_thread/src/kservice.c ****         ;
ARM GAS  /tmp/ccPhSWJA.s 			page 45


 1395              		.loc 1 467 5 is_stmt 0 discriminator 1 view .LVU444
 1396 0008 12B1     		cbz	r2, .L150
 467:rt_thread/src/kservice.c ****         ;
 1397              		.loc 1 467 49 discriminator 3 view .LVU445
 1398 000a 1A1A     		subs	r2, r3, r0
 467:rt_thread/src/kservice.c ****         ;
 1399              		.loc 1 467 30 discriminator 3 view .LVU446
 1400 000c 8A42     		cmp	r2, r1
 1401 000e F9D3     		bcc	.L151
 1402              	.L150:
 470:rt_thread/src/kservice.c **** }
 1403              		.loc 1 470 5 is_stmt 1 view .LVU447
 471:rt_thread/src/kservice.c **** 
 1404              		.loc 1 471 1 is_stmt 0 view .LVU448
 1405 0010 181A     		subs	r0, r3, r0
 1406              	.LVL173:
 471:rt_thread/src/kservice.c **** 
 1407              		.loc 1 471 1 view .LVU449
 1408 0012 7047     		bx	lr
 1409              		.cfi_endproc
 1410              	.LFE27:
 1412              		.section	.text.rt_strlen,"ax",%progbits
 1413              		.align	1
 1414              		.global	rt_strlen
 1415              		.syntax unified
 1416              		.thumb
 1417              		.thumb_func
 1419              	rt_strlen:
 1420              	.LVL174:
 1421              	.LFB28:
 482:rt_thread/src/kservice.c ****     const char *sc;
 1422              		.loc 1 482 1 is_stmt 1 view -0
 1423              		.cfi_startproc
 1424              		@ args = 0, pretend = 0, frame = 0
 1425              		@ frame_needed = 0, uses_anonymous_args = 0
 1426              		@ link register save eliminated.
 483:rt_thread/src/kservice.c **** 
 1427              		.loc 1 483 5 view .LVU451
 485:rt_thread/src/kservice.c ****         ;
 1428              		.loc 1 485 5 view .LVU452
 485:rt_thread/src/kservice.c ****         ;
 1429              		.loc 1 485 13 is_stmt 0 view .LVU453
 1430 0000 0346     		mov	r3, r0
 485:rt_thread/src/kservice.c ****         ;
 1431              		.loc 1 485 5 view .LVU454
 1432 0002 00E0     		b	.L153
 1433              	.LVL175:
 1434              	.L154:
 486:rt_thread/src/kservice.c **** 
 1435              		.loc 1 486 9 is_stmt 1 discriminator 3 view .LVU455
 485:rt_thread/src/kservice.c ****         ;
 1436              		.loc 1 485 31 discriminator 3 view .LVU456
 1437 0004 0133     		adds	r3, r3, #1
 1438              	.LVL176:
 1439              	.L153:
 485:rt_thread/src/kservice.c ****         ;
 1440              		.loc 1 485 18 discriminator 1 view .LVU457
ARM GAS  /tmp/ccPhSWJA.s 			page 46


 1441 0006 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 485:rt_thread/src/kservice.c ****         ;
 1442              		.loc 1 485 5 is_stmt 0 discriminator 1 view .LVU458
 1443 0008 002A     		cmp	r2, #0
 1444 000a FBD1     		bne	.L154
 488:rt_thread/src/kservice.c **** }
 1445              		.loc 1 488 5 is_stmt 1 view .LVU459
 489:rt_thread/src/kservice.c **** 
 1446              		.loc 1 489 1 is_stmt 0 view .LVU460
 1447 000c 181A     		subs	r0, r3, r0
 1448              	.LVL177:
 489:rt_thread/src/kservice.c **** 
 1449              		.loc 1 489 1 view .LVU461
 1450 000e 7047     		bx	lr
 1451              		.cfi_endproc
 1452              	.LFE28:
 1454              		.section	.text.rt_strstr,"ax",%progbits
 1455              		.align	1
 1456              		.global	rt_strstr
 1457              		.syntax unified
 1458              		.thumb
 1459              		.thumb_func
 1461              	rt_strstr:
 1462              	.LVL178:
 1463              	.LFB22:
 335:rt_thread/src/kservice.c ****     int l1, l2;
 1464              		.loc 1 335 1 is_stmt 1 view -0
 1465              		.cfi_startproc
 1466              		@ args = 0, pretend = 0, frame = 0
 1467              		@ frame_needed = 0, uses_anonymous_args = 0
 335:rt_thread/src/kservice.c ****     int l1, l2;
 1468              		.loc 1 335 1 is_stmt 0 view .LVU463
 1469 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 1470              	.LCFI19:
 1471              		.cfi_def_cfa_offset 24
 1472              		.cfi_offset 3, -24
 1473              		.cfi_offset 4, -20
 1474              		.cfi_offset 5, -16
 1475              		.cfi_offset 6, -12
 1476              		.cfi_offset 7, -8
 1477              		.cfi_offset 14, -4
 1478 0002 0446     		mov	r4, r0
 1479 0004 0F46     		mov	r7, r1
 336:rt_thread/src/kservice.c **** 
 1480              		.loc 1 336 5 is_stmt 1 view .LVU464
 338:rt_thread/src/kservice.c ****     if (!l2)
 1481              		.loc 1 338 5 view .LVU465
 338:rt_thread/src/kservice.c ****     if (!l2)
 1482              		.loc 1 338 10 is_stmt 0 view .LVU466
 1483 0006 0846     		mov	r0, r1
 1484              	.LVL179:
 338:rt_thread/src/kservice.c ****     if (!l2)
 1485              		.loc 1 338 10 view .LVU467
 1486 0008 FFF7FEFF 		bl	rt_strlen
 1487              	.LVL180:
 339:rt_thread/src/kservice.c ****         return (char *)s1;
 1488              		.loc 1 339 5 is_stmt 1 view .LVU468
ARM GAS  /tmp/ccPhSWJA.s 			page 47


 339:rt_thread/src/kservice.c ****         return (char *)s1;
 1489              		.loc 1 339 8 is_stmt 0 view .LVU469
 1490 000c 08B9     		cbnz	r0, .L160
 1491              	.LVL181:
 1492              	.L156:
 351:rt_thread/src/kservice.c **** 
 1493              		.loc 1 351 1 view .LVU470
 1494 000e 2046     		mov	r0, r4
 1495 0010 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 1496              	.LVL182:
 1497              	.L160:
 351:rt_thread/src/kservice.c **** 
 1498              		.loc 1 351 1 view .LVU471
 1499 0012 0646     		mov	r6, r0
 341:rt_thread/src/kservice.c ****     while (l1 >= l2)
 1500              		.loc 1 341 5 is_stmt 1 view .LVU472
 341:rt_thread/src/kservice.c ****     while (l1 >= l2)
 1501              		.loc 1 341 10 is_stmt 0 view .LVU473
 1502 0014 2046     		mov	r0, r4
 1503              	.LVL183:
 341:rt_thread/src/kservice.c ****     while (l1 >= l2)
 1504              		.loc 1 341 10 view .LVU474
 1505 0016 FFF7FEFF 		bl	rt_strlen
 1506              	.LVL184:
 1507 001a 0546     		mov	r5, r0
 1508              	.LVL185:
 342:rt_thread/src/kservice.c ****     {
 1509              		.loc 1 342 5 is_stmt 1 view .LVU475
 1510              	.L157:
 342:rt_thread/src/kservice.c ****     {
 1511              		.loc 1 342 11 view .LVU476
 1512 001c B542     		cmp	r5, r6
 1513 001e 09DB     		blt	.L161
 344:rt_thread/src/kservice.c ****         if (!rt_memcmp(s1, s2, l2))
 1514              		.loc 1 344 9 view .LVU477
 344:rt_thread/src/kservice.c ****         if (!rt_memcmp(s1, s2, l2))
 1515              		.loc 1 344 12 is_stmt 0 view .LVU478
 1516 0020 013D     		subs	r5, r5, #1
 1517              	.LVL186:
 345:rt_thread/src/kservice.c ****             return (char *)s1;
 1518              		.loc 1 345 9 is_stmt 1 view .LVU479
 345:rt_thread/src/kservice.c ****             return (char *)s1;
 1519              		.loc 1 345 14 is_stmt 0 view .LVU480
 1520 0022 3246     		mov	r2, r6
 1521 0024 3946     		mov	r1, r7
 1522 0026 2046     		mov	r0, r4
 1523 0028 FFF7FEFF 		bl	rt_memcmp
 1524              	.LVL187:
 345:rt_thread/src/kservice.c ****             return (char *)s1;
 1525              		.loc 1 345 12 view .LVU481
 1526 002c 0028     		cmp	r0, #0
 1527 002e EED0     		beq	.L156
 347:rt_thread/src/kservice.c ****     }
 1528              		.loc 1 347 9 is_stmt 1 view .LVU482
 347:rt_thread/src/kservice.c ****     }
 1529              		.loc 1 347 12 is_stmt 0 view .LVU483
 1530 0030 0134     		adds	r4, r4, #1
ARM GAS  /tmp/ccPhSWJA.s 			page 48


 1531              	.LVL188:
 347:rt_thread/src/kservice.c ****     }
 1532              		.loc 1 347 12 view .LVU484
 1533 0032 F3E7     		b	.L157
 1534              	.L161:
 350:rt_thread/src/kservice.c **** }
 1535              		.loc 1 350 12 view .LVU485
 1536 0034 0024     		movs	r4, #0
 1537              	.LVL189:
 350:rt_thread/src/kservice.c **** }
 1538              		.loc 1 350 12 view .LVU486
 1539 0036 EAE7     		b	.L156
 1540              		.cfi_endproc
 1541              	.LFE22:
 1543              		.section	.text.rt_strdup,"ax",%progbits
 1544              		.align	1
 1545              		.global	rt_strdup
 1546              		.syntax unified
 1547              		.thumb
 1548              		.thumb_func
 1550              	rt_strdup:
 1551              	.LVL190:
 1552              	.LFB29:
 500:rt_thread/src/kservice.c ****     rt_size_t len = rt_strlen(s) + 1;
 1553              		.loc 1 500 1 is_stmt 1 view -0
 1554              		.cfi_startproc
 1555              		@ args = 0, pretend = 0, frame = 0
 1556              		@ frame_needed = 0, uses_anonymous_args = 0
 500:rt_thread/src/kservice.c ****     rt_size_t len = rt_strlen(s) + 1;
 1557              		.loc 1 500 1 is_stmt 0 view .LVU488
 1558 0000 70B5     		push	{r4, r5, r6, lr}
 1559              	.LCFI20:
 1560              		.cfi_def_cfa_offset 16
 1561              		.cfi_offset 4, -16
 1562              		.cfi_offset 5, -12
 1563              		.cfi_offset 6, -8
 1564              		.cfi_offset 14, -4
 1565 0002 0546     		mov	r5, r0
 501:rt_thread/src/kservice.c ****     char *tmp = (char *)rt_malloc(len);
 1566              		.loc 1 501 5 is_stmt 1 view .LVU489
 501:rt_thread/src/kservice.c ****     char *tmp = (char *)rt_malloc(len);
 1567              		.loc 1 501 21 is_stmt 0 view .LVU490
 1568 0004 FFF7FEFF 		bl	rt_strlen
 1569              	.LVL191:
 501:rt_thread/src/kservice.c ****     char *tmp = (char *)rt_malloc(len);
 1570              		.loc 1 501 15 view .LVU491
 1571 0008 441C     		adds	r4, r0, #1
 1572              	.LVL192:
 502:rt_thread/src/kservice.c **** 
 1573              		.loc 1 502 5 is_stmt 1 view .LVU492
 502:rt_thread/src/kservice.c **** 
 1574              		.loc 1 502 25 is_stmt 0 view .LVU493
 1575 000a 2046     		mov	r0, r4
 1576 000c FFF7FEFF 		bl	rt_malloc
 1577              	.LVL193:
 504:rt_thread/src/kservice.c ****         return RT_NULL;
 1578              		.loc 1 504 5 is_stmt 1 view .LVU494
ARM GAS  /tmp/ccPhSWJA.s 			page 49


 504:rt_thread/src/kservice.c ****         return RT_NULL;
 1579              		.loc 1 504 8 is_stmt 0 view .LVU495
 1580 0010 0646     		mov	r6, r0
 1581 0012 18B1     		cbz	r0, .L162
 507:rt_thread/src/kservice.c **** 
 1582              		.loc 1 507 5 is_stmt 1 view .LVU496
 1583 0014 2246     		mov	r2, r4
 1584 0016 2946     		mov	r1, r5
 1585 0018 FFF7FEFF 		bl	rt_memcpy
 1586              	.LVL194:
 509:rt_thread/src/kservice.c **** }
 1587              		.loc 1 509 5 view .LVU497
 1588              	.L162:
 510:rt_thread/src/kservice.c **** 
 1589              		.loc 1 510 1 is_stmt 0 view .LVU498
 1590 001c 3046     		mov	r0, r6
 1591 001e 70BD     		pop	{r4, r5, r6, pc}
 510:rt_thread/src/kservice.c **** 
 1592              		.loc 1 510 1 view .LVU499
 1593              		.cfi_endproc
 1594              	.LFE29:
 1596              		.section	.rodata.rt_vsnprintf.str1.4,"aMS",%progbits,1
 1597              		.align	2
 1598              	.LC0:
 1599 0000 284E554C 		.ascii	"(NULL)\000"
 1599      4C2900
 1600              		.section	.text.rt_vsnprintf,"ax",%progbits
 1601              		.align	1
 1602              		.global	rt_vsnprintf
 1603              		.syntax unified
 1604              		.thumb
 1605              		.thumb_func
 1607              	rt_vsnprintf:
 1608              	.LVL195:
 1609              	.LFB34:
 760:rt_thread/src/kservice.c **** 
 761:rt_thread/src/kservice.c **** rt_int32_t rt_vsnprintf(char       *buf,
 762:rt_thread/src/kservice.c ****                         rt_size_t   size,
 763:rt_thread/src/kservice.c ****                         const char *fmt,
 764:rt_thread/src/kservice.c ****                         va_list     args)
 765:rt_thread/src/kservice.c **** {
 1610              		.loc 1 765 1 is_stmt 1 view -0
 1611              		.cfi_startproc
 1612              		@ args = 0, pretend = 0, frame = 8
 1613              		@ frame_needed = 0, uses_anonymous_args = 0
 1614              		.loc 1 765 1 is_stmt 0 view .LVU501
 1615 0000 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 1616              	.LCFI21:
 1617              		.cfi_def_cfa_offset 24
 1618              		.cfi_offset 4, -24
 1619              		.cfi_offset 5, -20
 1620              		.cfi_offset 6, -16
 1621              		.cfi_offset 7, -12
 1622              		.cfi_offset 8, -8
 1623              		.cfi_offset 14, -4
 1624 0004 86B0     		sub	sp, sp, #24
 1625              	.LCFI22:
ARM GAS  /tmp/ccPhSWJA.s 			page 50


 1626              		.cfi_def_cfa_offset 48
 1627 0006 0746     		mov	r7, r0
 1628 0008 8846     		mov	r8, r1
 1629 000a 1446     		mov	r4, r2
 1630 000c 0593     		str	r3, [sp, #20]
 766:rt_thread/src/kservice.c **** #ifdef RT_PRINTF_LONGLONG
 767:rt_thread/src/kservice.c ****     unsigned long long num;
 768:rt_thread/src/kservice.c **** #else
 769:rt_thread/src/kservice.c ****     rt_uint32_t num;
 1631              		.loc 1 769 5 is_stmt 1 view .LVU502
 770:rt_thread/src/kservice.c **** #endif
 771:rt_thread/src/kservice.c ****     int i, len;
 1632              		.loc 1 771 5 view .LVU503
 772:rt_thread/src/kservice.c ****     char *str, *end, c;
 1633              		.loc 1 772 5 view .LVU504
 773:rt_thread/src/kservice.c ****     const char *s;
 1634              		.loc 1 773 5 view .LVU505
 774:rt_thread/src/kservice.c **** 
 775:rt_thread/src/kservice.c ****     rt_uint8_t base;            /* the base of number */
 1635              		.loc 1 775 5 view .LVU506
 776:rt_thread/src/kservice.c ****     rt_uint8_t flags;           /* flags to print number */
 1636              		.loc 1 776 5 view .LVU507
 777:rt_thread/src/kservice.c ****     rt_uint8_t qualifier;       /* 'h', 'l', or 'L' for integer fields */
 1637              		.loc 1 777 5 view .LVU508
 778:rt_thread/src/kservice.c ****     rt_int32_t field_width;     /* width of output field */
 1638              		.loc 1 778 5 view .LVU509
 779:rt_thread/src/kservice.c **** 
 780:rt_thread/src/kservice.c **** #ifdef RT_PRINTF_PRECISION
 781:rt_thread/src/kservice.c ****     int precision;      /* min. # of digits for integers and max for a string */
 1639              		.loc 1 781 5 view .LVU510
 782:rt_thread/src/kservice.c **** #endif
 783:rt_thread/src/kservice.c **** 
 784:rt_thread/src/kservice.c ****     str = buf;
 1640              		.loc 1 784 5 view .LVU511
 1641              	.LVL196:
 785:rt_thread/src/kservice.c ****     end = buf + size;
 1642              		.loc 1 785 5 view .LVU512
 786:rt_thread/src/kservice.c **** 
 787:rt_thread/src/kservice.c ****     /* Make sure end is always >= buf */
 788:rt_thread/src/kservice.c ****     if (end < buf)
 1643              		.loc 1 788 5 view .LVU513
 1644              		.loc 1 788 8 is_stmt 0 view .LVU514
 1645 000e 4618     		adds	r6, r0, r1
 1646              	.LVL197:
 1647              		.loc 1 788 8 view .LVU515
 1648 0010 03D3     		bcc	.L166
 789:rt_thread/src/kservice.c ****     {
 790:rt_thread/src/kservice.c ****         end  = ((char *) - 1);
 1649              		.loc 1 790 9 is_stmt 1 view .LVU516
 1650              	.LVL198:
 791:rt_thread/src/kservice.c ****         size = end - buf;
 1651              		.loc 1 791 9 view .LVU517
 1652              		.loc 1 791 20 is_stmt 0 view .LVU518
 1653 0012 6FEA0008 		mvn	r8, r0
 1654              	.LVL199:
 790:rt_thread/src/kservice.c ****         size = end - buf;
 1655              		.loc 1 790 14 view .LVU519
ARM GAS  /tmp/ccPhSWJA.s 			page 51


 1656 0016 4FF0FF36 		mov	r6, #-1
 1657              	.LVL200:
 1658              	.L166:
 790:rt_thread/src/kservice.c ****         size = end - buf;
 1659              		.loc 1 790 14 discriminator 1 view .LVU520
 1660 001a 3846     		mov	r0, r7
 1661              	.LVL201:
 790:rt_thread/src/kservice.c ****         size = end - buf;
 1662              		.loc 1 790 14 discriminator 1 view .LVU521
 1663 001c 01E0     		b	.L230
 1664              	.LVL202:
 1665              	.L168:
 792:rt_thread/src/kservice.c ****     }
 793:rt_thread/src/kservice.c **** 
 794:rt_thread/src/kservice.c ****     for (; *fmt ; ++fmt)
 795:rt_thread/src/kservice.c ****     {
 796:rt_thread/src/kservice.c ****         if (*fmt != '%')
 797:rt_thread/src/kservice.c ****         {
 798:rt_thread/src/kservice.c ****             if (str < end)
 799:rt_thread/src/kservice.c ****                 *str = *fmt;
 800:rt_thread/src/kservice.c ****             ++ str;
 1666              		.loc 1 800 13 is_stmt 1 view .LVU522
 1667 001e 0130     		adds	r0, r0, #1
 1668              	.LVL203:
 801:rt_thread/src/kservice.c ****             continue;
 1669              		.loc 1 801 13 view .LVU523
 1670              	.L169:
 794:rt_thread/src/kservice.c ****     {
 1671              		.loc 1 794 19 view .LVU524
 1672 0020 0134     		adds	r4, r4, #1
 1673              	.LVL204:
 1674              	.L230:
 794:rt_thread/src/kservice.c ****     {
 1675              		.loc 1 794 12 discriminator 1 view .LVU525
 1676 0022 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 794:rt_thread/src/kservice.c ****     {
 1677              		.loc 1 794 5 is_stmt 0 discriminator 1 view .LVU526
 1678 0024 002B     		cmp	r3, #0
 1679 0026 00F05681 		beq	.L248
 796:rt_thread/src/kservice.c ****         {
 1680              		.loc 1 796 9 is_stmt 1 view .LVU527
 796:rt_thread/src/kservice.c ****         {
 1681              		.loc 1 796 12 is_stmt 0 view .LVU528
 1682 002a 252B     		cmp	r3, #37
 1683 002c 03D0     		beq	.L234
 798:rt_thread/src/kservice.c ****                 *str = *fmt;
 1684              		.loc 1 798 13 is_stmt 1 view .LVU529
 798:rt_thread/src/kservice.c ****                 *str = *fmt;
 1685              		.loc 1 798 16 is_stmt 0 view .LVU530
 1686 002e B042     		cmp	r0, r6
 1687 0030 F5D2     		bcs	.L168
 799:rt_thread/src/kservice.c ****             ++ str;
 1688              		.loc 1 799 17 is_stmt 1 view .LVU531
 799:rt_thread/src/kservice.c ****             ++ str;
 1689              		.loc 1 799 22 is_stmt 0 view .LVU532
 1690 0032 0370     		strb	r3, [r0]
 1691 0034 F3E7     		b	.L168
ARM GAS  /tmp/ccPhSWJA.s 			page 52


 1692              	.L234:
 802:rt_thread/src/kservice.c ****         }
 803:rt_thread/src/kservice.c **** 
 804:rt_thread/src/kservice.c ****         /* process flags */
 805:rt_thread/src/kservice.c ****         flags = 0;
 1693              		.loc 1 805 15 view .LVU533
 1694 0036 0021     		movs	r1, #0
 1695 0038 01E0     		b	.L167
 1696              	.LVL205:
 1697              	.L249:
 806:rt_thread/src/kservice.c **** 
 807:rt_thread/src/kservice.c ****         while (1)
 808:rt_thread/src/kservice.c ****         {
 809:rt_thread/src/kservice.c ****             /* skips the first '%' also */
 810:rt_thread/src/kservice.c ****             ++ fmt;
 811:rt_thread/src/kservice.c ****             if (*fmt == '-') flags |= LEFT;
 1698              		.loc 1 811 30 is_stmt 1 discriminator 1 view .LVU534
 1699              		.loc 1 811 36 is_stmt 0 discriminator 1 view .LVU535
 1700 003a 41F01001 		orr	r1, r1, #16
 1701              	.LVL206:
 1702              	.L167:
 807:rt_thread/src/kservice.c ****         {
 1703              		.loc 1 807 9 is_stmt 1 view .LVU536
 810:rt_thread/src/kservice.c ****             if (*fmt == '-') flags |= LEFT;
 1704              		.loc 1 810 13 view .LVU537
 1705              		.loc 1 811 13 view .LVU538
 1706              		.loc 1 811 17 is_stmt 0 view .LVU539
 1707 003e 14F8013F 		ldrb	r3, [r4, #1]!	@ zero_extendqisi2
 1708              	.LVL207:
 1709              		.loc 1 811 16 view .LVU540
 1710 0042 2D2B     		cmp	r3, #45
 1711 0044 F9D0     		beq	.L249
 812:rt_thread/src/kservice.c ****             else if (*fmt == '+') flags |= PLUS;
 1712              		.loc 1 812 18 is_stmt 1 view .LVU541
 1713              		.loc 1 812 21 is_stmt 0 view .LVU542
 1714 0046 2B2B     		cmp	r3, #43
 1715 0048 08D0     		beq	.L250
 813:rt_thread/src/kservice.c ****             else if (*fmt == ' ') flags |= SPACE;
 1716              		.loc 1 813 18 is_stmt 1 view .LVU543
 1717              		.loc 1 813 21 is_stmt 0 view .LVU544
 1718 004a 202B     		cmp	r3, #32
 1719 004c 09D0     		beq	.L251
 814:rt_thread/src/kservice.c ****             else if (*fmt == '#') flags |= SPECIAL;
 1720              		.loc 1 814 18 is_stmt 1 view .LVU545
 1721              		.loc 1 814 21 is_stmt 0 view .LVU546
 1722 004e 232B     		cmp	r3, #35
 1723 0050 0AD0     		beq	.L252
 815:rt_thread/src/kservice.c ****             else if (*fmt == '0') flags |= ZEROPAD;
 1724              		.loc 1 815 18 is_stmt 1 view .LVU547
 1725              		.loc 1 815 21 is_stmt 0 view .LVU548
 1726 0052 302B     		cmp	r3, #48
 1727 0054 0BD1     		bne	.L175
 1728              		.loc 1 815 35 is_stmt 1 discriminator 1 view .LVU549
 1729              		.loc 1 815 41 is_stmt 0 discriminator 1 view .LVU550
 1730 0056 41F00101 		orr	r1, r1, #1
 1731              	.LVL208:
 1732              		.loc 1 815 41 discriminator 1 view .LVU551
ARM GAS  /tmp/ccPhSWJA.s 			page 53


 1733 005a F0E7     		b	.L167
 1734              	.L250:
 812:rt_thread/src/kservice.c ****             else if (*fmt == ' ') flags |= SPACE;
 1735              		.loc 1 812 35 is_stmt 1 discriminator 1 view .LVU552
 812:rt_thread/src/kservice.c ****             else if (*fmt == ' ') flags |= SPACE;
 1736              		.loc 1 812 41 is_stmt 0 discriminator 1 view .LVU553
 1737 005c 41F00401 		orr	r1, r1, #4
 1738              	.LVL209:
 812:rt_thread/src/kservice.c ****             else if (*fmt == ' ') flags |= SPACE;
 1739              		.loc 1 812 41 discriminator 1 view .LVU554
 1740 0060 EDE7     		b	.L167
 1741              	.L251:
 813:rt_thread/src/kservice.c ****             else if (*fmt == '#') flags |= SPECIAL;
 1742              		.loc 1 813 35 is_stmt 1 discriminator 1 view .LVU555
 813:rt_thread/src/kservice.c ****             else if (*fmt == '#') flags |= SPECIAL;
 1743              		.loc 1 813 41 is_stmt 0 discriminator 1 view .LVU556
 1744 0062 41F00801 		orr	r1, r1, #8
 1745              	.LVL210:
 813:rt_thread/src/kservice.c ****             else if (*fmt == '#') flags |= SPECIAL;
 1746              		.loc 1 813 41 discriminator 1 view .LVU557
 1747 0066 EAE7     		b	.L167
 1748              	.L252:
 814:rt_thread/src/kservice.c ****             else if (*fmt == '0') flags |= ZEROPAD;
 1749              		.loc 1 814 35 is_stmt 1 discriminator 1 view .LVU558
 814:rt_thread/src/kservice.c ****             else if (*fmt == '0') flags |= ZEROPAD;
 1750              		.loc 1 814 41 is_stmt 0 discriminator 1 view .LVU559
 1751 0068 41F02001 		orr	r1, r1, #32
 1752              	.LVL211:
 814:rt_thread/src/kservice.c ****             else if (*fmt == '0') flags |= ZEROPAD;
 1753              		.loc 1 814 41 discriminator 1 view .LVU560
 1754 006c E7E7     		b	.L167
 1755              	.L175:
 816:rt_thread/src/kservice.c ****             else break;
 817:rt_thread/src/kservice.c ****         }
 818:rt_thread/src/kservice.c **** 
 819:rt_thread/src/kservice.c ****         /* get field width */
 820:rt_thread/src/kservice.c ****         field_width = -1;
 1756              		.loc 1 820 9 is_stmt 1 view .LVU561
 1757              	.LVL212:
 821:rt_thread/src/kservice.c ****         if (_ISDIGIT(*fmt)) field_width = skip_atoi(&fmt);
 1758              		.loc 1 821 9 view .LVU562
 1759              		.loc 1 821 13 is_stmt 0 view .LVU563
 1760 006e A3F13002 		sub	r2, r3, #48
 1761              		.loc 1 821 12 view .LVU564
 1762 0072 092A     		cmp	r2, #9
 1763 0074 1BD9     		bls	.L253
 822:rt_thread/src/kservice.c ****         else if (*fmt == '*')
 1764              		.loc 1 822 14 is_stmt 1 view .LVU565
 1765              		.loc 1 822 17 is_stmt 0 view .LVU566
 1766 0076 2A2B     		cmp	r3, #42
 1767 0078 1BD0     		beq	.L254
 820:rt_thread/src/kservice.c ****         if (_ISDIGIT(*fmt)) field_width = skip_atoi(&fmt);
 1768              		.loc 1 820 21 view .LVU567
 1769 007a 4FF0FF35 		mov	r5, #-1
 1770              	.LVL213:
 1771              	.L179:
 823:rt_thread/src/kservice.c ****         {
ARM GAS  /tmp/ccPhSWJA.s 			page 54


 824:rt_thread/src/kservice.c ****             ++ fmt;
 825:rt_thread/src/kservice.c ****             /* it's the next argument */
 826:rt_thread/src/kservice.c ****             field_width = va_arg(args, int);
 827:rt_thread/src/kservice.c ****             if (field_width < 0)
 828:rt_thread/src/kservice.c ****             {
 829:rt_thread/src/kservice.c ****                 field_width = -field_width;
 830:rt_thread/src/kservice.c ****                 flags |= LEFT;
 831:rt_thread/src/kservice.c ****             }
 832:rt_thread/src/kservice.c ****         }
 833:rt_thread/src/kservice.c **** 
 834:rt_thread/src/kservice.c **** #ifdef RT_PRINTF_PRECISION
 835:rt_thread/src/kservice.c ****         /* get the precision */
 836:rt_thread/src/kservice.c ****         precision = -1;
 1772              		.loc 1 836 9 is_stmt 1 view .LVU568
 837:rt_thread/src/kservice.c ****         if (*fmt == '.')
 1773              		.loc 1 837 9 view .LVU569
 1774              		.loc 1 837 13 is_stmt 0 view .LVU570
 1775 007e 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 1776              		.loc 1 837 12 view .LVU571
 1777 0080 2E2B     		cmp	r3, #46
 1778 0082 21D0     		beq	.L255
 836:rt_thread/src/kservice.c ****         if (*fmt == '.')
 1779              		.loc 1 836 19 view .LVU572
 1780 0084 4FF0FF3C 		mov	ip, #-1
 1781              	.LVL214:
 1782              	.L180:
 838:rt_thread/src/kservice.c ****         {
 839:rt_thread/src/kservice.c ****             ++ fmt;
 840:rt_thread/src/kservice.c ****             if (_ISDIGIT(*fmt)) precision = skip_atoi(&fmt);
 841:rt_thread/src/kservice.c ****             else if (*fmt == '*')
 842:rt_thread/src/kservice.c ****             {
 843:rt_thread/src/kservice.c ****                 ++ fmt;
 844:rt_thread/src/kservice.c ****                 /* it's the next argument */
 845:rt_thread/src/kservice.c ****                 precision = va_arg(args, int);
 846:rt_thread/src/kservice.c ****             }
 847:rt_thread/src/kservice.c ****             if (precision < 0) precision = 0;
 848:rt_thread/src/kservice.c ****         }
 849:rt_thread/src/kservice.c **** #endif
 850:rt_thread/src/kservice.c ****         /* get the conversion qualifier */
 851:rt_thread/src/kservice.c ****         qualifier = 0;
 1783              		.loc 1 851 9 is_stmt 1 view .LVU573
 852:rt_thread/src/kservice.c **** #ifdef RT_PRINTF_LONGLONG
 853:rt_thread/src/kservice.c ****         if (*fmt == 'h' || *fmt == 'l' || *fmt == 'L')
 854:rt_thread/src/kservice.c **** #else
 855:rt_thread/src/kservice.c ****         if (*fmt == 'h' || *fmt == 'l')
 1784              		.loc 1 855 9 view .LVU574
 1785              		.loc 1 855 13 is_stmt 0 view .LVU575
 1786 0088 2278     		ldrb	r2, [r4]	@ zero_extendqisi2
 1787              		.loc 1 855 12 view .LVU576
 1788 008a 682A     		cmp	r2, #104
 1789 008c 43D0     		beq	.L185
 1790              		.loc 1 855 25 discriminator 1 view .LVU577
 1791 008e 6C2A     		cmp	r2, #108
 1792 0090 41D0     		beq	.L185
 851:rt_thread/src/kservice.c **** #ifdef RT_PRINTF_LONGLONG
 1793              		.loc 1 851 19 view .LVU578
 1794 0092 0022     		movs	r2, #0
ARM GAS  /tmp/ccPhSWJA.s 			page 55


 1795 0094 40E0     		b	.L186
 1796              	.LVL215:
 1797              	.L178:
 1798              	.LBB14:
 1799              	.LBB15:
 576:rt_thread/src/kservice.c **** 
 1800              		.loc 1 576 9 is_stmt 1 view .LVU579
 576:rt_thread/src/kservice.c **** 
 1801              		.loc 1 576 15 is_stmt 0 view .LVU580
 1802 0096 05EB8505 		add	r5, r5, r5, lsl #2
 1803              	.LVL216:
 576:rt_thread/src/kservice.c **** 
 1804              		.loc 1 576 22 view .LVU581
 1805 009a 14F8013B 		ldrb	r3, [r4], #1	@ zero_extendqisi2
 1806              	.LVL217:
 576:rt_thread/src/kservice.c **** 
 1807              		.loc 1 576 20 view .LVU582
 1808 009e 03EB4505 		add	r5, r3, r5, lsl #1
 576:rt_thread/src/kservice.c **** 
 1809              		.loc 1 576 11 view .LVU583
 1810 00a2 303D     		subs	r5, r5, #48
 1811              	.LVL218:
 1812              	.L176:
 575:rt_thread/src/kservice.c ****         i = i * 10 + *((*s)++) - '0';
 1813              		.loc 1 575 11 is_stmt 1 view .LVU584
 575:rt_thread/src/kservice.c ****         i = i * 10 + *((*s)++) - '0';
 1814              		.loc 1 575 12 is_stmt 0 view .LVU585
 1815 00a4 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 1816 00a6 303B     		subs	r3, r3, #48
 575:rt_thread/src/kservice.c ****         i = i * 10 + *((*s)++) - '0';
 1817              		.loc 1 575 11 view .LVU586
 1818 00a8 092B     		cmp	r3, #9
 1819 00aa F4D9     		bls	.L178
 575:rt_thread/src/kservice.c ****         i = i * 10 + *((*s)++) - '0';
 1820              		.loc 1 575 11 view .LVU587
 1821 00ac E7E7     		b	.L179
 1822              	.LVL219:
 1823              	.L253:
 574:rt_thread/src/kservice.c ****     while (_ISDIGIT(**s))
 1824              		.loc 1 574 18 view .LVU588
 1825 00ae 0025     		movs	r5, #0
 1826 00b0 F8E7     		b	.L176
 1827              	.L254:
 1828              	.LBE15:
 1829              	.LBE14:
 824:rt_thread/src/kservice.c ****             /* it's the next argument */
 1830              		.loc 1 824 13 is_stmt 1 view .LVU589
 1831 00b2 0134     		adds	r4, r4, #1
 1832              	.LVL220:
 826:rt_thread/src/kservice.c ****             if (field_width < 0)
 1833              		.loc 1 826 13 view .LVU590
 826:rt_thread/src/kservice.c ****             if (field_width < 0)
 1834              		.loc 1 826 25 is_stmt 0 view .LVU591
 1835 00b4 059B     		ldr	r3, [sp, #20]
 1836 00b6 1A1D     		adds	r2, r3, #4
 1837 00b8 0592     		str	r2, [sp, #20]
 1838 00ba 1D68     		ldr	r5, [r3]
ARM GAS  /tmp/ccPhSWJA.s 			page 56


 1839              	.LVL221:
 827:rt_thread/src/kservice.c ****             {
 1840              		.loc 1 827 13 is_stmt 1 view .LVU592
 827:rt_thread/src/kservice.c ****             {
 1841              		.loc 1 827 16 is_stmt 0 view .LVU593
 1842 00bc 002D     		cmp	r5, #0
 1843 00be DEDA     		bge	.L179
 829:rt_thread/src/kservice.c ****                 flags |= LEFT;
 1844              		.loc 1 829 17 is_stmt 1 view .LVU594
 829:rt_thread/src/kservice.c ****                 flags |= LEFT;
 1845              		.loc 1 829 29 is_stmt 0 view .LVU595
 1846 00c0 6D42     		rsbs	r5, r5, #0
 1847              	.LVL222:
 830:rt_thread/src/kservice.c ****             }
 1848              		.loc 1 830 17 is_stmt 1 view .LVU596
 830:rt_thread/src/kservice.c ****             }
 1849              		.loc 1 830 23 is_stmt 0 view .LVU597
 1850 00c2 41F01001 		orr	r1, r1, #16
 1851              	.LVL223:
 830:rt_thread/src/kservice.c ****             }
 1852              		.loc 1 830 23 view .LVU598
 1853 00c6 DAE7     		b	.L179
 1854              	.LVL224:
 1855              	.L255:
 839:rt_thread/src/kservice.c ****             if (_ISDIGIT(*fmt)) precision = skip_atoi(&fmt);
 1856              		.loc 1 839 13 is_stmt 1 view .LVU599
 840:rt_thread/src/kservice.c ****             else if (*fmt == '*')
 1857              		.loc 1 840 13 view .LVU600
 840:rt_thread/src/kservice.c ****             else if (*fmt == '*')
 1858              		.loc 1 840 17 is_stmt 0 view .LVU601
 1859 00c8 14F8013F 		ldrb	r3, [r4, #1]!	@ zero_extendqisi2
 1860              	.LVL225:
 840:rt_thread/src/kservice.c ****             else if (*fmt == '*')
 1861              		.loc 1 840 17 view .LVU602
 1862 00cc A3F13002 		sub	r2, r3, #48
 840:rt_thread/src/kservice.c ****             else if (*fmt == '*')
 1863              		.loc 1 840 16 view .LVU603
 1864 00d0 092A     		cmp	r2, #9
 1865 00d2 16D9     		bls	.L256
 841:rt_thread/src/kservice.c ****             {
 1866              		.loc 1 841 18 is_stmt 1 view .LVU604
 841:rt_thread/src/kservice.c ****             {
 1867              		.loc 1 841 21 is_stmt 0 view .LVU605
 1868 00d4 2A2B     		cmp	r3, #42
 1869 00d6 17D0     		beq	.L257
 847:rt_thread/src/kservice.c ****         }
 1870              		.loc 1 847 42 view .LVU606
 1871 00d8 4FF0000C 		mov	ip, #0
 1872 00dc D4E7     		b	.L180
 1873              	.LVL226:
 1874              	.L183:
 1875              	.LBB16:
 1876              	.LBB17:
 576:rt_thread/src/kservice.c **** 
 1877              		.loc 1 576 9 is_stmt 1 view .LVU607
 576:rt_thread/src/kservice.c **** 
 1878              		.loc 1 576 15 is_stmt 0 view .LVU608
ARM GAS  /tmp/ccPhSWJA.s 			page 57


 1879 00de 0CEB8C0C 		add	ip, ip, ip, lsl #2
 1880              	.LVL227:
 576:rt_thread/src/kservice.c **** 
 1881              		.loc 1 576 22 view .LVU609
 1882 00e2 14F8013B 		ldrb	r3, [r4], #1	@ zero_extendqisi2
 1883              	.LVL228:
 576:rt_thread/src/kservice.c **** 
 1884              		.loc 1 576 20 view .LVU610
 1885 00e6 03EB4C0C 		add	ip, r3, ip, lsl #1
 576:rt_thread/src/kservice.c **** 
 1886              		.loc 1 576 11 view .LVU611
 1887 00ea ACF1300C 		sub	ip, ip, #48
 1888              	.LVL229:
 1889              	.L181:
 575:rt_thread/src/kservice.c ****         i = i * 10 + *((*s)++) - '0';
 1890              		.loc 1 575 11 is_stmt 1 view .LVU612
 575:rt_thread/src/kservice.c ****         i = i * 10 + *((*s)++) - '0';
 1891              		.loc 1 575 12 is_stmt 0 view .LVU613
 1892 00ee 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 1893 00f0 303B     		subs	r3, r3, #48
 575:rt_thread/src/kservice.c ****         i = i * 10 + *((*s)++) - '0';
 1894              		.loc 1 575 11 view .LVU614
 1895 00f2 092B     		cmp	r3, #9
 1896 00f4 F3D9     		bls	.L183
 1897              	.LVL230:
 1898              	.L184:
 575:rt_thread/src/kservice.c ****         i = i * 10 + *((*s)++) - '0';
 1899              		.loc 1 575 11 view .LVU615
 1900              	.LBE17:
 1901              	.LBE16:
 847:rt_thread/src/kservice.c ****         }
 1902              		.loc 1 847 13 is_stmt 1 view .LVU616
 847:rt_thread/src/kservice.c ****         }
 1903              		.loc 1 847 16 is_stmt 0 view .LVU617
 1904 00f6 BCF1000F 		cmp	ip, #0
 1905 00fa C5DA     		bge	.L180
 847:rt_thread/src/kservice.c ****         }
 1906              		.loc 1 847 42 view .LVU618
 1907 00fc 4FF0000C 		mov	ip, #0
 1908              	.LVL231:
 847:rt_thread/src/kservice.c ****         }
 1909              		.loc 1 847 42 view .LVU619
 1910 0100 C2E7     		b	.L180
 1911              	.LVL232:
 1912              	.L256:
 1913              	.LBB19:
 1914              	.LBB18:
 574:rt_thread/src/kservice.c ****     while (_ISDIGIT(**s))
 1915              		.loc 1 574 18 view .LVU620
 1916 0102 4FF0000C 		mov	ip, #0
 1917 0106 F2E7     		b	.L181
 1918              	.L257:
 1919              	.LBE18:
 1920              	.LBE19:
 843:rt_thread/src/kservice.c ****                 /* it's the next argument */
 1921              		.loc 1 843 17 is_stmt 1 view .LVU621
 1922 0108 0134     		adds	r4, r4, #1
ARM GAS  /tmp/ccPhSWJA.s 			page 58


 1923              	.LVL233:
 845:rt_thread/src/kservice.c ****             }
 1924              		.loc 1 845 17 view .LVU622
 845:rt_thread/src/kservice.c ****             }
 1925              		.loc 1 845 27 is_stmt 0 view .LVU623
 1926 010a 059B     		ldr	r3, [sp, #20]
 1927 010c 1A1D     		adds	r2, r3, #4
 1928 010e 0592     		str	r2, [sp, #20]
 1929 0110 D3F800C0 		ldr	ip, [r3]
 1930 0114 EFE7     		b	.L184
 1931              	.LVL234:
 1932              	.L185:
 856:rt_thread/src/kservice.c **** #endif
 857:rt_thread/src/kservice.c ****         {
 858:rt_thread/src/kservice.c ****             qualifier = *fmt;
 1933              		.loc 1 858 13 is_stmt 1 view .LVU624
 859:rt_thread/src/kservice.c ****             ++ fmt;
 1934              		.loc 1 859 13 view .LVU625
 1935 0116 0134     		adds	r4, r4, #1
 1936              	.LVL235:
 1937              	.L186:
 860:rt_thread/src/kservice.c **** #ifdef RT_PRINTF_LONGLONG
 861:rt_thread/src/kservice.c ****             if (qualifier == 'l' && *fmt == 'l')
 862:rt_thread/src/kservice.c ****             {
 863:rt_thread/src/kservice.c ****                 qualifier = 'L';
 864:rt_thread/src/kservice.c ****                 ++ fmt;
 865:rt_thread/src/kservice.c ****             }
 866:rt_thread/src/kservice.c **** #endif
 867:rt_thread/src/kservice.c ****         }
 868:rt_thread/src/kservice.c **** 
 869:rt_thread/src/kservice.c ****         /* the default base */
 870:rt_thread/src/kservice.c ****         base = 10;
 1938              		.loc 1 870 9 view .LVU626
 871:rt_thread/src/kservice.c **** 
 872:rt_thread/src/kservice.c ****         switch (*fmt)
 1939              		.loc 1 872 9 view .LVU627
 1940              		.loc 1 872 17 is_stmt 0 view .LVU628
 1941 0118 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 1942              		.loc 1 872 9 view .LVU629
 1943 011a 252B     		cmp	r3, #37
 1944 011c 00F09180 		beq	.L187
 1945              		.loc 1 872 9 view .LVU630
 1946 0120 C0F0B080 		bcc	.L188
 1947 0124 782B     		cmp	r3, #120
 1948 0126 00F2AD80 		bhi	.L188
 1949 012a 582B     		cmp	r3, #88
 1950 012c C0F0AA80 		bcc	.L188
 1951 0130 583B     		subs	r3, r3, #88
 1952 0132 202B     		cmp	r3, #32
 1953 0134 00F2A680 		bhi	.L188
 1954 0138 DFE803F0 		tbb	[pc, r3]
 1955              	.L190:
 1956 013c 9C       		.byte	(.L197-.L190)/2
 1957 013d A4       		.byte	(.L188-.L190)/2
 1958 013e A4       		.byte	(.L188-.L190)/2
 1959 013f A4       		.byte	(.L188-.L190)/2
 1960 0140 A4       		.byte	(.L188-.L190)/2
ARM GAS  /tmp/ccPhSWJA.s 			page 59


 1961 0141 A4       		.byte	(.L188-.L190)/2
 1962 0142 A4       		.byte	(.L188-.L190)/2
 1963 0143 A4       		.byte	(.L188-.L190)/2
 1964 0144 A4       		.byte	(.L188-.L190)/2
 1965 0145 A4       		.byte	(.L188-.L190)/2
 1966 0146 A4       		.byte	(.L188-.L190)/2
 1967 0147 11       		.byte	(.L196-.L190)/2
 1968 0148 A0       		.byte	(.L195-.L190)/2
 1969 0149 A4       		.byte	(.L188-.L190)/2
 1970 014a A4       		.byte	(.L188-.L190)/2
 1971 014b A4       		.byte	(.L188-.L190)/2
 1972 014c A4       		.byte	(.L188-.L190)/2
 1973 014d A0       		.byte	(.L195-.L190)/2
 1974 014e A4       		.byte	(.L188-.L190)/2
 1975 014f A4       		.byte	(.L188-.L190)/2
 1976 0150 A4       		.byte	(.L188-.L190)/2
 1977 0151 A4       		.byte	(.L188-.L190)/2
 1978 0152 A4       		.byte	(.L188-.L190)/2
 1979 0153 89       		.byte	(.L194-.L190)/2
 1980 0154 6F       		.byte	(.L193-.L190)/2
 1981 0155 A4       		.byte	(.L188-.L190)/2
 1982 0156 A4       		.byte	(.L188-.L190)/2
 1983 0157 30       		.byte	(.L192-.L190)/2
 1984 0158 A4       		.byte	(.L188-.L190)/2
 1985 0159 B3       		.byte	(.L191-.L190)/2
 1986 015a A4       		.byte	(.L188-.L190)/2
 1987 015b A4       		.byte	(.L188-.L190)/2
 1988 015c B5       		.byte	(.L242-.L190)/2
 1989 015d 00       		.p2align 1
 1990              	.L196:
 873:rt_thread/src/kservice.c ****         {
 874:rt_thread/src/kservice.c ****         case 'c':
 875:rt_thread/src/kservice.c ****             if (!(flags & LEFT))
 1991              		.loc 1 875 13 is_stmt 1 view .LVU631
 1992              		.loc 1 875 16 is_stmt 0 view .LVU632
 1993 015e 11F0100F 		tst	r1, #16
 1994 0162 09D0     		beq	.L198
 1995              	.L199:
 876:rt_thread/src/kservice.c ****             {
 877:rt_thread/src/kservice.c ****                 while (--field_width > 0)
 878:rt_thread/src/kservice.c ****                 {
 879:rt_thread/src/kservice.c ****                     if (str < end) *str = ' ';
 880:rt_thread/src/kservice.c ****                     ++ str;
 881:rt_thread/src/kservice.c ****                 }
 882:rt_thread/src/kservice.c ****             }
 883:rt_thread/src/kservice.c **** 
 884:rt_thread/src/kservice.c ****             /* get character */
 885:rt_thread/src/kservice.c ****             c = (rt_uint8_t)va_arg(args, int);
 1996              		.loc 1 885 13 is_stmt 1 view .LVU633
 1997              		.loc 1 885 29 is_stmt 0 view .LVU634
 1998 0164 059B     		ldr	r3, [sp, #20]
 1999 0166 1A1D     		adds	r2, r3, #4
 2000              	.LVL236:
 2001              		.loc 1 885 29 view .LVU635
 2002 0168 0592     		str	r2, [sp, #20]
 2003              		.loc 1 885 15 view .LVU636
 2004 016a 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
ARM GAS  /tmp/ccPhSWJA.s 			page 60


 2005              	.LVL237:
 886:rt_thread/src/kservice.c ****             if (str < end) *str = c;
 2006              		.loc 1 886 13 is_stmt 1 view .LVU637
 2007              		.loc 1 886 16 is_stmt 0 view .LVU638
 2008 016c B042     		cmp	r0, r6
 2009 016e 00D2     		bcs	.L202
 2010              		.loc 1 886 28 is_stmt 1 discriminator 1 view .LVU639
 2011              		.loc 1 886 33 is_stmt 0 discriminator 1 view .LVU640
 2012 0170 0370     		strb	r3, [r0]
 2013              	.L202:
 887:rt_thread/src/kservice.c ****             ++ str;
 2014              		.loc 1 887 13 is_stmt 1 view .LVU641
 2015 0172 0130     		adds	r0, r0, #1
 2016              	.LVL238:
 888:rt_thread/src/kservice.c **** 
 889:rt_thread/src/kservice.c ****             /* put width */
 890:rt_thread/src/kservice.c ****             while (--field_width > 0)
 2017              		.loc 1 890 13 view .LVU642
 2018              		.loc 1 890 19 is_stmt 0 view .LVU643
 2019 0174 09E0     		b	.L203
 2020              	.LVL239:
 2021              	.L200:
 880:rt_thread/src/kservice.c ****                 }
 2022              		.loc 1 880 21 is_stmt 1 view .LVU644
 2023 0176 0130     		adds	r0, r0, #1
 2024              	.LVL240:
 2025              	.L198:
 877:rt_thread/src/kservice.c ****                 {
 2026              		.loc 1 877 23 view .LVU645
 2027 0178 013D     		subs	r5, r5, #1
 2028              	.LVL241:
 877:rt_thread/src/kservice.c ****                 {
 2029              		.loc 1 877 23 is_stmt 0 view .LVU646
 2030 017a 002D     		cmp	r5, #0
 2031 017c F2DD     		ble	.L199
 879:rt_thread/src/kservice.c ****                     ++ str;
 2032              		.loc 1 879 21 is_stmt 1 view .LVU647
 879:rt_thread/src/kservice.c ****                     ++ str;
 2033              		.loc 1 879 24 is_stmt 0 view .LVU648
 2034 017e B042     		cmp	r0, r6
 2035 0180 F9D2     		bcs	.L200
 879:rt_thread/src/kservice.c ****                     ++ str;
 2036              		.loc 1 879 36 is_stmt 1 discriminator 1 view .LVU649
 879:rt_thread/src/kservice.c ****                     ++ str;
 2037              		.loc 1 879 41 is_stmt 0 discriminator 1 view .LVU650
 2038 0182 2023     		movs	r3, #32
 2039 0184 0370     		strb	r3, [r0]
 2040 0186 F6E7     		b	.L200
 2041              	.LVL242:
 2042              	.L204:
 891:rt_thread/src/kservice.c ****             {
 892:rt_thread/src/kservice.c ****                 if (str < end) *str = ' ';
 893:rt_thread/src/kservice.c ****                 ++ str;
 2043              		.loc 1 893 17 is_stmt 1 view .LVU651
 2044 0188 0130     		adds	r0, r0, #1
 2045              	.LVL243:
 2046              	.L203:
ARM GAS  /tmp/ccPhSWJA.s 			page 61


 890:rt_thread/src/kservice.c ****             {
 2047              		.loc 1 890 19 view .LVU652
 2048 018a 013D     		subs	r5, r5, #1
 2049              	.LVL244:
 890:rt_thread/src/kservice.c ****             {
 2050              		.loc 1 890 19 is_stmt 0 view .LVU653
 2051 018c 002D     		cmp	r5, #0
 2052 018e 7FF747AF 		ble	.L169
 892:rt_thread/src/kservice.c ****                 ++ str;
 2053              		.loc 1 892 17 is_stmt 1 view .LVU654
 892:rt_thread/src/kservice.c ****                 ++ str;
 2054              		.loc 1 892 20 is_stmt 0 view .LVU655
 2055 0192 B042     		cmp	r0, r6
 2056 0194 F8D2     		bcs	.L204
 892:rt_thread/src/kservice.c ****                 ++ str;
 2057              		.loc 1 892 32 is_stmt 1 discriminator 1 view .LVU656
 892:rt_thread/src/kservice.c ****                 ++ str;
 2058              		.loc 1 892 37 is_stmt 0 discriminator 1 view .LVU657
 2059 0196 2023     		movs	r3, #32
 2060 0198 0370     		strb	r3, [r0]
 2061 019a F5E7     		b	.L204
 2062              	.LVL245:
 2063              	.L192:
 894:rt_thread/src/kservice.c ****             }
 895:rt_thread/src/kservice.c ****             continue;
 896:rt_thread/src/kservice.c **** 
 897:rt_thread/src/kservice.c ****         case 's':
 898:rt_thread/src/kservice.c ****             s = va_arg(args, char *);
 2064              		.loc 1 898 13 is_stmt 1 view .LVU658
 2065              		.loc 1 898 15 is_stmt 0 view .LVU659
 2066 019c 059B     		ldr	r3, [sp, #20]
 2067 019e 1A1D     		adds	r2, r3, #4
 2068              	.LVL246:
 2069              		.loc 1 898 15 view .LVU660
 2070 01a0 0592     		str	r2, [sp, #20]
 2071 01a2 1A68     		ldr	r2, [r3]
 899:rt_thread/src/kservice.c ****             if (!s) s = "(NULL)";
 2072              		.loc 1 899 13 is_stmt 1 view .LVU661
 2073              		.loc 1 899 16 is_stmt 0 view .LVU662
 2074 01a4 0AB1     		cbz	r2, .L258
 2075              	.L206:
 2076              	.LVL247:
 900:rt_thread/src/kservice.c **** 
 901:rt_thread/src/kservice.c ****             for (len = 0; (len != field_width) && (s[len] != '\0'); len++);
 2077              		.loc 1 901 13 is_stmt 1 view .LVU663
 2078              		.loc 1 901 22 is_stmt 0 view .LVU664
 2079 01a6 0023     		movs	r3, #0
 2080              		.loc 1 901 13 view .LVU665
 2081 01a8 02E0     		b	.L207
 2082              	.LVL248:
 2083              	.L258:
 899:rt_thread/src/kservice.c ****             if (!s) s = "(NULL)";
 2084              		.loc 1 899 23 view .LVU666
 2085 01aa 524A     		ldr	r2, .L263
 2086 01ac FBE7     		b	.L206
 2087              	.LVL249:
 2088              	.L209:
ARM GAS  /tmp/ccPhSWJA.s 			page 62


 2089              		.loc 1 901 75 is_stmt 1 discriminator 4 view .LVU667
 2090              		.loc 1 901 69 discriminator 4 view .LVU668
 2091              		.loc 1 901 72 is_stmt 0 discriminator 4 view .LVU669
 2092 01ae 0133     		adds	r3, r3, #1
 2093              	.LVL250:
 2094              	.L207:
 2095              		.loc 1 901 27 is_stmt 1 discriminator 1 view .LVU670
 2096              		.loc 1 901 13 is_stmt 0 discriminator 1 view .LVU671
 2097 01b0 AB42     		cmp	r3, r5
 2098 01b2 04D0     		beq	.L208
 2099              		.loc 1 901 53 discriminator 3 view .LVU672
 2100 01b4 12F803E0 		ldrb	lr, [r2, r3]	@ zero_extendqisi2
 2101              		.loc 1 901 48 discriminator 3 view .LVU673
 2102 01b8 BEF1000F 		cmp	lr, #0
 2103 01bc F7D1     		bne	.L209
 2104              	.L208:
 902:rt_thread/src/kservice.c **** #ifdef RT_PRINTF_PRECISION
 903:rt_thread/src/kservice.c ****             if (precision > 0 && len > precision) len = precision;
 2105              		.loc 1 903 13 is_stmt 1 view .LVU674
 2106              		.loc 1 903 16 is_stmt 0 view .LVU675
 2107 01be BCF1000F 		cmp	ip, #0
 2108 01c2 02DD     		ble	.L210
 2109              		.loc 1 903 31 discriminator 1 view .LVU676
 2110 01c4 6345     		cmp	r3, ip
 2111 01c6 00DD     		ble	.L210
 2112              		.loc 1 903 55 view .LVU677
 2113 01c8 6346     		mov	r3, ip
 2114              	.LVL251:
 2115              	.L210:
 904:rt_thread/src/kservice.c **** #endif
 905:rt_thread/src/kservice.c **** 
 906:rt_thread/src/kservice.c ****             if (!(flags & LEFT))
 2116              		.loc 1 906 13 is_stmt 1 view .LVU678
 2117              		.loc 1 906 16 is_stmt 0 view .LVU679
 2118 01ca 11F0100F 		tst	r1, #16
 2119 01ce 03D0     		beq	.L211
 2120              	.LVL252:
 2121              	.L212:
 907:rt_thread/src/kservice.c ****             {
 908:rt_thread/src/kservice.c ****                 while (len < field_width--)
 909:rt_thread/src/kservice.c ****                 {
 910:rt_thread/src/kservice.c ****                     if (str < end) *str = ' ';
 911:rt_thread/src/kservice.c ****                     ++ str;
 912:rt_thread/src/kservice.c ****                 }
 913:rt_thread/src/kservice.c ****             }
 914:rt_thread/src/kservice.c **** 
 915:rt_thread/src/kservice.c ****             for (i = 0; i < len; ++i)
 2122              		.loc 1 915 13 is_stmt 1 view .LVU680
 2123              		.loc 1 915 20 is_stmt 0 view .LVU681
 2124 01d0 0021     		movs	r1, #0
 2125              		.loc 1 915 13 view .LVU682
 2126 01d2 0EE0     		b	.L215
 2127              	.LVL253:
 2128              	.L213:
 911:rt_thread/src/kservice.c ****                 }
 2129              		.loc 1 911 21 is_stmt 1 view .LVU683
 2130 01d4 0130     		adds	r0, r0, #1
ARM GAS  /tmp/ccPhSWJA.s 			page 63


 2131              	.LVL254:
 908:rt_thread/src/kservice.c ****                 {
 2132              		.loc 1 908 41 is_stmt 0 view .LVU684
 2133 01d6 0D46     		mov	r5, r1
 2134              	.LVL255:
 2135              	.L211:
 908:rt_thread/src/kservice.c ****                 {
 2136              		.loc 1 908 23 is_stmt 1 view .LVU685
 908:rt_thread/src/kservice.c ****                 {
 2137              		.loc 1 908 41 is_stmt 0 view .LVU686
 2138 01d8 691E     		subs	r1, r5, #1
 2139              	.LVL256:
 908:rt_thread/src/kservice.c ****                 {
 2140              		.loc 1 908 23 view .LVU687
 2141 01da AB42     		cmp	r3, r5
 2142 01dc 04DA     		bge	.L259
 910:rt_thread/src/kservice.c ****                     ++ str;
 2143              		.loc 1 910 21 is_stmt 1 view .LVU688
 910:rt_thread/src/kservice.c ****                     ++ str;
 2144              		.loc 1 910 24 is_stmt 0 view .LVU689
 2145 01de B042     		cmp	r0, r6
 2146 01e0 F8D2     		bcs	.L213
 910:rt_thread/src/kservice.c ****                     ++ str;
 2147              		.loc 1 910 36 is_stmt 1 discriminator 1 view .LVU690
 910:rt_thread/src/kservice.c ****                     ++ str;
 2148              		.loc 1 910 41 is_stmt 0 discriminator 1 view .LVU691
 2149 01e2 2025     		movs	r5, #32
 2150 01e4 0570     		strb	r5, [r0]
 2151 01e6 F5E7     		b	.L213
 2152              	.L259:
 908:rt_thread/src/kservice.c ****                 {
 2153              		.loc 1 908 41 view .LVU692
 2154 01e8 0D46     		mov	r5, r1
 2155 01ea F1E7     		b	.L212
 2156              	.LVL257:
 2157              	.L216:
 916:rt_thread/src/kservice.c ****             {
 917:rt_thread/src/kservice.c ****                 if (str < end) *str = *s;
 918:rt_thread/src/kservice.c ****                 ++ str;
 2158              		.loc 1 918 17 is_stmt 1 discriminator 2 view .LVU693
 2159 01ec 0130     		adds	r0, r0, #1
 2160              	.LVL258:
 919:rt_thread/src/kservice.c ****                 ++ s;
 2161              		.loc 1 919 17 discriminator 2 view .LVU694
 2162 01ee 0132     		adds	r2, r2, #1
 2163              	.LVL259:
 915:rt_thread/src/kservice.c ****             {
 2164              		.loc 1 915 34 discriminator 2 view .LVU695
 2165 01f0 0131     		adds	r1, r1, #1
 2166              	.LVL260:
 2167              	.L215:
 915:rt_thread/src/kservice.c ****             {
 2168              		.loc 1 915 25 discriminator 1 view .LVU696
 915:rt_thread/src/kservice.c ****             {
 2169              		.loc 1 915 13 is_stmt 0 discriminator 1 view .LVU697
 2170 01f2 9942     		cmp	r1, r3
 2171 01f4 08DA     		bge	.L218
ARM GAS  /tmp/ccPhSWJA.s 			page 64


 917:rt_thread/src/kservice.c ****                 ++ str;
 2172              		.loc 1 917 17 is_stmt 1 view .LVU698
 917:rt_thread/src/kservice.c ****                 ++ str;
 2173              		.loc 1 917 20 is_stmt 0 view .LVU699
 2174 01f6 B042     		cmp	r0, r6
 2175 01f8 F8D2     		bcs	.L216
 917:rt_thread/src/kservice.c ****                 ++ str;
 2176              		.loc 1 917 32 is_stmt 1 discriminator 1 view .LVU700
 917:rt_thread/src/kservice.c ****                 ++ str;
 2177              		.loc 1 917 39 is_stmt 0 discriminator 1 view .LVU701
 2178 01fa 92F800C0 		ldrb	ip, [r2]	@ zero_extendqisi2
 917:rt_thread/src/kservice.c ****                 ++ str;
 2179              		.loc 1 917 37 discriminator 1 view .LVU702
 2180 01fe 80F800C0 		strb	ip, [r0]
 2181 0202 F3E7     		b	.L216
 2182              	.LVL261:
 2183              	.L219:
 920:rt_thread/src/kservice.c ****             }
 921:rt_thread/src/kservice.c **** 
 922:rt_thread/src/kservice.c ****             while (len < field_width--)
 923:rt_thread/src/kservice.c ****             {
 924:rt_thread/src/kservice.c ****                 if (str < end) *str = ' ';
 925:rt_thread/src/kservice.c ****                 ++ str;
 2184              		.loc 1 925 17 is_stmt 1 view .LVU703
 2185 0204 0130     		adds	r0, r0, #1
 2186              	.LVL262:
 922:rt_thread/src/kservice.c ****             {
 2187              		.loc 1 922 37 is_stmt 0 view .LVU704
 2188 0206 1546     		mov	r5, r2
 2189              	.LVL263:
 2190              	.L218:
 922:rt_thread/src/kservice.c ****             {
 2191              		.loc 1 922 19 is_stmt 1 view .LVU705
 922:rt_thread/src/kservice.c ****             {
 2192              		.loc 1 922 37 is_stmt 0 view .LVU706
 2193 0208 6A1E     		subs	r2, r5, #1
 2194              	.LVL264:
 922:rt_thread/src/kservice.c ****             {
 2195              		.loc 1 922 19 view .LVU707
 2196 020a AB42     		cmp	r3, r5
 2197 020c BFF608AF 		bge	.L169
 924:rt_thread/src/kservice.c ****                 ++ str;
 2198              		.loc 1 924 17 is_stmt 1 view .LVU708
 924:rt_thread/src/kservice.c ****                 ++ str;
 2199              		.loc 1 924 20 is_stmt 0 view .LVU709
 2200 0210 B042     		cmp	r0, r6
 2201 0212 F7D2     		bcs	.L219
 924:rt_thread/src/kservice.c ****                 ++ str;
 2202              		.loc 1 924 32 is_stmt 1 discriminator 1 view .LVU710
 924:rt_thread/src/kservice.c ****                 ++ str;
 2203              		.loc 1 924 37 is_stmt 0 discriminator 1 view .LVU711
 2204 0214 2021     		movs	r1, #32
 2205 0216 0170     		strb	r1, [r0]
 2206 0218 F4E7     		b	.L219
 2207              	.LVL265:
 2208              	.L193:
 926:rt_thread/src/kservice.c ****             }
ARM GAS  /tmp/ccPhSWJA.s 			page 65


 927:rt_thread/src/kservice.c ****             continue;
 928:rt_thread/src/kservice.c **** 
 929:rt_thread/src/kservice.c ****         case 'p':
 930:rt_thread/src/kservice.c ****             if (field_width == -1)
 2209              		.loc 1 930 13 is_stmt 1 view .LVU712
 2210              		.loc 1 930 16 is_stmt 0 view .LVU713
 2211 021a B5F1FF3F 		cmp	r5, #-1
 2212 021e 0CD0     		beq	.L260
 2213              	.LVL266:
 2214              	.L221:
 931:rt_thread/src/kservice.c ****             {
 932:rt_thread/src/kservice.c ****                 field_width = sizeof(void *) << 1;
 933:rt_thread/src/kservice.c ****                 flags |= ZEROPAD;
 934:rt_thread/src/kservice.c ****             }
 935:rt_thread/src/kservice.c **** #ifdef RT_PRINTF_PRECISION
 936:rt_thread/src/kservice.c ****             str = print_number(str, end,
 2215              		.loc 1 936 13 is_stmt 1 view .LVU714
 937:rt_thread/src/kservice.c ****                                (long)va_arg(args, void *),
 2216              		.loc 1 937 38 is_stmt 0 view .LVU715
 2217 0220 059B     		ldr	r3, [sp, #20]
 2218 0222 1A1D     		adds	r2, r3, #4
 2219              	.LVL267:
 2220              		.loc 1 937 38 view .LVU716
 2221 0224 0592     		str	r2, [sp, #20]
 2222 0226 1A68     		ldr	r2, [r3]
 936:rt_thread/src/kservice.c ****                                (long)va_arg(args, void *),
 2223              		.loc 1 936 19 view .LVU717
 2224 0228 0291     		str	r1, [sp, #8]
 2225 022a CDF804C0 		str	ip, [sp, #4]
 2226 022e 0095     		str	r5, [sp]
 2227 0230 1023     		movs	r3, #16
 2228 0232 3146     		mov	r1, r6
 2229              	.LVL268:
 936:rt_thread/src/kservice.c ****                                (long)va_arg(args, void *),
 2230              		.loc 1 936 19 view .LVU718
 2231 0234 FFF7FEFF 		bl	print_number
 2232              	.LVL269:
 938:rt_thread/src/kservice.c ****                                16, field_width, precision, flags);
 939:rt_thread/src/kservice.c **** #else
 940:rt_thread/src/kservice.c ****             str = print_number(str, end,
 941:rt_thread/src/kservice.c ****                                (long)va_arg(args, void *),
 942:rt_thread/src/kservice.c ****                                16, field_width, flags);
 943:rt_thread/src/kservice.c **** #endif
 944:rt_thread/src/kservice.c ****             continue;
 2233              		.loc 1 944 13 is_stmt 1 view .LVU719
 2234 0238 F2E6     		b	.L169
 2235              	.LVL270:
 2236              	.L260:
 932:rt_thread/src/kservice.c ****                 flags |= ZEROPAD;
 2237              		.loc 1 932 17 view .LVU720
 933:rt_thread/src/kservice.c ****             }
 2238              		.loc 1 933 17 view .LVU721
 933:rt_thread/src/kservice.c ****             }
 2239              		.loc 1 933 23 is_stmt 0 view .LVU722
 2240 023a 41F00101 		orr	r1, r1, #1
 2241              	.LVL271:
 932:rt_thread/src/kservice.c ****                 flags |= ZEROPAD;
ARM GAS  /tmp/ccPhSWJA.s 			page 66


 2242              		.loc 1 932 29 view .LVU723
 2243 023e 0825     		movs	r5, #8
 2244 0240 EEE7     		b	.L221
 2245              	.LVL272:
 2246              	.L187:
 945:rt_thread/src/kservice.c **** 
 946:rt_thread/src/kservice.c ****         case '%':
 947:rt_thread/src/kservice.c ****             if (str < end) *str = '%';
 2247              		.loc 1 947 13 is_stmt 1 view .LVU724
 2248              		.loc 1 947 16 is_stmt 0 view .LVU725
 2249 0242 B042     		cmp	r0, r6
 2250 0244 01D2     		bcs	.L222
 2251              		.loc 1 947 28 is_stmt 1 discriminator 1 view .LVU726
 2252              		.loc 1 947 33 is_stmt 0 discriminator 1 view .LVU727
 2253 0246 2523     		movs	r3, #37
 2254 0248 0370     		strb	r3, [r0]
 2255              	.L222:
 948:rt_thread/src/kservice.c ****             ++ str;
 2256              		.loc 1 948 13 is_stmt 1 view .LVU728
 2257 024a 0130     		adds	r0, r0, #1
 2258              	.LVL273:
 949:rt_thread/src/kservice.c ****             continue;
 2259              		.loc 1 949 13 view .LVU729
 2260 024c E8E6     		b	.L169
 2261              	.L194:
 950:rt_thread/src/kservice.c **** 
 951:rt_thread/src/kservice.c ****         /* integer number formats - set up the flags and "break" */
 952:rt_thread/src/kservice.c ****         case 'o':
 953:rt_thread/src/kservice.c ****             base = 8;
 2262              		.loc 1 953 13 view .LVU730
 2263              	.LVL274:
 954:rt_thread/src/kservice.c ****             break;
 2264              		.loc 1 954 13 view .LVU731
 953:rt_thread/src/kservice.c ****             break;
 2265              		.loc 1 953 18 is_stmt 0 view .LVU732
 2266 024e 0823     		movs	r3, #8
 2267              	.LVL275:
 2268              	.L189:
 955:rt_thread/src/kservice.c **** 
 956:rt_thread/src/kservice.c ****         case 'X':
 957:rt_thread/src/kservice.c ****             flags |= LARGE;
 958:rt_thread/src/kservice.c ****         case 'x':
 959:rt_thread/src/kservice.c ****             base = 16;
 960:rt_thread/src/kservice.c ****             break;
 961:rt_thread/src/kservice.c **** 
 962:rt_thread/src/kservice.c ****         case 'd':
 963:rt_thread/src/kservice.c ****         case 'i':
 964:rt_thread/src/kservice.c ****             flags |= SIGN;
 965:rt_thread/src/kservice.c ****         case 'u':
 966:rt_thread/src/kservice.c ****             break;
 967:rt_thread/src/kservice.c **** 
 968:rt_thread/src/kservice.c ****         default:
 969:rt_thread/src/kservice.c ****             if (str < end) *str = '%';
 970:rt_thread/src/kservice.c ****             ++ str;
 971:rt_thread/src/kservice.c **** 
 972:rt_thread/src/kservice.c ****             if (*fmt)
 973:rt_thread/src/kservice.c ****             {
ARM GAS  /tmp/ccPhSWJA.s 			page 67


 974:rt_thread/src/kservice.c ****                 if (str < end) *str = *fmt;
 975:rt_thread/src/kservice.c ****                 ++ str;
 976:rt_thread/src/kservice.c ****             }
 977:rt_thread/src/kservice.c ****             else
 978:rt_thread/src/kservice.c ****             {
 979:rt_thread/src/kservice.c ****                 -- fmt;
 980:rt_thread/src/kservice.c ****             }
 981:rt_thread/src/kservice.c ****             continue;
 982:rt_thread/src/kservice.c ****         }
 983:rt_thread/src/kservice.c **** 
 984:rt_thread/src/kservice.c **** #ifdef RT_PRINTF_LONGLONG
 985:rt_thread/src/kservice.c ****         if (qualifier == 'L') num = va_arg(args, long long);
 986:rt_thread/src/kservice.c ****         else if (qualifier == 'l')
 987:rt_thread/src/kservice.c **** #else
 988:rt_thread/src/kservice.c ****         if (qualifier == 'l')
 2269              		.loc 1 988 9 is_stmt 1 view .LVU733
 2270              		.loc 1 988 12 is_stmt 0 view .LVU734
 2271 0250 6C2A     		cmp	r2, #108
 2272 0252 2AD0     		beq	.L261
 989:rt_thread/src/kservice.c **** #endif
 990:rt_thread/src/kservice.c ****         {
 991:rt_thread/src/kservice.c ****             num = va_arg(args, rt_uint32_t);
 992:rt_thread/src/kservice.c ****             if (flags & SIGN) num = (rt_int32_t)num;
 993:rt_thread/src/kservice.c ****         }
 994:rt_thread/src/kservice.c ****         else if (qualifier == 'h')
 2273              		.loc 1 994 14 is_stmt 1 view .LVU735
 2274              		.loc 1 994 17 is_stmt 0 view .LVU736
 2275 0254 682A     		cmp	r2, #104
 2276 0256 2FD0     		beq	.L262
 995:rt_thread/src/kservice.c ****         {
 996:rt_thread/src/kservice.c ****             num = (rt_uint16_t)va_arg(args, rt_int32_t);
 997:rt_thread/src/kservice.c ****             if (flags & SIGN) num = (rt_int16_t)num;
 998:rt_thread/src/kservice.c ****         }
 999:rt_thread/src/kservice.c ****         else
1000:rt_thread/src/kservice.c ****         {
1001:rt_thread/src/kservice.c ****             num = va_arg(args, rt_uint32_t);
 2277              		.loc 1 1001 13 is_stmt 1 view .LVU737
 2278              		.loc 1 1001 17 is_stmt 0 view .LVU738
 2279 0258 059A     		ldr	r2, [sp, #20]
 2280              	.LVL276:
 2281              		.loc 1 1001 17 view .LVU739
 2282 025a 02F1040E 		add	lr, r2, #4
 2283 025e CDF814E0 		str	lr, [sp, #20]
 2284 0262 1268     		ldr	r2, [r2]
1002:rt_thread/src/kservice.c ****             if (flags & SIGN) num = (rt_int32_t)num;
 2285              		.loc 1 1002 13 is_stmt 1 view .LVU740
 2286              	.L228:
 2287              	.LVL277:
1003:rt_thread/src/kservice.c ****         }
1004:rt_thread/src/kservice.c **** #ifdef RT_PRINTF_PRECISION
1005:rt_thread/src/kservice.c ****         str = print_number(str, end, num, base, field_width, precision, flags);
 2288              		.loc 1 1005 9 view .LVU741
 2289              		.loc 1 1005 15 is_stmt 0 view .LVU742
 2290 0264 0291     		str	r1, [sp, #8]
 2291 0266 CDF804C0 		str	ip, [sp, #4]
 2292 026a 0095     		str	r5, [sp]
 2293 026c 3146     		mov	r1, r6
ARM GAS  /tmp/ccPhSWJA.s 			page 68


 2294              	.LVL278:
 2295              		.loc 1 1005 15 view .LVU743
 2296 026e FFF7FEFF 		bl	print_number
 2297              	.LVL279:
 2298              		.loc 1 1005 15 view .LVU744
 2299 0272 D5E6     		b	.L169
 2300              	.LVL280:
 2301              	.L197:
 957:rt_thread/src/kservice.c ****         case 'x':
 2302              		.loc 1 957 13 is_stmt 1 view .LVU745
 957:rt_thread/src/kservice.c ****         case 'x':
 2303              		.loc 1 957 19 is_stmt 0 view .LVU746
 2304 0274 41F04001 		orr	r1, r1, #64
 2305              	.LVL281:
 959:rt_thread/src/kservice.c ****             break;
 2306              		.loc 1 959 18 view .LVU747
 2307 0278 1023     		movs	r3, #16
 2308 027a E9E7     		b	.L189
 2309              	.L195:
 964:rt_thread/src/kservice.c ****         case 'u':
 2310              		.loc 1 964 13 is_stmt 1 view .LVU748
 964:rt_thread/src/kservice.c ****         case 'u':
 2311              		.loc 1 964 19 is_stmt 0 view .LVU749
 2312 027c 41F00201 		orr	r1, r1, #2
 2313              	.LVL282:
 870:rt_thread/src/kservice.c **** 
 2314              		.loc 1 870 14 view .LVU750
 2315 0280 0A23     		movs	r3, #10
 2316 0282 E5E7     		b	.L189
 2317              	.L188:
 969:rt_thread/src/kservice.c ****             ++ str;
 2318              		.loc 1 969 13 is_stmt 1 view .LVU751
 969:rt_thread/src/kservice.c ****             ++ str;
 2319              		.loc 1 969 16 is_stmt 0 view .LVU752
 2320 0284 B042     		cmp	r0, r6
 2321 0286 01D2     		bcs	.L223
 969:rt_thread/src/kservice.c ****             ++ str;
 2322              		.loc 1 969 28 is_stmt 1 discriminator 1 view .LVU753
 969:rt_thread/src/kservice.c ****             ++ str;
 2323              		.loc 1 969 33 is_stmt 0 discriminator 1 view .LVU754
 2324 0288 2523     		movs	r3, #37
 2325 028a 0370     		strb	r3, [r0]
 2326              	.L223:
 970:rt_thread/src/kservice.c **** 
 2327              		.loc 1 970 13 is_stmt 1 view .LVU755
 2328 028c 421C     		adds	r2, r0, #1
 2329              	.LVL283:
 972:rt_thread/src/kservice.c ****             {
 2330              		.loc 1 972 13 view .LVU756
 972:rt_thread/src/kservice.c ****             {
 2331              		.loc 1 972 17 is_stmt 0 view .LVU757
 2332 028e 2378     		ldrb	r3, [r4]	@ zero_extendqisi2
 972:rt_thread/src/kservice.c ****             {
 2333              		.loc 1 972 16 view .LVU758
 2334 0290 23B1     		cbz	r3, .L224
 974:rt_thread/src/kservice.c ****                 ++ str;
 2335              		.loc 1 974 17 is_stmt 1 view .LVU759
ARM GAS  /tmp/ccPhSWJA.s 			page 69


 974:rt_thread/src/kservice.c ****                 ++ str;
 2336              		.loc 1 974 20 is_stmt 0 view .LVU760
 2337 0292 B242     		cmp	r2, r6
 2338 0294 00D2     		bcs	.L225
 974:rt_thread/src/kservice.c ****                 ++ str;
 2339              		.loc 1 974 32 is_stmt 1 discriminator 1 view .LVU761
 974:rt_thread/src/kservice.c ****                 ++ str;
 2340              		.loc 1 974 37 is_stmt 0 discriminator 1 view .LVU762
 2341 0296 4370     		strb	r3, [r0, #1]
 2342              	.L225:
 975:rt_thread/src/kservice.c ****             }
 2343              		.loc 1 975 17 is_stmt 1 view .LVU763
 2344 0298 0230     		adds	r0, r0, #2
 2345              	.LVL284:
 975:rt_thread/src/kservice.c ****             }
 2346              		.loc 1 975 17 is_stmt 0 view .LVU764
 2347 029a C1E6     		b	.L169
 2348              	.LVL285:
 2349              	.L224:
 979:rt_thread/src/kservice.c ****             }
 2350              		.loc 1 979 17 is_stmt 1 view .LVU765
 2351 029c 013C     		subs	r4, r4, #1
 2352              	.LVL286:
 970:rt_thread/src/kservice.c **** 
 2353              		.loc 1 970 13 is_stmt 0 view .LVU766
 2354 029e 1046     		mov	r0, r2
 2355              	.LVL287:
 981:rt_thread/src/kservice.c ****         }
 2356              		.loc 1 981 13 is_stmt 1 view .LVU767
 2357 02a0 BEE6     		b	.L169
 2358              	.LVL288:
 2359              	.L191:
 872:rt_thread/src/kservice.c ****         {
 2360              		.loc 1 872 9 is_stmt 0 view .LVU768
 2361 02a2 0A23     		movs	r3, #10
 2362 02a4 D4E7     		b	.L189
 2363              	.L242:
 959:rt_thread/src/kservice.c ****             break;
 2364              		.loc 1 959 18 view .LVU769
 2365 02a6 1023     		movs	r3, #16
 2366 02a8 D2E7     		b	.L189
 2367              	.LVL289:
 2368              	.L261:
 991:rt_thread/src/kservice.c ****             if (flags & SIGN) num = (rt_int32_t)num;
 2369              		.loc 1 991 13 is_stmt 1 view .LVU770
 991:rt_thread/src/kservice.c ****             if (flags & SIGN) num = (rt_int32_t)num;
 2370              		.loc 1 991 17 is_stmt 0 view .LVU771
 2371 02aa 059A     		ldr	r2, [sp, #20]
 2372              	.LVL290:
 991:rt_thread/src/kservice.c ****             if (flags & SIGN) num = (rt_int32_t)num;
 2373              		.loc 1 991 17 view .LVU772
 2374 02ac 02F1040E 		add	lr, r2, #4
 2375 02b0 CDF814E0 		str	lr, [sp, #20]
 2376 02b4 1268     		ldr	r2, [r2]
 992:rt_thread/src/kservice.c ****         }
 2377              		.loc 1 992 13 is_stmt 1 view .LVU773
 2378 02b6 D5E7     		b	.L228
ARM GAS  /tmp/ccPhSWJA.s 			page 70


 2379              	.LVL291:
 2380              	.L262:
 996:rt_thread/src/kservice.c ****             if (flags & SIGN) num = (rt_int16_t)num;
 2381              		.loc 1 996 13 view .LVU774
 996:rt_thread/src/kservice.c ****             if (flags & SIGN) num = (rt_int16_t)num;
 2382              		.loc 1 996 32 is_stmt 0 view .LVU775
 2383 02b8 059A     		ldr	r2, [sp, #20]
 2384              	.LVL292:
 996:rt_thread/src/kservice.c ****             if (flags & SIGN) num = (rt_int16_t)num;
 2385              		.loc 1 996 32 view .LVU776
 2386 02ba 02F1040E 		add	lr, r2, #4
 2387 02be CDF814E0 		str	lr, [sp, #20]
 2388 02c2 D2F800E0 		ldr	lr, [r2]
 996:rt_thread/src/kservice.c ****             if (flags & SIGN) num = (rt_int16_t)num;
 2389              		.loc 1 996 17 view .LVU777
 2390 02c6 1FFA8EF2 		uxth	r2, lr
 2391              	.LVL293:
 997:rt_thread/src/kservice.c ****         }
 2392              		.loc 1 997 13 is_stmt 1 view .LVU778
 997:rt_thread/src/kservice.c ****         }
 2393              		.loc 1 997 16 is_stmt 0 view .LVU779
 2394 02ca 11F0020F 		tst	r1, #2
 2395 02ce C9D0     		beq	.L228
 997:rt_thread/src/kservice.c ****         }
 2396              		.loc 1 997 31 is_stmt 1 discriminator 1 view .LVU780
 997:rt_thread/src/kservice.c ****         }
 2397              		.loc 1 997 37 is_stmt 0 discriminator 1 view .LVU781
 2398 02d0 0FFA8EF2 		sxth	r2, lr
 2399              	.LVL294:
 997:rt_thread/src/kservice.c ****         }
 2400              		.loc 1 997 37 discriminator 1 view .LVU782
 2401 02d4 C6E7     		b	.L228
 2402              	.LVL295:
 2403              	.L248:
1006:rt_thread/src/kservice.c **** #else
1007:rt_thread/src/kservice.c ****         str = print_number(str, end, num, base, field_width, flags);
1008:rt_thread/src/kservice.c **** #endif
1009:rt_thread/src/kservice.c ****     }
1010:rt_thread/src/kservice.c **** 
1011:rt_thread/src/kservice.c ****     if (size > 0)
 2404              		.loc 1 1011 5 is_stmt 1 view .LVU783
 2405              		.loc 1 1011 8 is_stmt 0 view .LVU784
 2406 02d6 B8F1000F 		cmp	r8, #0
 2407 02da 02D0     		beq	.L232
1012:rt_thread/src/kservice.c ****     {
1013:rt_thread/src/kservice.c ****         if (str < end) *str = '\0';
 2408              		.loc 1 1013 9 is_stmt 1 view .LVU785
 2409              		.loc 1 1013 12 is_stmt 0 view .LVU786
 2410 02dc B042     		cmp	r0, r6
 2411 02de 04D2     		bcs	.L233
 2412              		.loc 1 1013 24 is_stmt 1 discriminator 1 view .LVU787
 2413              		.loc 1 1013 29 is_stmt 0 discriminator 1 view .LVU788
 2414 02e0 0370     		strb	r3, [r0]
 2415              	.L232:
1014:rt_thread/src/kservice.c ****         else
1015:rt_thread/src/kservice.c ****         {
1016:rt_thread/src/kservice.c ****             end[-1] = '\0';
ARM GAS  /tmp/ccPhSWJA.s 			page 71


1017:rt_thread/src/kservice.c ****         }
1018:rt_thread/src/kservice.c ****     }
1019:rt_thread/src/kservice.c **** 
1020:rt_thread/src/kservice.c ****     /* the trailing null byte doesn't count towards the total
1021:rt_thread/src/kservice.c ****     * ++str;
1022:rt_thread/src/kservice.c ****     */
1023:rt_thread/src/kservice.c ****     return str - buf;
 2416              		.loc 1 1023 5 is_stmt 1 view .LVU789
1024:rt_thread/src/kservice.c **** }
 2417              		.loc 1 1024 1 is_stmt 0 view .LVU790
 2418 02e2 C01B     		subs	r0, r0, r7
 2419              	.LVL296:
 2420              		.loc 1 1024 1 view .LVU791
 2421 02e4 06B0     		add	sp, sp, #24
 2422              	.LCFI23:
 2423              		.cfi_remember_state
 2424              		.cfi_def_cfa_offset 24
 2425              		@ sp needed
 2426 02e6 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 2427              	.LVL297:
 2428              	.L233:
 2429              	.LCFI24:
 2430              		.cfi_restore_state
1016:rt_thread/src/kservice.c ****         }
 2431              		.loc 1 1016 13 is_stmt 1 view .LVU792
1016:rt_thread/src/kservice.c ****         }
 2432              		.loc 1 1016 21 is_stmt 0 view .LVU793
 2433 02ea 0023     		movs	r3, #0
 2434 02ec 06F8013C 		strb	r3, [r6, #-1]
 2435 02f0 F7E7     		b	.L232
 2436              	.L264:
 2437 02f2 00BF     		.align	2
 2438              	.L263:
 2439 02f4 00000000 		.word	.LC0
 2440              		.cfi_endproc
 2441              	.LFE34:
 2443              		.section	.text.rt_snprintf,"ax",%progbits
 2444              		.align	1
 2445              		.global	rt_snprintf
 2446              		.syntax unified
 2447              		.thumb
 2448              		.thumb_func
 2450              	rt_snprintf:
 2451              	.LVL298:
 2452              	.LFB35:
1025:rt_thread/src/kservice.c **** 
1026:rt_thread/src/kservice.c **** /**
1027:rt_thread/src/kservice.c ****  * This function will fill a formatted string to buffer
1028:rt_thread/src/kservice.c ****  *
1029:rt_thread/src/kservice.c ****  * @param buf the buffer to save formatted string
1030:rt_thread/src/kservice.c ****  * @param size the size of buffer
1031:rt_thread/src/kservice.c ****  * @param fmt the format
1032:rt_thread/src/kservice.c ****  */
1033:rt_thread/src/kservice.c **** rt_int32_t rt_snprintf(char *buf, rt_size_t size, const char *fmt, ...)
1034:rt_thread/src/kservice.c **** {
 2453              		.loc 1 1034 1 is_stmt 1 view -0
 2454              		.cfi_startproc
ARM GAS  /tmp/ccPhSWJA.s 			page 72


 2455              		@ args = 4, pretend = 8, frame = 8
 2456              		@ frame_needed = 0, uses_anonymous_args = 1
 2457              		.loc 1 1034 1 is_stmt 0 view .LVU795
 2458 0000 0CB4     		push	{r2, r3}
 2459              	.LCFI25:
 2460              		.cfi_def_cfa_offset 8
 2461              		.cfi_offset 2, -8
 2462              		.cfi_offset 3, -4
 2463 0002 00B5     		push	{lr}
 2464              	.LCFI26:
 2465              		.cfi_def_cfa_offset 12
 2466              		.cfi_offset 14, -12
 2467 0004 83B0     		sub	sp, sp, #12
 2468              	.LCFI27:
 2469              		.cfi_def_cfa_offset 24
 2470 0006 04AB     		add	r3, sp, #16
 2471 0008 53F8042B 		ldr	r2, [r3], #4
1035:rt_thread/src/kservice.c ****     rt_int32_t n;
 2472              		.loc 1 1035 5 is_stmt 1 view .LVU796
1036:rt_thread/src/kservice.c ****     va_list args;
 2473              		.loc 1 1036 5 view .LVU797
1037:rt_thread/src/kservice.c **** 
1038:rt_thread/src/kservice.c ****     va_start(args, fmt);
 2474              		.loc 1 1038 5 view .LVU798
 2475 000c 0193     		str	r3, [sp, #4]
1039:rt_thread/src/kservice.c ****     n = rt_vsnprintf(buf, size, fmt, args);
 2476              		.loc 1 1039 5 view .LVU799
 2477              		.loc 1 1039 9 is_stmt 0 view .LVU800
 2478 000e FFF7FEFF 		bl	rt_vsnprintf
 2479              	.LVL299:
1040:rt_thread/src/kservice.c ****     va_end(args);
 2480              		.loc 1 1040 5 is_stmt 1 view .LVU801
1041:rt_thread/src/kservice.c **** 
1042:rt_thread/src/kservice.c ****     return n;
 2481              		.loc 1 1042 5 view .LVU802
1043:rt_thread/src/kservice.c **** }
 2482              		.loc 1 1043 1 is_stmt 0 view .LVU803
 2483 0012 03B0     		add	sp, sp, #12
 2484              	.LCFI28:
 2485              		.cfi_def_cfa_offset 12
 2486              		@ sp needed
 2487 0014 5DF804EB 		ldr	lr, [sp], #4
 2488              	.LCFI29:
 2489              		.cfi_restore 14
 2490              		.cfi_def_cfa_offset 8
 2491 0018 02B0     		add	sp, sp, #8
 2492              	.LCFI30:
 2493              		.cfi_restore 3
 2494              		.cfi_restore 2
 2495              		.cfi_def_cfa_offset 0
 2496 001a 7047     		bx	lr
 2497              		.cfi_endproc
 2498              	.LFE35:
 2500              		.section	.text.rt_vsprintf,"ax",%progbits
 2501              		.align	1
 2502              		.global	rt_vsprintf
 2503              		.syntax unified
ARM GAS  /tmp/ccPhSWJA.s 			page 73


 2504              		.thumb
 2505              		.thumb_func
 2507              	rt_vsprintf:
 2508              	.LVL300:
 2509              	.LFB36:
1044:rt_thread/src/kservice.c **** 
1045:rt_thread/src/kservice.c **** /**
1046:rt_thread/src/kservice.c ****  * This function will fill a formatted string to buffer
1047:rt_thread/src/kservice.c ****  *
1048:rt_thread/src/kservice.c ****  * @param buf the buffer to save formatted string
1049:rt_thread/src/kservice.c ****  * @param arg_ptr the arg_ptr
1050:rt_thread/src/kservice.c ****  * @param format the format
1051:rt_thread/src/kservice.c ****  */
1052:rt_thread/src/kservice.c **** rt_int32_t rt_vsprintf(char *buf, const char *format, va_list arg_ptr)
1053:rt_thread/src/kservice.c **** {
 2510              		.loc 1 1053 1 is_stmt 1 view -0
 2511              		.cfi_startproc
 2512              		@ args = 0, pretend = 0, frame = 0
 2513              		@ frame_needed = 0, uses_anonymous_args = 0
 2514              		.loc 1 1053 1 is_stmt 0 view .LVU805
 2515 0000 08B5     		push	{r3, lr}
 2516              	.LCFI31:
 2517              		.cfi_def_cfa_offset 8
 2518              		.cfi_offset 3, -8
 2519              		.cfi_offset 14, -4
 2520 0002 1346     		mov	r3, r2
1054:rt_thread/src/kservice.c ****     return rt_vsnprintf(buf, (rt_size_t) - 1, format, arg_ptr);
 2521              		.loc 1 1054 5 is_stmt 1 view .LVU806
 2522              		.loc 1 1054 12 is_stmt 0 view .LVU807
 2523 0004 0A46     		mov	r2, r1
 2524              	.LVL301:
 2525              		.loc 1 1054 12 view .LVU808
 2526 0006 4FF0FF31 		mov	r1, #-1
 2527              	.LVL302:
 2528              		.loc 1 1054 12 view .LVU809
 2529 000a FFF7FEFF 		bl	rt_vsnprintf
 2530              	.LVL303:
1055:rt_thread/src/kservice.c **** }
 2531              		.loc 1 1055 1 view .LVU810
 2532 000e 08BD     		pop	{r3, pc}
 2533              		.cfi_endproc
 2534              	.LFE36:
 2536              		.section	.text.rt_sprintf,"ax",%progbits
 2537              		.align	1
 2538              		.global	rt_sprintf
 2539              		.syntax unified
 2540              		.thumb
 2541              		.thumb_func
 2543              	rt_sprintf:
 2544              	.LVL304:
 2545              	.LFB37:
1056:rt_thread/src/kservice.c **** 
1057:rt_thread/src/kservice.c **** /**
1058:rt_thread/src/kservice.c ****  * This function will fill a formatted string to buffer
1059:rt_thread/src/kservice.c ****  *
1060:rt_thread/src/kservice.c ****  * @param buf the buffer to save formatted string
1061:rt_thread/src/kservice.c ****  * @param format the format
ARM GAS  /tmp/ccPhSWJA.s 			page 74


1062:rt_thread/src/kservice.c ****  */
1063:rt_thread/src/kservice.c **** rt_int32_t rt_sprintf(char *buf, const char *format, ...)
1064:rt_thread/src/kservice.c **** {
 2546              		.loc 1 1064 1 is_stmt 1 view -0
 2547              		.cfi_startproc
 2548              		@ args = 4, pretend = 12, frame = 8
 2549              		@ frame_needed = 0, uses_anonymous_args = 1
 2550              		.loc 1 1064 1 is_stmt 0 view .LVU812
 2551 0000 0EB4     		push	{r1, r2, r3}
 2552              	.LCFI32:
 2553              		.cfi_def_cfa_offset 12
 2554              		.cfi_offset 1, -12
 2555              		.cfi_offset 2, -8
 2556              		.cfi_offset 3, -4
 2557 0002 00B5     		push	{lr}
 2558              	.LCFI33:
 2559              		.cfi_def_cfa_offset 16
 2560              		.cfi_offset 14, -16
 2561 0004 82B0     		sub	sp, sp, #8
 2562              	.LCFI34:
 2563              		.cfi_def_cfa_offset 24
 2564 0006 03AA     		add	r2, sp, #12
 2565 0008 52F8041B 		ldr	r1, [r2], #4
1065:rt_thread/src/kservice.c ****     rt_int32_t n;
 2566              		.loc 1 1065 5 is_stmt 1 view .LVU813
1066:rt_thread/src/kservice.c ****     va_list arg_ptr;
 2567              		.loc 1 1066 5 view .LVU814
1067:rt_thread/src/kservice.c **** 
1068:rt_thread/src/kservice.c ****     va_start(arg_ptr, format);
 2568              		.loc 1 1068 5 view .LVU815
 2569 000c 0192     		str	r2, [sp, #4]
1069:rt_thread/src/kservice.c ****     n = rt_vsprintf(buf, format, arg_ptr);
 2570              		.loc 1 1069 5 view .LVU816
 2571              		.loc 1 1069 9 is_stmt 0 view .LVU817
 2572 000e FFF7FEFF 		bl	rt_vsprintf
 2573              	.LVL305:
1070:rt_thread/src/kservice.c ****     va_end(arg_ptr);
 2574              		.loc 1 1070 5 is_stmt 1 view .LVU818
1071:rt_thread/src/kservice.c **** 
1072:rt_thread/src/kservice.c ****     return n;
 2575              		.loc 1 1072 5 view .LVU819
1073:rt_thread/src/kservice.c **** }
 2576              		.loc 1 1073 1 is_stmt 0 view .LVU820
 2577 0012 02B0     		add	sp, sp, #8
 2578              	.LCFI35:
 2579              		.cfi_def_cfa_offset 16
 2580              		@ sp needed
 2581 0014 5DF804EB 		ldr	lr, [sp], #4
 2582              	.LCFI36:
 2583              		.cfi_restore 14
 2584              		.cfi_def_cfa_offset 12
 2585 0018 03B0     		add	sp, sp, #12
 2586              	.LCFI37:
 2587              		.cfi_restore 3
 2588              		.cfi_restore 2
 2589              		.cfi_restore 1
 2590              		.cfi_def_cfa_offset 0
ARM GAS  /tmp/ccPhSWJA.s 			page 75


 2591 001a 7047     		bx	lr
 2592              		.cfi_endproc
 2593              	.LFE37:
 2595              		.section	.text.rt_hw_console_output,"ax",%progbits
 2596              		.align	1
 2597              		.weak	rt_hw_console_output
 2598              		.syntax unified
 2599              		.thumb
 2600              		.thumb_func
 2602              	rt_hw_console_output:
 2603              	.LVL306:
 2604              	.LFB38:
1074:rt_thread/src/kservice.c **** 
1075:rt_thread/src/kservice.c **** #ifdef RT_USING_CONSOLE
1076:rt_thread/src/kservice.c **** 
1077:rt_thread/src/kservice.c **** #ifdef RT_USING_DEVICE
1078:rt_thread/src/kservice.c **** /**
1079:rt_thread/src/kservice.c ****  * This function returns the device using in console.
1080:rt_thread/src/kservice.c ****  *
1081:rt_thread/src/kservice.c ****  * @return the device using in console or RT_NULL
1082:rt_thread/src/kservice.c ****  */
1083:rt_thread/src/kservice.c **** rt_device_t rt_console_get_device(void)
1084:rt_thread/src/kservice.c **** {
1085:rt_thread/src/kservice.c ****     return _console_device;
1086:rt_thread/src/kservice.c **** }
1087:rt_thread/src/kservice.c **** 
1088:rt_thread/src/kservice.c **** /**
1089:rt_thread/src/kservice.c ****  * This function will set a device as console device.
1090:rt_thread/src/kservice.c ****  * After set a device to console, all output of rt_kprintf will be
1091:rt_thread/src/kservice.c ****  * redirected to this new device.
1092:rt_thread/src/kservice.c ****  *
1093:rt_thread/src/kservice.c ****  * @param name the name of new console device
1094:rt_thread/src/kservice.c ****  *
1095:rt_thread/src/kservice.c ****  * @return the old console device handler on successful, or RT_NULL on failure.
1096:rt_thread/src/kservice.c ****  */
1097:rt_thread/src/kservice.c **** rt_device_t rt_console_set_device(const char *name)
1098:rt_thread/src/kservice.c **** {
1099:rt_thread/src/kservice.c ****     rt_device_t new_device, old_device;
1100:rt_thread/src/kservice.c **** 
1101:rt_thread/src/kservice.c ****     /* save old device */
1102:rt_thread/src/kservice.c ****     old_device = _console_device;
1103:rt_thread/src/kservice.c **** 
1104:rt_thread/src/kservice.c ****     /* find new console device */
1105:rt_thread/src/kservice.c ****     new_device = rt_device_find(name);
1106:rt_thread/src/kservice.c **** 
1107:rt_thread/src/kservice.c ****     /* check whether it's a same device */
1108:rt_thread/src/kservice.c ****     if (new_device == old_device) return RT_NULL;
1109:rt_thread/src/kservice.c **** 
1110:rt_thread/src/kservice.c ****     if (new_device != RT_NULL)
1111:rt_thread/src/kservice.c ****     {
1112:rt_thread/src/kservice.c ****         if (_console_device != RT_NULL)
1113:rt_thread/src/kservice.c ****         {
1114:rt_thread/src/kservice.c ****             /* close old console device */
1115:rt_thread/src/kservice.c ****             rt_device_close(_console_device);
1116:rt_thread/src/kservice.c ****         }
1117:rt_thread/src/kservice.c **** 
1118:rt_thread/src/kservice.c ****         /* set new console device */
ARM GAS  /tmp/ccPhSWJA.s 			page 76


1119:rt_thread/src/kservice.c ****         rt_device_open(new_device, RT_DEVICE_OFLAG_RDWR | RT_DEVICE_FLAG_STREAM);
1120:rt_thread/src/kservice.c ****         _console_device = new_device;
1121:rt_thread/src/kservice.c ****     }
1122:rt_thread/src/kservice.c **** 
1123:rt_thread/src/kservice.c ****     return old_device;
1124:rt_thread/src/kservice.c **** }
1125:rt_thread/src/kservice.c **** #endif
1126:rt_thread/src/kservice.c **** 
1127:rt_thread/src/kservice.c **** RT_WEAK void rt_hw_console_output(const char *str)
1128:rt_thread/src/kservice.c **** {
 2605              		.loc 1 1128 1 is_stmt 1 view -0
 2606              		.cfi_startproc
 2607              		@ args = 0, pretend = 0, frame = 0
 2608              		@ frame_needed = 0, uses_anonymous_args = 0
 2609              		@ link register save eliminated.
1129:rt_thread/src/kservice.c ****     /* empty console output */
1130:rt_thread/src/kservice.c **** }
 2610              		.loc 1 1130 1 view .LVU822
 2611 0000 7047     		bx	lr
 2612              		.cfi_endproc
 2613              	.LFE38:
 2615              		.section	.text.rt_kputs,"ax",%progbits
 2616              		.align	1
 2617              		.global	rt_kputs
 2618              		.syntax unified
 2619              		.thumb
 2620              		.thumb_func
 2622              	rt_kputs:
 2623              	.LVL307:
 2624              	.LFB39:
1131:rt_thread/src/kservice.c **** 
1132:rt_thread/src/kservice.c **** /**
1133:rt_thread/src/kservice.c ****  * This function will put string to the console.
1134:rt_thread/src/kservice.c ****  *
1135:rt_thread/src/kservice.c ****  * @param str the string output to the console.
1136:rt_thread/src/kservice.c ****  */
1137:rt_thread/src/kservice.c **** void rt_kputs(const char *str)
1138:rt_thread/src/kservice.c **** {
 2625              		.loc 1 1138 1 view -0
 2626              		.cfi_startproc
 2627              		@ args = 0, pretend = 0, frame = 0
 2628              		@ frame_needed = 0, uses_anonymous_args = 0
1139:rt_thread/src/kservice.c ****     if (!str) return;
 2629              		.loc 1 1139 5 view .LVU824
 2630              		.loc 1 1139 8 is_stmt 0 view .LVU825
 2631 0000 18B1     		cbz	r0, .L275
1138:rt_thread/src/kservice.c ****     if (!str) return;
 2632              		.loc 1 1138 1 view .LVU826
 2633 0002 08B5     		push	{r3, lr}
 2634              	.LCFI38:
 2635              		.cfi_def_cfa_offset 8
 2636              		.cfi_offset 3, -8
 2637              		.cfi_offset 14, -4
1140:rt_thread/src/kservice.c **** 
1141:rt_thread/src/kservice.c **** #ifdef RT_USING_DEVICE
1142:rt_thread/src/kservice.c ****     if (_console_device == RT_NULL)
1143:rt_thread/src/kservice.c ****     {
ARM GAS  /tmp/ccPhSWJA.s 			page 77


1144:rt_thread/src/kservice.c ****         rt_hw_console_output(str);
1145:rt_thread/src/kservice.c ****     }
1146:rt_thread/src/kservice.c ****     else
1147:rt_thread/src/kservice.c ****     {
1148:rt_thread/src/kservice.c ****         rt_uint16_t old_flag = _console_device->open_flag;
1149:rt_thread/src/kservice.c **** 
1150:rt_thread/src/kservice.c ****         _console_device->open_flag |= RT_DEVICE_FLAG_STREAM;
1151:rt_thread/src/kservice.c ****         rt_device_write(_console_device, 0, str, rt_strlen(str));
1152:rt_thread/src/kservice.c ****         _console_device->open_flag = old_flag;
1153:rt_thread/src/kservice.c ****     }
1154:rt_thread/src/kservice.c **** #else
1155:rt_thread/src/kservice.c ****     rt_hw_console_output(str);
 2638              		.loc 1 1155 5 is_stmt 1 view .LVU827
 2639 0004 FFF7FEFF 		bl	rt_hw_console_output
 2640              	.LVL308:
1156:rt_thread/src/kservice.c **** #endif
1157:rt_thread/src/kservice.c **** }
 2641              		.loc 1 1157 1 is_stmt 0 view .LVU828
 2642 0008 08BD     		pop	{r3, pc}
 2643              	.LVL309:
 2644              	.L275:
 2645              	.LCFI39:
 2646              		.cfi_def_cfa_offset 0
 2647              		.cfi_restore 3
 2648              		.cfi_restore 14
 2649              		.loc 1 1157 1 view .LVU829
 2650 000a 7047     		bx	lr
 2651              		.cfi_endproc
 2652              	.LFE39:
 2654              		.section	.text.rt_kprintf,"ax",%progbits
 2655              		.align	1
 2656              		.global	rt_kprintf
 2657              		.syntax unified
 2658              		.thumb
 2659              		.thumb_func
 2661              	rt_kprintf:
 2662              	.LVL310:
 2663              	.LFB40:
1158:rt_thread/src/kservice.c **** 
1159:rt_thread/src/kservice.c **** /**
1160:rt_thread/src/kservice.c ****  * This function will print a formatted string on system console
1161:rt_thread/src/kservice.c ****  *
1162:rt_thread/src/kservice.c ****  * @param fmt the format
1163:rt_thread/src/kservice.c ****  */
1164:rt_thread/src/kservice.c **** void rt_kprintf(const char *fmt, ...)
1165:rt_thread/src/kservice.c **** {
 2664              		.loc 1 1165 1 is_stmt 1 view -0
 2665              		.cfi_startproc
 2666              		@ args = 4, pretend = 16, frame = 8
 2667              		@ frame_needed = 0, uses_anonymous_args = 1
 2668              		.loc 1 1165 1 is_stmt 0 view .LVU831
 2669 0000 0FB4     		push	{r0, r1, r2, r3}
 2670              	.LCFI40:
 2671              		.cfi_def_cfa_offset 16
 2672              		.cfi_offset 0, -16
 2673              		.cfi_offset 1, -12
 2674              		.cfi_offset 2, -8
ARM GAS  /tmp/ccPhSWJA.s 			page 78


 2675              		.cfi_offset 3, -4
 2676 0002 10B5     		push	{r4, lr}
 2677              	.LCFI41:
 2678              		.cfi_def_cfa_offset 24
 2679              		.cfi_offset 4, -24
 2680              		.cfi_offset 14, -20
 2681 0004 82B0     		sub	sp, sp, #8
 2682              	.LCFI42:
 2683              		.cfi_def_cfa_offset 32
 2684 0006 04AB     		add	r3, sp, #16
 2685 0008 53F8042B 		ldr	r2, [r3], #4
1166:rt_thread/src/kservice.c ****     va_list args;
 2686              		.loc 1 1166 5 is_stmt 1 view .LVU832
1167:rt_thread/src/kservice.c ****     rt_size_t length;
 2687              		.loc 1 1167 5 view .LVU833
1168:rt_thread/src/kservice.c ****     static char rt_log_buf[RT_CONSOLEBUF_SIZE];
 2688              		.loc 1 1168 5 view .LVU834
1169:rt_thread/src/kservice.c **** 
1170:rt_thread/src/kservice.c ****     va_start(args, fmt);
 2689              		.loc 1 1170 5 view .LVU835
 2690 000c 0193     		str	r3, [sp, #4]
1171:rt_thread/src/kservice.c ****     /* the return value of vsnprintf is the number of bytes that would be
1172:rt_thread/src/kservice.c ****      * written to buffer had if the size of the buffer been sufficiently
1173:rt_thread/src/kservice.c ****      * large excluding the terminating null byte. If the output string
1174:rt_thread/src/kservice.c ****      * would be larger than the rt_log_buf, we have to adjust the output
1175:rt_thread/src/kservice.c ****      * length. */
1176:rt_thread/src/kservice.c ****     length = rt_vsnprintf(rt_log_buf, sizeof(rt_log_buf) - 1, fmt, args);
 2691              		.loc 1 1176 5 view .LVU836
 2692              		.loc 1 1176 14 is_stmt 0 view .LVU837
 2693 000e 064C     		ldr	r4, .L280
 2694 0010 7F21     		movs	r1, #127
 2695 0012 2046     		mov	r0, r4
 2696 0014 FFF7FEFF 		bl	rt_vsnprintf
 2697              	.LVL311:
1177:rt_thread/src/kservice.c ****     if (length > RT_CONSOLEBUF_SIZE - 1)
 2698              		.loc 1 1177 5 is_stmt 1 view .LVU838
1178:rt_thread/src/kservice.c ****         length = RT_CONSOLEBUF_SIZE - 1;
1179:rt_thread/src/kservice.c **** #ifdef RT_USING_DEVICE
1180:rt_thread/src/kservice.c ****     if (_console_device == RT_NULL)
1181:rt_thread/src/kservice.c ****     {
1182:rt_thread/src/kservice.c ****         rt_hw_console_output(rt_log_buf);
1183:rt_thread/src/kservice.c ****     }
1184:rt_thread/src/kservice.c ****     else
1185:rt_thread/src/kservice.c ****     {
1186:rt_thread/src/kservice.c ****         rt_uint16_t old_flag = _console_device->open_flag;
1187:rt_thread/src/kservice.c **** 
1188:rt_thread/src/kservice.c ****         _console_device->open_flag |= RT_DEVICE_FLAG_STREAM;
1189:rt_thread/src/kservice.c ****         rt_device_write(_console_device, 0, rt_log_buf, length);
1190:rt_thread/src/kservice.c ****         _console_device->open_flag = old_flag;
1191:rt_thread/src/kservice.c ****     }
1192:rt_thread/src/kservice.c **** #else
1193:rt_thread/src/kservice.c ****     rt_hw_console_output(rt_log_buf);
 2699              		.loc 1 1193 5 view .LVU839
 2700 0018 2046     		mov	r0, r4
 2701 001a FFF7FEFF 		bl	rt_hw_console_output
 2702              	.LVL312:
1194:rt_thread/src/kservice.c **** #endif
ARM GAS  /tmp/ccPhSWJA.s 			page 79


1195:rt_thread/src/kservice.c ****     va_end(args);
 2703              		.loc 1 1195 5 view .LVU840
1196:rt_thread/src/kservice.c **** }
 2704              		.loc 1 1196 1 is_stmt 0 view .LVU841
 2705 001e 02B0     		add	sp, sp, #8
 2706              	.LCFI43:
 2707              		.cfi_def_cfa_offset 24
 2708              		@ sp needed
 2709 0020 BDE81040 		pop	{r4, lr}
 2710              	.LCFI44:
 2711              		.cfi_restore 14
 2712              		.cfi_restore 4
 2713              		.cfi_def_cfa_offset 16
 2714 0024 04B0     		add	sp, sp, #16
 2715              	.LCFI45:
 2716              		.cfi_restore 3
 2717              		.cfi_restore 2
 2718              		.cfi_restore 1
 2719              		.cfi_restore 0
 2720              		.cfi_def_cfa_offset 0
 2721 0026 7047     		bx	lr
 2722              	.L281:
 2723              		.align	2
 2724              	.L280:
 2725 0028 00000000 		.word	.LANCHOR3
 2726              		.cfi_endproc
 2727              	.LFE40:
 2729              		.section	.rodata.rt_show_version.str1.4,"aMS",%progbits,1
 2730              		.align	2
 2731              	.LC1:
 2732 0000 0A205C20 		.ascii	"\012 \\ | /\012\000"
 2732      7C202F0A 
 2732      00
 2733 0009 000000   		.align	2
 2734              	.LC2:
 2735 000c 2D205254 		.ascii	"- RT -     Thread Operating System\012\000"
 2735      202D2020 
 2735      20202054 
 2735      68726561 
 2735      64204F70 
 2736              		.align	2
 2737              	.LC3:
 2738 0030 202F207C 		.ascii	" / | \\     %d.%d.%d build %s\012\000"
 2738      205C2020 
 2738      20202025 
 2738      642E2564 
 2738      2E256420 
 2739 004e 0000     		.align	2
 2740              	.LC4:
 2741 0050 53657020 		.ascii	"Sep 15 2024\000"
 2741      31352032 
 2741      30323400 
 2742              		.align	2
 2743              	.LC5:
 2744 005c 20323030 		.ascii	" 2006 - 2020 Copyright by rt-thread team\012\000"
 2744      36202D20 
 2744      32303230 
ARM GAS  /tmp/ccPhSWJA.s 			page 80


 2744      20436F70 
 2744      79726967 
 2745              		.section	.text.rt_show_version,"ax",%progbits
 2746              		.align	1
 2747              		.global	rt_show_version
 2748              		.syntax unified
 2749              		.thumb
 2750              		.thumb_func
 2752              	rt_show_version:
 2753              	.LFB30:
 521:rt_thread/src/kservice.c ****     rt_kprintf("\n \\ | /\n");
 2754              		.loc 1 521 1 is_stmt 1 view -0
 2755              		.cfi_startproc
 2756              		@ args = 0, pretend = 0, frame = 0
 2757              		@ frame_needed = 0, uses_anonymous_args = 0
 2758 0000 00B5     		push	{lr}
 2759              	.LCFI46:
 2760              		.cfi_def_cfa_offset 4
 2761              		.cfi_offset 14, -4
 2762 0002 83B0     		sub	sp, sp, #12
 2763              	.LCFI47:
 2764              		.cfi_def_cfa_offset 16
 522:rt_thread/src/kservice.c ****     rt_kprintf("- RT -     Thread Operating System\n");
 2765              		.loc 1 522 5 view .LVU843
 2766 0004 0948     		ldr	r0, .L284
 2767 0006 FFF7FEFF 		bl	rt_kprintf
 2768              	.LVL313:
 523:rt_thread/src/kservice.c ****     rt_kprintf(" / | \\     %d.%d.%d build %s\n",
 2769              		.loc 1 523 5 view .LVU844
 2770 000a 0948     		ldr	r0, .L284+4
 2771 000c FFF7FEFF 		bl	rt_kprintf
 2772              	.LVL314:
 524:rt_thread/src/kservice.c ****                RT_VERSION, RT_SUBVERSION, RT_REVISION, __DATE__);
 2773              		.loc 1 524 5 view .LVU845
 2774 0010 084B     		ldr	r3, .L284+8
 2775 0012 0093     		str	r3, [sp]
 2776 0014 0523     		movs	r3, #5
 2777 0016 0122     		movs	r2, #1
 2778 0018 0321     		movs	r1, #3
 2779 001a 0748     		ldr	r0, .L284+12
 2780 001c FFF7FEFF 		bl	rt_kprintf
 2781              	.LVL315:
 526:rt_thread/src/kservice.c **** }
 2782              		.loc 1 526 5 view .LVU846
 2783 0020 0648     		ldr	r0, .L284+16
 2784 0022 FFF7FEFF 		bl	rt_kprintf
 2785              	.LVL316:
 527:rt_thread/src/kservice.c **** 
 2786              		.loc 1 527 1 is_stmt 0 view .LVU847
 2787 0026 03B0     		add	sp, sp, #12
 2788              	.LCFI48:
 2789              		.cfi_def_cfa_offset 4
 2790              		@ sp needed
 2791 0028 5DF804FB 		ldr	pc, [sp], #4
 2792              	.L285:
 2793              		.align	2
 2794              	.L284:
ARM GAS  /tmp/ccPhSWJA.s 			page 81


 2795 002c 00000000 		.word	.LC1
 2796 0030 0C000000 		.word	.LC2
 2797 0034 50000000 		.word	.LC4
 2798 0038 30000000 		.word	.LC3
 2799 003c 5C000000 		.word	.LC5
 2800              		.cfi_endproc
 2801              	.LFE30:
 2803              		.section	.text.rt_malloc_align,"ax",%progbits
 2804              		.align	1
 2805              		.global	rt_malloc_align
 2806              		.syntax unified
 2807              		.thumb
 2808              		.thumb_func
 2810              	rt_malloc_align:
 2811              	.LVL317:
 2812              	.LFB41:
1197:rt_thread/src/kservice.c **** #endif
1198:rt_thread/src/kservice.c **** 
1199:rt_thread/src/kservice.c **** #ifdef RT_USING_HEAP
1200:rt_thread/src/kservice.c **** /**
1201:rt_thread/src/kservice.c ****  * This function allocates a memory block, which address is aligned to the
1202:rt_thread/src/kservice.c ****  * specified alignment size.
1203:rt_thread/src/kservice.c ****  *
1204:rt_thread/src/kservice.c ****  * @param size the allocated memory block size
1205:rt_thread/src/kservice.c ****  * @param align the alignment size
1206:rt_thread/src/kservice.c ****  *
1207:rt_thread/src/kservice.c ****  * @return the allocated memory block on successful, otherwise returns RT_NULL
1208:rt_thread/src/kservice.c ****  */
1209:rt_thread/src/kservice.c **** void *rt_malloc_align(rt_size_t size, rt_size_t align)
1210:rt_thread/src/kservice.c **** {
 2813              		.loc 1 1210 1 is_stmt 1 view -0
 2814              		.cfi_startproc
 2815              		@ args = 0, pretend = 0, frame = 0
 2816              		@ frame_needed = 0, uses_anonymous_args = 0
 2817              		.loc 1 1210 1 is_stmt 0 view .LVU849
 2818 0000 10B5     		push	{r4, lr}
 2819              	.LCFI49:
 2820              		.cfi_def_cfa_offset 8
 2821              		.cfi_offset 4, -8
 2822              		.cfi_offset 14, -4
1211:rt_thread/src/kservice.c ****     void *ptr;
 2823              		.loc 1 1211 5 is_stmt 1 view .LVU850
1212:rt_thread/src/kservice.c ****     void *align_ptr;
 2824              		.loc 1 1212 5 view .LVU851
1213:rt_thread/src/kservice.c ****     int uintptr_size;
 2825              		.loc 1 1213 5 view .LVU852
1214:rt_thread/src/kservice.c ****     rt_size_t align_size;
 2826              		.loc 1 1214 5 view .LVU853
1215:rt_thread/src/kservice.c **** 
1216:rt_thread/src/kservice.c ****     /* sizeof pointer */
1217:rt_thread/src/kservice.c ****     uintptr_size = sizeof(void*);
 2827              		.loc 1 1217 5 view .LVU854
 2828              	.LVL318:
1218:rt_thread/src/kservice.c ****     uintptr_size -= 1;
 2829              		.loc 1 1218 5 view .LVU855
1219:rt_thread/src/kservice.c **** 
1220:rt_thread/src/kservice.c ****     /* align the alignment size to uintptr size byte */
ARM GAS  /tmp/ccPhSWJA.s 			page 82


1221:rt_thread/src/kservice.c ****     align = ((align + uintptr_size) & ~uintptr_size);
 2830              		.loc 1 1221 5 view .LVU856
 2831              		.loc 1 1221 21 is_stmt 0 view .LVU857
 2832 0002 CC1C     		adds	r4, r1, #3
 2833              		.loc 1 1221 11 view .LVU858
 2834 0004 24F00304 		bic	r4, r4, #3
 2835              	.LVL319:
1222:rt_thread/src/kservice.c **** 
1223:rt_thread/src/kservice.c ****     /* get total aligned size */
1224:rt_thread/src/kservice.c ****     align_size = ((size + uintptr_size) & ~uintptr_size) + align;
 2836              		.loc 1 1224 5 is_stmt 1 view .LVU859
 2837              		.loc 1 1224 25 is_stmt 0 view .LVU860
 2838 0008 0330     		adds	r0, r0, #3
 2839              	.LVL320:
 2840              		.loc 1 1224 41 view .LVU861
 2841 000a 20F00300 		bic	r0, r0, #3
 2842              	.LVL321:
1225:rt_thread/src/kservice.c ****     /* allocate memory block from heap */
1226:rt_thread/src/kservice.c ****     ptr = rt_malloc(align_size);
 2843              		.loc 1 1226 5 is_stmt 1 view .LVU862
 2844              		.loc 1 1226 11 is_stmt 0 view .LVU863
 2845 000e 2044     		add	r0, r0, r4
 2846              	.LVL322:
 2847              		.loc 1 1226 11 view .LVU864
 2848 0010 FFF7FEFF 		bl	rt_malloc
 2849              	.LVL323:
1227:rt_thread/src/kservice.c ****     if (ptr != RT_NULL)
 2850              		.loc 1 1227 5 is_stmt 1 view .LVU865
 2851              		.loc 1 1227 8 is_stmt 0 view .LVU866
 2852 0014 30B1     		cbz	r0, .L286
1228:rt_thread/src/kservice.c ****     {
1229:rt_thread/src/kservice.c ****         /* the allocated memory block is aligned */
1230:rt_thread/src/kservice.c ****         if (((rt_ubase_t)ptr & (align - 1)) == 0)
 2853              		.loc 1 1230 9 is_stmt 1 view .LVU867
 2854              		.loc 1 1230 39 is_stmt 0 view .LVU868
 2855 0016 631E     		subs	r3, r4, #1
 2856              		.loc 1 1230 14 view .LVU869
 2857 0018 0246     		mov	r2, r0
 2858              		.loc 1 1230 12 view .LVU870
 2859 001a 1842     		tst	r0, r3
 2860 001c 03D1     		bne	.L288
1231:rt_thread/src/kservice.c ****         {
1232:rt_thread/src/kservice.c ****             align_ptr = (void *)((rt_ubase_t)ptr + align);
 2861              		.loc 1 1232 13 is_stmt 1 view .LVU871
 2862              		.loc 1 1232 50 is_stmt 0 view .LVU872
 2863 001e 2044     		add	r0, r0, r4
 2864              	.LVL324:
 2865              	.L289:
1233:rt_thread/src/kservice.c ****         }
1234:rt_thread/src/kservice.c ****         else
1235:rt_thread/src/kservice.c ****         {
1236:rt_thread/src/kservice.c ****             align_ptr = (void *)(((rt_ubase_t)ptr + (align - 1)) & ~(align - 1));
1237:rt_thread/src/kservice.c ****         }
1238:rt_thread/src/kservice.c **** 
1239:rt_thread/src/kservice.c ****         /* set the pointer before alignment pointer to the real pointer */
1240:rt_thread/src/kservice.c ****         *((rt_ubase_t *)((rt_ubase_t)align_ptr - sizeof(void *))) = (rt_ubase_t)ptr;
 2866              		.loc 1 1240 9 is_stmt 1 view .LVU873
ARM GAS  /tmp/ccPhSWJA.s 			page 83


 2867              		.loc 1 1240 67 is_stmt 0 view .LVU874
 2868 0020 40F8042C 		str	r2, [r0, #-4]
1241:rt_thread/src/kservice.c **** 
1242:rt_thread/src/kservice.c ****         ptr = align_ptr;
 2869              		.loc 1 1242 9 is_stmt 1 view .LVU875
 2870              	.LVL325:
1243:rt_thread/src/kservice.c ****     }
1244:rt_thread/src/kservice.c **** 
1245:rt_thread/src/kservice.c ****     return ptr;
 2871              		.loc 1 1245 5 view .LVU876
 2872              	.L286:
1246:rt_thread/src/kservice.c **** }
 2873              		.loc 1 1246 1 is_stmt 0 view .LVU877
 2874 0024 10BD     		pop	{r4, pc}
 2875              	.LVL326:
 2876              	.L288:
1236:rt_thread/src/kservice.c ****         }
 2877              		.loc 1 1236 13 is_stmt 1 view .LVU878
1236:rt_thread/src/kservice.c ****         }
 2878              		.loc 1 1236 51 is_stmt 0 view .LVU879
 2879 0026 2044     		add	r0, r0, r4
 2880 0028 0138     		subs	r0, r0, #1
1236:rt_thread/src/kservice.c ****         }
 2881              		.loc 1 1236 68 view .LVU880
 2882 002a 6442     		rsbs	r4, r4, #0
 2883              	.LVL327:
1236:rt_thread/src/kservice.c ****         }
 2884              		.loc 1 1236 66 view .LVU881
 2885 002c 2040     		ands	r0, r0, r4
 2886              	.LVL328:
1236:rt_thread/src/kservice.c ****         }
 2887              		.loc 1 1236 66 view .LVU882
 2888 002e F7E7     		b	.L289
 2889              		.cfi_endproc
 2890              	.LFE41:
 2892              		.section	.text.rt_free_align,"ax",%progbits
 2893              		.align	1
 2894              		.global	rt_free_align
 2895              		.syntax unified
 2896              		.thumb
 2897              		.thumb_func
 2899              	rt_free_align:
 2900              	.LVL329:
 2901              	.LFB42:
1247:rt_thread/src/kservice.c **** 
1248:rt_thread/src/kservice.c **** /**
1249:rt_thread/src/kservice.c ****  * This function release the memory block, which is allocated by
1250:rt_thread/src/kservice.c ****  * rt_malloc_align function and address is aligned.
1251:rt_thread/src/kservice.c ****  *
1252:rt_thread/src/kservice.c ****  * @param ptr the memory block pointer
1253:rt_thread/src/kservice.c ****  */
1254:rt_thread/src/kservice.c **** void rt_free_align(void *ptr)
1255:rt_thread/src/kservice.c **** {
 2902              		.loc 1 1255 1 is_stmt 1 view -0
 2903              		.cfi_startproc
 2904              		@ args = 0, pretend = 0, frame = 0
 2905              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /tmp/ccPhSWJA.s 			page 84


 2906              		.loc 1 1255 1 is_stmt 0 view .LVU884
 2907 0000 08B5     		push	{r3, lr}
 2908              	.LCFI50:
 2909              		.cfi_def_cfa_offset 8
 2910              		.cfi_offset 3, -8
 2911              		.cfi_offset 14, -4
1256:rt_thread/src/kservice.c ****     void *real_ptr;
 2912              		.loc 1 1256 5 is_stmt 1 view .LVU885
1257:rt_thread/src/kservice.c **** 
1258:rt_thread/src/kservice.c ****     real_ptr = (void *) * (rt_ubase_t *)((rt_ubase_t)ptr - sizeof(void *));
 2913              		.loc 1 1258 5 view .LVU886
 2914              	.LVL330:
1259:rt_thread/src/kservice.c ****     rt_free(real_ptr);
 2915              		.loc 1 1259 5 view .LVU887
 2916 0002 50F8040C 		ldr	r0, [r0, #-4]
 2917              	.LVL331:
 2918              		.loc 1 1259 5 is_stmt 0 view .LVU888
 2919 0006 FFF7FEFF 		bl	rt_free
 2920              	.LVL332:
1260:rt_thread/src/kservice.c **** }
 2921              		.loc 1 1260 1 view .LVU889
 2922 000a 08BD     		pop	{r3, pc}
 2923              		.cfi_endproc
 2924              	.LFE42:
 2926              		.section	.text.__rt_ffs,"ax",%progbits
 2927              		.align	1
 2928              		.global	__rt_ffs
 2929              		.syntax unified
 2930              		.thumb
 2931              		.thumb_func
 2933              	__rt_ffs:
 2934              	.LVL333:
 2935              	.LFB43:
1261:rt_thread/src/kservice.c **** #endif
1262:rt_thread/src/kservice.c **** 
1263:rt_thread/src/kservice.c **** #ifndef RT_USING_CPU_FFS
1264:rt_thread/src/kservice.c **** const rt_uint8_t __lowest_bit_bitmap[] =
1265:rt_thread/src/kservice.c **** {
1266:rt_thread/src/kservice.c ****     /* 00 */ 0, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0,
1267:rt_thread/src/kservice.c ****     /* 10 */ 4, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0,
1268:rt_thread/src/kservice.c ****     /* 20 */ 5, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0,
1269:rt_thread/src/kservice.c ****     /* 30 */ 4, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0,
1270:rt_thread/src/kservice.c ****     /* 40 */ 6, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0,
1271:rt_thread/src/kservice.c ****     /* 50 */ 4, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0,
1272:rt_thread/src/kservice.c ****     /* 60 */ 5, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0,
1273:rt_thread/src/kservice.c ****     /* 70 */ 4, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0,
1274:rt_thread/src/kservice.c ****     /* 80 */ 7, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0,
1275:rt_thread/src/kservice.c ****     /* 90 */ 4, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0,
1276:rt_thread/src/kservice.c ****     /* A0 */ 5, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0,
1277:rt_thread/src/kservice.c ****     /* B0 */ 4, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0,
1278:rt_thread/src/kservice.c ****     /* C0 */ 6, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0,
1279:rt_thread/src/kservice.c ****     /* D0 */ 4, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0,
1280:rt_thread/src/kservice.c ****     /* E0 */ 5, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0,
1281:rt_thread/src/kservice.c ****     /* F0 */ 4, 0, 1, 0, 2, 0, 1, 0, 3, 0, 1, 0, 2, 0, 1, 0
1282:rt_thread/src/kservice.c **** };
1283:rt_thread/src/kservice.c **** 
1284:rt_thread/src/kservice.c **** /**
ARM GAS  /tmp/ccPhSWJA.s 			page 85


1285:rt_thread/src/kservice.c ****  * This function finds the first bit set (beginning with the least significant bit)
1286:rt_thread/src/kservice.c ****  * in value and return the index of that bit.
1287:rt_thread/src/kservice.c ****  *
1288:rt_thread/src/kservice.c ****  * Bits are numbered starting at 1 (the least significant bit).  A return value of
1289:rt_thread/src/kservice.c ****  * zero from any of these functions means that the argument was zero.
1290:rt_thread/src/kservice.c ****  *
1291:rt_thread/src/kservice.c ****  * @return return the index of the first bit set. If value is 0, then this function
1292:rt_thread/src/kservice.c ****  * shall return 0.
1293:rt_thread/src/kservice.c ****  */
1294:rt_thread/src/kservice.c **** int __rt_ffs(int value)
1295:rt_thread/src/kservice.c **** {
 2936              		.loc 1 1295 1 is_stmt 1 view -0
 2937              		.cfi_startproc
 2938              		@ args = 0, pretend = 0, frame = 0
 2939              		@ frame_needed = 0, uses_anonymous_args = 0
 2940              		@ link register save eliminated.
1296:rt_thread/src/kservice.c ****     if (value == 0) return 0;
 2941              		.loc 1 1296 5 view .LVU891
 2942              		.loc 1 1296 8 is_stmt 0 view .LVU892
 2943 0000 E8B1     		cbz	r0, .L298
1297:rt_thread/src/kservice.c **** 
1298:rt_thread/src/kservice.c ****     if (value & 0xff)
 2944              		.loc 1 1298 5 is_stmt 1 view .LVU893
 2945              		.loc 1 1298 8 is_stmt 0 view .LVU894
 2946 0002 10F0FF02 		ands	r2, r0, #255
 2947 0006 0AD1     		bne	.L299
1299:rt_thread/src/kservice.c ****         return __lowest_bit_bitmap[value & 0xff] + 1;
1300:rt_thread/src/kservice.c **** 
1301:rt_thread/src/kservice.c ****     if (value & 0xff00)
 2948              		.loc 1 1301 5 is_stmt 1 view .LVU895
 2949              		.loc 1 1301 8 is_stmt 0 view .LVU896
 2950 0008 10F47F4F 		tst	r0, #65280
 2951 000c 0BD1     		bne	.L300
1302:rt_thread/src/kservice.c ****         return __lowest_bit_bitmap[(value & 0xff00) >> 8] + 9;
1303:rt_thread/src/kservice.c **** 
1304:rt_thread/src/kservice.c ****     if (value & 0xff0000)
 2952              		.loc 1 1304 5 is_stmt 1 view .LVU897
 2953              		.loc 1 1304 8 is_stmt 0 view .LVU898
 2954 000e 10F47F0F 		tst	r0, #16711680
 2955 0012 0ED1     		bne	.L301
1305:rt_thread/src/kservice.c ****         return __lowest_bit_bitmap[(value & 0xff0000) >> 16] + 17;
1306:rt_thread/src/kservice.c **** 
1307:rt_thread/src/kservice.c ****     return __lowest_bit_bitmap[(value & 0xff000000) >> 24] + 25;
 2956              		.loc 1 1307 5 is_stmt 1 view .LVU899
 2957              		.loc 1 1307 53 is_stmt 0 view .LVU900
 2958 0014 030E     		lsrs	r3, r0, #24
 2959              		.loc 1 1307 31 view .LVU901
 2960 0016 0A4A     		ldr	r2, .L302
 2961 0018 D05C     		ldrb	r0, [r2, r3]	@ zero_extendqisi2
 2962              	.LVL334:
 2963              		.loc 1 1307 60 view .LVU902
 2964 001a 1930     		adds	r0, r0, #25
 2965 001c 7047     		bx	lr
 2966              	.LVL335:
 2967              	.L299:
1299:rt_thread/src/kservice.c **** 
 2968              		.loc 1 1299 9 is_stmt 1 view .LVU903
ARM GAS  /tmp/ccPhSWJA.s 			page 86


1299:rt_thread/src/kservice.c **** 
 2969              		.loc 1 1299 35 is_stmt 0 view .LVU904
 2970 001e 084B     		ldr	r3, .L302
 2971 0020 985C     		ldrb	r0, [r3, r2]	@ zero_extendqisi2
 2972              	.LVL336:
1299:rt_thread/src/kservice.c **** 
 2973              		.loc 1 1299 50 view .LVU905
 2974 0022 0130     		adds	r0, r0, #1
 2975 0024 7047     		bx	lr
 2976              	.LVL337:
 2977              	.L300:
1302:rt_thread/src/kservice.c ****         return __lowest_bit_bitmap[(value & 0xff00) >> 8] + 9;
 2978              		.loc 1 1302 9 is_stmt 1 view .LVU906
1302:rt_thread/src/kservice.c ****         return __lowest_bit_bitmap[(value & 0xff00) >> 8] + 9;
 2979              		.loc 1 1302 53 is_stmt 0 view .LVU907
 2980 0026 C0F30723 		ubfx	r3, r0, #8, #8
1302:rt_thread/src/kservice.c ****         return __lowest_bit_bitmap[(value & 0xff00) >> 8] + 9;
 2981              		.loc 1 1302 35 view .LVU908
 2982 002a 054A     		ldr	r2, .L302
 2983 002c D05C     		ldrb	r0, [r2, r3]	@ zero_extendqisi2
 2984              	.LVL338:
1302:rt_thread/src/kservice.c ****         return __lowest_bit_bitmap[(value & 0xff00) >> 8] + 9;
 2985              		.loc 1 1302 59 view .LVU909
 2986 002e 0930     		adds	r0, r0, #9
 2987 0030 7047     		bx	lr
 2988              	.LVL339:
 2989              	.L301:
1305:rt_thread/src/kservice.c ****         return __lowest_bit_bitmap[(value & 0xff0000) >> 16] + 17;
 2990              		.loc 1 1305 9 is_stmt 1 view .LVU910
1305:rt_thread/src/kservice.c ****         return __lowest_bit_bitmap[(value & 0xff0000) >> 16] + 17;
 2991              		.loc 1 1305 55 is_stmt 0 view .LVU911
 2992 0032 C0F30743 		ubfx	r3, r0, #16, #8
1305:rt_thread/src/kservice.c ****         return __lowest_bit_bitmap[(value & 0xff0000) >> 16] + 17;
 2993              		.loc 1 1305 35 view .LVU912
 2994 0036 024A     		ldr	r2, .L302
 2995 0038 D05C     		ldrb	r0, [r2, r3]	@ zero_extendqisi2
 2996              	.LVL340:
1305:rt_thread/src/kservice.c ****         return __lowest_bit_bitmap[(value & 0xff0000) >> 16] + 17;
 2997              		.loc 1 1305 62 view .LVU913
 2998 003a 1130     		adds	r0, r0, #17
 2999 003c 7047     		bx	lr
 3000              	.LVL341:
 3001              	.L298:
1308:rt_thread/src/kservice.c **** }
 3002              		.loc 1 1308 1 view .LVU914
 3003 003e 7047     		bx	lr
 3004              	.L303:
 3005              		.align	2
 3006              	.L302:
 3007 0040 00000000 		.word	.LANCHOR4
 3008              		.cfi_endproc
 3009              	.LFE43:
 3011              		.global	__lowest_bit_bitmap
 3012              		.section	.bss.__rt_errno,"aw",%nobits
 3013              		.align	2
 3014              		.set	.LANCHOR2,. + 0
 3017              	__rt_errno:
ARM GAS  /tmp/ccPhSWJA.s 			page 87


 3018 0000 00000000 		.space	4
 3019              		.section	.bss.rt_log_buf.0,"aw",%nobits
 3020              		.align	2
 3021              		.set	.LANCHOR3,. + 0
 3024              	rt_log_buf.0:
 3025 0000 00000000 		.space	128
 3025      00000000 
 3025      00000000 
 3025      00000000 
 3025      00000000 
 3026              		.section	.rodata.__lowest_bit_bitmap,"a"
 3027              		.align	2
 3028              		.set	.LANCHOR4,. + 0
 3031              	__lowest_bit_bitmap:
 3032 0000 00000100 		.ascii	"\000\000\001\000\002\000\001\000\003\000\001\000\002"
 3032      02000100 
 3032      03000100 
 3032      02
 3033 000d 00010004 		.ascii	"\000\001\000\004\000\001\000\002\000\001\000\003\000"
 3033      00010002 
 3033      00010003 
 3033      00
 3034 001a 01000200 		.ascii	"\001\000\002\000\001\000\005\000\001\000\002\000\001"
 3034      01000500 
 3034      01000200 
 3034      01
 3035 0027 00030001 		.ascii	"\000\003\000\001\000\002\000\001\000\004\000\001\000"
 3035      00020001 
 3035      00040001 
 3035      00
 3036 0034 02000100 		.ascii	"\002\000\001\000\003\000\001\000\002\000\001\000\006"
 3036      03000100 
 3036      02000100 
 3036      06
 3037 0041 00010002 		.ascii	"\000\001\000\002\000\001\000\003\000\001\000\002\000"
 3037      00010003 
 3037      00010002 
 3037      00
 3038 004e 01000400 		.ascii	"\001\000\004\000\001\000\002\000\001\000\003\000\001"
 3038      01000200 
 3038      01000300 
 3038      01
 3039 005b 00020001 		.ascii	"\000\002\000\001\000\005\000\001\000\002\000\001\000"
 3039      00050001 
 3039      00020001 
 3039      00
 3040 0068 03000100 		.ascii	"\003\000\001\000\002\000\001\000\004\000\001\000\002"
 3040      02000100 
 3040      04000100 
 3040      02
 3041 0075 00010003 		.ascii	"\000\001\000\003\000\001\000\002\000\001\000\007\000"
 3041      00010002 
 3041      00010007 
 3041      00
 3042 0082 01000200 		.ascii	"\001\000\002\000\001\000\003\000\001\000\002\000\001"
 3042      01000300 
 3042      01000200 
ARM GAS  /tmp/ccPhSWJA.s 			page 88


 3042      01
 3043 008f 00040001 		.ascii	"\000\004\000\001\000\002\000\001\000\003\000\001\000"
 3043      00020001 
 3043      00030001 
 3043      00
 3044 009c 02000100 		.ascii	"\002\000\001\000\005\000\001\000\002\000\001\000\003"
 3044      05000100 
 3044      02000100 
 3044      03
 3045 00a9 00010002 		.ascii	"\000\001\000\002\000\001\000\004\000\001\000\002\000"
 3045      00010004 
 3045      00010002 
 3045      00
 3046 00b6 01000300 		.ascii	"\001\000\003\000\001\000\002\000\001\000\006\000\001"
 3046      01000200 
 3046      01000600 
 3046      01
 3047 00c3 00020001 		.ascii	"\000\002\000\001\000\003\000\001\000\002\000\001\000"
 3047      00030001 
 3047      00020001 
 3047      00
 3048 00d0 04000100 		.ascii	"\004\000\001\000\002\000\001\000\003\000\001\000\002"
 3048      02000100 
 3048      03000100 
 3048      02
 3049 00dd 00010005 		.ascii	"\000\001\000\005\000\001\000\002\000\001\000\003\000"
 3049      00010002 
 3049      00010003 
 3049      00
 3050 00ea 01000200 		.ascii	"\001\000\002\000\001\000\004\000\001\000\002\000\001"
 3050      01000400 
 3050      01000200 
 3050      01
 3051 00f7 00030001 		.ascii	"\000\003\000\001\000\002\000\001\000"
 3051      00020001 
 3051      00
 3052              		.section	.rodata.large_digits.2,"a"
 3053              		.align	2
 3054              		.set	.LANCHOR1,. + 0
 3057              	large_digits.2:
 3058 0000 30313233 		.ascii	"0123456789ABCDEF\000"
 3058      34353637 
 3058      38394142 
 3058      43444546 
 3058      00
 3059              		.section	.rodata.small_digits.1,"a"
 3060              		.align	2
 3061              		.set	.LANCHOR0,. + 0
 3064              	small_digits.1:
 3065 0000 30313233 		.ascii	"0123456789abcdef\000"
 3065      34353637 
 3065      38396162 
 3065      63646566 
 3065      00
 3066              		.text
 3067              	.Letext0:
 3068              		.file 2 "rt_thread/include/rtdef.h"
ARM GAS  /tmp/ccPhSWJA.s 			page 89


 3069              		.file 3 "rt_thread/include/rtthread.h"
 3070              		.file 4 "<built-in>"
ARM GAS  /tmp/ccPhSWJA.s 			page 90


DEFINED SYMBOLS
                            *ABS*:0000000000000000 kservice.c
     /tmp/ccPhSWJA.s:18     .text.print_number:0000000000000000 $t
     /tmp/ccPhSWJA.s:23     .text.print_number:0000000000000000 print_number
     /tmp/ccPhSWJA.s:422    .text.print_number:0000000000000160 $d
     /tmp/ccPhSWJA.s:429    .text.rt_get_errno:0000000000000000 $t
     /tmp/ccPhSWJA.s:435    .text.rt_get_errno:0000000000000000 rt_get_errno
     /tmp/ccPhSWJA.s:486    .text.rt_get_errno:0000000000000020 $d
     /tmp/ccPhSWJA.s:491    .text.rt_set_errno:0000000000000000 $t
     /tmp/ccPhSWJA.s:497    .text.rt_set_errno:0000000000000000 rt_set_errno
     /tmp/ccPhSWJA.s:549    .text.rt_set_errno:0000000000000020 $d
     /tmp/ccPhSWJA.s:554    .text._rt_errno:0000000000000000 $t
     /tmp/ccPhSWJA.s:560    .text._rt_errno:0000000000000000 _rt_errno
     /tmp/ccPhSWJA.s:607    .text._rt_errno:000000000000001c $d
     /tmp/ccPhSWJA.s:612    .text.rt_memset:0000000000000000 $t
     /tmp/ccPhSWJA.s:618    .text.rt_memset:0000000000000000 rt_memset
     /tmp/ccPhSWJA.s:768    .text.rt_memcpy:0000000000000000 $t
     /tmp/ccPhSWJA.s:774    .text.rt_memcpy:0000000000000000 rt_memcpy
     /tmp/ccPhSWJA.s:929    .text.rt_memmove:0000000000000000 $t
     /tmp/ccPhSWJA.s:935    .text.rt_memmove:0000000000000000 rt_memmove
     /tmp/ccPhSWJA.s:1019   .text.rt_memcmp:0000000000000000 $t
     /tmp/ccPhSWJA.s:1025   .text.rt_memcmp:0000000000000000 rt_memcmp
     /tmp/ccPhSWJA.s:1079   .text.rt_strcasecmp:0000000000000000 $t
     /tmp/ccPhSWJA.s:1085   .text.rt_strcasecmp:0000000000000000 rt_strcasecmp
     /tmp/ccPhSWJA.s:1159   .text.rt_strncpy:0000000000000000 $t
     /tmp/ccPhSWJA.s:1165   .text.rt_strncpy:0000000000000000 rt_strncpy
     /tmp/ccPhSWJA.s:1246   .text.rt_strncmp:0000000000000000 $t
     /tmp/ccPhSWJA.s:1252   .text.rt_strncmp:0000000000000000 rt_strncmp
     /tmp/ccPhSWJA.s:1317   .text.rt_strcmp:0000000000000000 $t
     /tmp/ccPhSWJA.s:1323   .text.rt_strcmp:0000000000000000 rt_strcmp
     /tmp/ccPhSWJA.s:1366   .text.rt_strnlen:0000000000000000 $t
     /tmp/ccPhSWJA.s:1372   .text.rt_strnlen:0000000000000000 rt_strnlen
     /tmp/ccPhSWJA.s:1413   .text.rt_strlen:0000000000000000 $t
     /tmp/ccPhSWJA.s:1419   .text.rt_strlen:0000000000000000 rt_strlen
     /tmp/ccPhSWJA.s:1455   .text.rt_strstr:0000000000000000 $t
     /tmp/ccPhSWJA.s:1461   .text.rt_strstr:0000000000000000 rt_strstr
     /tmp/ccPhSWJA.s:1544   .text.rt_strdup:0000000000000000 $t
     /tmp/ccPhSWJA.s:1550   .text.rt_strdup:0000000000000000 rt_strdup
     /tmp/ccPhSWJA.s:1597   .rodata.rt_vsnprintf.str1.4:0000000000000000 $d
     /tmp/ccPhSWJA.s:1601   .text.rt_vsnprintf:0000000000000000 $t
     /tmp/ccPhSWJA.s:1607   .text.rt_vsnprintf:0000000000000000 rt_vsnprintf
     /tmp/ccPhSWJA.s:1956   .text.rt_vsnprintf:000000000000013c $d
     /tmp/ccPhSWJA.s:2439   .text.rt_vsnprintf:00000000000002f4 $d
     /tmp/ccPhSWJA.s:2444   .text.rt_snprintf:0000000000000000 $t
     /tmp/ccPhSWJA.s:2450   .text.rt_snprintf:0000000000000000 rt_snprintf
     /tmp/ccPhSWJA.s:2501   .text.rt_vsprintf:0000000000000000 $t
     /tmp/ccPhSWJA.s:2507   .text.rt_vsprintf:0000000000000000 rt_vsprintf
     /tmp/ccPhSWJA.s:2537   .text.rt_sprintf:0000000000000000 $t
     /tmp/ccPhSWJA.s:2543   .text.rt_sprintf:0000000000000000 rt_sprintf
     /tmp/ccPhSWJA.s:2596   .text.rt_hw_console_output:0000000000000000 $t
     /tmp/ccPhSWJA.s:2602   .text.rt_hw_console_output:0000000000000000 rt_hw_console_output
     /tmp/ccPhSWJA.s:2616   .text.rt_kputs:0000000000000000 $t
     /tmp/ccPhSWJA.s:2622   .text.rt_kputs:0000000000000000 rt_kputs
     /tmp/ccPhSWJA.s:2655   .text.rt_kprintf:0000000000000000 $t
     /tmp/ccPhSWJA.s:2661   .text.rt_kprintf:0000000000000000 rt_kprintf
     /tmp/ccPhSWJA.s:2725   .text.rt_kprintf:0000000000000028 $d
     /tmp/ccPhSWJA.s:2730   .rodata.rt_show_version.str1.4:0000000000000000 $d
ARM GAS  /tmp/ccPhSWJA.s 			page 91


     /tmp/ccPhSWJA.s:2746   .text.rt_show_version:0000000000000000 $t
     /tmp/ccPhSWJA.s:2752   .text.rt_show_version:0000000000000000 rt_show_version
     /tmp/ccPhSWJA.s:2795   .text.rt_show_version:000000000000002c $d
     /tmp/ccPhSWJA.s:2804   .text.rt_malloc_align:0000000000000000 $t
     /tmp/ccPhSWJA.s:2810   .text.rt_malloc_align:0000000000000000 rt_malloc_align
     /tmp/ccPhSWJA.s:2893   .text.rt_free_align:0000000000000000 $t
     /tmp/ccPhSWJA.s:2899   .text.rt_free_align:0000000000000000 rt_free_align
     /tmp/ccPhSWJA.s:2927   .text.__rt_ffs:0000000000000000 $t
     /tmp/ccPhSWJA.s:2933   .text.__rt_ffs:0000000000000000 __rt_ffs
     /tmp/ccPhSWJA.s:3007   .text.__rt_ffs:0000000000000040 $d
     /tmp/ccPhSWJA.s:3031   .rodata.__lowest_bit_bitmap:0000000000000000 __lowest_bit_bitmap
     /tmp/ccPhSWJA.s:3013   .bss.__rt_errno:0000000000000000 $d
     /tmp/ccPhSWJA.s:3017   .bss.__rt_errno:0000000000000000 __rt_errno
     /tmp/ccPhSWJA.s:3020   .bss.rt_log_buf.0:0000000000000000 $d
     /tmp/ccPhSWJA.s:3024   .bss.rt_log_buf.0:0000000000000000 rt_log_buf.0
     /tmp/ccPhSWJA.s:3027   .rodata.__lowest_bit_bitmap:0000000000000000 $d
     /tmp/ccPhSWJA.s:3053   .rodata.large_digits.2:0000000000000000 $d
     /tmp/ccPhSWJA.s:3057   .rodata.large_digits.2:0000000000000000 large_digits.2
     /tmp/ccPhSWJA.s:3060   .rodata.small_digits.1:0000000000000000 $d
     /tmp/ccPhSWJA.s:3064   .rodata.small_digits.1:0000000000000000 small_digits.1
     /tmp/ccPhSWJA.s:1989   .text.rt_vsnprintf:000000000000015d $d
     /tmp/ccPhSWJA.s:1989   .text.rt_vsnprintf:000000000000015e $t

UNDEFINED SYMBOLS
rt_interrupt_get_nest
rt_thread_self
rt_malloc
rt_free
